<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocuWare.Platform.ServerClient</name>
    </assembly>
    <members>
        <member name="T:DocuWare.Platform.ServerClient.IResultlistTransformer">
            <summary>
            
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.IResultlistTransformer.ToQueryResult(DocuWare.Platform.ServerClient.DocumentsQueryTableResult)">
            <summary>
            
            </summary>
            <param name="resultTable"></param>
            <returns></returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IMimeTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.IMimeTypeConverter.ConvertToExtenstion(System.String)">
            <summary>
            
            </summary>
            <param name="mimeType"></param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.IMimeTypeConverter.ConvertToMimeType(System.String)">
            <summary>
            
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TableResultHeader">
            <remarks/>
            <summary>
            Header for a column table result from document query
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameTotalPageCount">
            <summary>
            The name of the field for total page count.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameTextPreview">
            <summary>
            The name of the field for text preview.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameCabinetname">
            <summary>
            The name of the field for file cabinet name.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsCold">
            <summary>
            The name of the field for whether it is a cold document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsCopyRightProtected">
            <summary>
            The name of the field for whether the document is right protected.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsCheckedOut">
            <summary>
            The name of the field for whether the document is checked out.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsDbRecord">
            <summary>
            The name of the field for whether the document is database record.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsVoiceAvailable">
            <summary>
            The name of the field for whether the document has voice annotation.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsDeleted">
            <summary>
            The name of the field for whether the document is deleted.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsProtected">
            <summary>
            The name of the field for whether the document is protected.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameHasAppendedDocuments">
            <summary>
            The name of the field for whether the document has appended documents.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameIsEmail">
            <summary>
            The name of the field for whether the document is email.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameVersionStatus">
            <summary>
            The name of the field for the version status of the document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameCreatedAtLocalTimeZone">
            <summary>
            The name of the field for the date created at the local time zone of the client.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameDocumentIntellixUrl">
            <summary>
            The name of the field for document intellix URL.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameFirstSectionId">
            <summary>
            The name of the field for first section identifier.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameThumbnailEtag">
            <summary>
            The name of the field for thumbnail etag.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultHeader.FieldNameDocumentTitle">
            <summary>
            The name of the field for thumbnail etag.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultHeader.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultHeader.GetItemChoiceType">
            <summary>
            Gets the type of the item choice.
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Invalid header type!</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultHeader.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultHeader.FieldName">
            <summary>
            Contains the internal name of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultHeader.FieldLabel">
            <summary>
            Contains the label of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultHeader.Kind">
            <summary>
            Kind of the field.
                     System, index or additional (calculated fields like total page count, special values like text preview etc.).
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultHeader.IsDocumentName">
            <summary>
            Indicates whether the field is document name
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ResultlistTransformationSetup">
            <summary>
            This class scans the result list fields returned as table and creates some mappings in order to fast
            access field values.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultlistTransformationSetup.specialFieldsIndexes">
            <summary>
            The special fields indexes.
            </summary>
            <remarks>For every "special" field of the <see cref="T:DocuWare.Platform.ServerClient.ResultlistTransformationSetup.SpecialFields"/> enum, we write the position (index) of the "special" field within the result list
            returned by the Content Server.</remarks>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultlistTransformationSetup.docnameFieldIndex">
            <summary>
            The index of the document name field within the result list
            returned by the Content Server.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultlistTransformationSetup.cabinetNameFieldIndex">
            <summary>
            The index of the cabinet name special field within the result list
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultlistTransformationSetup.#ctor(System.Collections.Generic.IReadOnlyCollection{DocuWare.Platform.ServerClient.TableResultHeader})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.ResultlistTransformationSetup"/> class.
            It takes the first row of a result set and the field settings and builds the indexes.
            </summary>
            <param name="headers">Fields of a row in the result list</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexFieldExtensions">
            <summary>
            Defines extenstion methods for <see cref="T:DocuWare.Platform.ServerClient.DocumentIndexField"/>
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentIndexFieldExtensions.RegexHighlyDiscouraged">
            <summary>
            Defines regex which matches the hightly descouraged symbols for xml.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexFieldExtensions.ReplaceDiscouragedCharacters(DocuWare.Platform.ServerClient.DocumentIndexField,System.String)">
            <summary>
            Replaces the highly xml discoraged characters with a specified value.
            </summary>
            <remarks>
            For more information about discoraged characters in XML you could check <see href="https://en.wikipedia.org/wiki/Valid_characters_in_XML#XML_1.1">wikipedia</see>.
            </remarks>
            <param name="field">The field that will be validate for discoraged characters.</param>
            <param name="value">The value that will be use the discoraged characters to be replaced with.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexFieldExtensions.RemoveDiscouragedCharacters(DocuWare.Platform.ServerClient.DocumentIndexField)">
            <summary>
            Removess the highly xml discoraged characters from the value of the document index field.
            </summary>
            <remarks>
            For more information about discoraged characters in XML you could check <see href="https://en.wikipedia.org/wiki/Valid_characters_in_XML#XML_1.1">wikipedia</see>.
            </remarks>
            <param name="field">The field that will be validate for discoraged characters.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentsQueryExtensionsBase">
            <summary>
            Extensions for the document query.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryExtensionsBase.GetDocumentQueryResultAsCsv(DocuWare.Platform.ServerClient.DocumentsQuery,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents result as a stream which content is CSV formated.
            </summary>
            <param name="documentsQuery">The document query.</param>
            <param name="dataToSend">The dialog query expression.</param>
            <returns>The stream that contain the csv formated data.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryExtensionsBase.GetDocumentQueryResultAsCsvAsync(DocuWare.Platform.ServerClient.DocumentsQuery,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents result as a stream which content is CSV formated.
            </summary>
            <param name="documentsQuery">The document query.</param>
            <param name="dataToSend">The dialog query expression.</param>
            <returns>The stream that contain the csv formated data.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryExtensionsBase.GetDocumentQueryResultAsCsv(DocuWare.Platform.ServerClient.DocumentsQuery,DocuWare.Platform.ServerClient.CsvExpression)">
            <summary>
            Gets the documents result as a stream which content is CSV formated.
            </summary>
            <param name="documentsQuery">The document query.</param>
            <param name="dataToSend">Specific csv settings and dialog expressions.</param>
            <returns>The stream that contain the csv formated data.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryExtensionsBase.GetDocumentQueryResultAsCsvAsync(DocuWare.Platform.ServerClient.DocumentsQuery,DocuWare.Platform.ServerClient.CsvExpression)">
            <summary>
            Gets the documents result as a stream which content is CSV formated.
            </summary>
            <param name="documentsQuery">The document query.</param>
            <param name="dataToSend">Specific csv settings and dialog expressions.</param>
            <returns>The stream that contain the csv formated data.</returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EasyCheckoutResult">
            <summary>
            The result of a checkout operation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EasyCheckoutResult.EncodedFileName">
            <summary>
            Gets the name of the encoded file.
            </summary>
            <value>
            The name of the encoded file.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EasyCheckoutResult.Response">
            <summary>
            Gets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyCheckoutResult.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase">
            <summary>
            Some extensions for simple file uploads.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadSingleDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads the specified file as new document to a basket asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="file">The file.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadSingleDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads the specified file as new document to a basket.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="file">The file.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadSingleDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.DocumentIndexField[])">
            <summary>
            Uploads the specified file as new document to a basket or to a file cabinet asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="indexFields">The index fields.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadSingleDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.DocumentIndexField[])">
            <summary>
            Uploads the specified file as new document to a basket or to a file cabinet.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="indexFields">The index fields.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyImportArchive(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.ImportSettings)">
            <summary>
            Imports the specified file into a file cabinet.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="importSettings">The settings of the import.</param>
            <returns>
            Returns the result of the import operation
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyImportArchiveAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.ImportSettings)">
            <summary>
            Imports asynchronously the specified file into a file cabinet.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="importSettings">The settings of the import.</param>
            <returns>
            Returns the result of the import operation
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasySynchronize(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.SynchronizationSettings)">
            <summary>
            Synchronizes the specified file into a file cabinet.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="synchronizeSettings">The settings of the synchronization.</param>
            <returns>
            Returns the result of the synchronization operation.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasySynchronizeAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.SynchronizationSettings)">
            <summary>
            Synchronizes asynchronously the specified file into a file cabinet.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="synchronizeSettings">The settings of the synchronization.</param>
            <returns>
            Returns the result of the synchronization operation.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads array of files as new document asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="files">The files.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads array of files as new document.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="files">The files.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.DocumentIndexField[])">
            <summary>
            Uploads array of files as new document asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="indexFields">The index fields.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.DocumentIndexField[])">
            <summary>
            Uploads array of files as new document.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="indexFields">The index fields.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocumentAsync(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads array of files as new document via a store dialog asynchronously.
            </summary>
            <param name="dialogInfo">The store dialog.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="files">The array of files.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadDocument(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Services.Http.Client.IFileUploadInfo[],DocuWare.Platform.ServerClient.Document)">
            <summary>
            Uploads array of files as new document via a store dialog.
            </summary>
            <param name="dialogInfo">The store dialog.</param>
            <param name="documentMetaData">The document meta data. Currently only the fields are used.</param>
            <param name="files">The array of files.</param>
            <returns>
            The uploaded document's metadata.
            </returns>
            <remarks>The document is uploaded as optimal as possible. 
            That is, if the document is small enough it is uploaded with a single request. 
            If the file is large, the upload is done chunkwise.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadFileAsync(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Uploads the specified file as new section to the specified document asynchronously.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>The metadata of the added section.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyUploadFile(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Uploads the specified file as new section to the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>The metadata of the added section.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyReplaceFileAsync(DocuWare.Platform.ServerClient.Section,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Uploads the specified file as new section to the specified document asynchronously.
            </summary>
            <param name="section">The section to modify.</param>
            <param name="file">The file marking the new content of the section.</param>
            <returns>
            The metadata of the modified section.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyFileUploadExtensionsBase.EasyReplaceFile(DocuWare.Platform.ServerClient.Section,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Uploads the specified file as new section to the specified document.
            </summary>
            <param name="section">The section to modify.</param>
            <param name="file">The file marking the new content of the section.</param>
            <returns>
            The metadata of the modified section.
            </returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase">
            <summary>
            Extensions for the file cabinet.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ImportArchive(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.ImportSettings,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Imports an archive in Docuware.
            </summary>
            <param name="fileCabinet">The file cabinet in which the document will be imported.</param>
            <param name="settings">The settings of the import.</param>
            <param name="file">The file which represnets the archive.</param>
            <returns>Returns an import result information.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ImportArchiveAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.ImportSettings,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Imports asynchronously an archive in Docuware.
            </summary>
            <param name="fileCabinet">The file cabinet in which the document will be imported.</param>
            <param name="settings">The settings of the import.</param>
            <param name="file">The file which represnets the archive.</param>
            <returns>Returns an import result information.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.Synchronize(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.SynchronizationSettings,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Synchronizes a document with external version.
            </summary>
            <param name="fileCabinet">The file cabinet which contains the document that will be synchronized.</param>
            <param name="settings">The settings of the synchronization.</param>
            <param name="file">The file which represnets the archive.</param>
            <returns>Returns an import result information from the synchronization.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.SynchronizeAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.SynchronizationSettings,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Synchronizes a document with external version.
            </summary>
            <param name="fileCabinet">The file cabinet which contains the document that will be synchronized.</param>
            <param name="settings">The settings of the synchronization.</param>
            <param name="file">The file which represnets the archive.</param>
            <returns>Returns an import result information from the synchronization.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the document asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>A task which uploads the document and returns the uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the specified document.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the specified document asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <returns>A task which uploads the document and returns the uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the specified document.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocument(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the document.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadDocumentAsync(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Uploads the document asynchronous.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>A task which uploads the document and returns the uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.AddDocumentSections(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Appends one or more new sections to the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>The modified document.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.AddDocumentSectionsAsync(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[])">
            <summary>
            Appends one or more new sections to the specified document asynchronously.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>
            A task which uploads the document and returns the uploaded document's metadata.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.UploadSectionAsync(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Appends one section to the specified document asynchronously.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <returns>
            A task which uploads the document and returns the uploaded section's metadata.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the specified document asynchronously in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the specified document in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkImportArchiveAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.ImportSettings,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the import package asynchronously in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="importSettings">The settings of the import.</param>
            <returns>Returns the result of the import operation.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkImportArchive(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.ImportSettings,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the import package in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="importSettings">The settings of the import.</param>
            <returns>Returns the result of the import operation.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkSynchronizeAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.SynchronizationSettings,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the specified synchronization package asynchronously in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="synchronizationSettings">The settings of the synchronization.</param>
            <returns>Returns the result of the synchronization operation.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkSynchronize(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.SynchronizationSettings,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Uploads the specified synchronization package in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="synchronizationSettings">The settings of the synchronization.</param>
            <returns>Returns the result of the synchronization operation.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Uploads the specified asynchronously document in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Upload the specified document in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Upload the specified document asynchronously in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Upload the specified document in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Upload the specified document asynchronously in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.FileCabinet,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Upload the specified document in chunks.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Upload the specified document asynchronously in chunks.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Upload the specified document in chunks.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="document">The document.</param>
            <returns>The uploaded document's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocumentAsync(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Upload the specified document asynchronously in chunks.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="document">The document.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadDocument(DocuWare.Platform.ServerClient.DialogInfo,DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo[],System.Int32)">
            <summary>
            Upload the specified document in chunks.
            </summary>
            <param name="dialog">The store dialog which is used to fill index data.</param>
            <param name="document">The document.</param>
            <param name="files">The files.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadSectionAsync(DocuWare.Platform.ServerClient.Section,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Replaces the content of a section with the passed file asynchronously.
            Uploads the specified file in chunks.
            </summary>
            <param name="section">The section whose content is replaced.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The changed section's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkUploadSection(DocuWare.Platform.ServerClient.Section,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Replaces the content of a section with the passed file
            Uploads the specified file in chunks.
            </summary>
            <param name="section">The section whose content is replaced.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>The changed section's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkAddSectionAsync(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Adds a section to a document asynchronously using chunked upload.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk in bytes.</param>
            <returns>The new section's metadata.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetExtensionsBase.ChunkAddSection(DocuWare.Platform.ServerClient.Document,DocuWare.Services.Http.Client.IFileUploadInfo,System.Int32)">
            <summary>
            Adds a section to a document using chunked upload.
            </summary>
            <param name="document">The document.</param>
            <param name="file">The file.</param>
            <param name="chunkSize">Size of the chunk in bytes.</param>
            <returns>The new section's metadata.</returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IChunkable">
            <summary>
            An interface for items which can be uploaded in chunks.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.IChunkable.FileChunk">
            <summary>
            Gets the file chunk.
            </summary>
            <value>
            The file chunk.
            </value>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Document">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:DocuWare.Platform.ServerClient.DocumentIndexField"/> with the specified field name.
            </summary>
            <value>
            The <see cref="T:DocuWare.Platform.ServerClient.DocumentIndexField"/>.
            </value>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">The field with the name ' + fieldName + ' is not part of the fields.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Fields">
            <summary>
            Fields of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Suggestions">
            <summary>
            Fields of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Flags">
            <summary>
            Flags of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Version">
            <summary>
            Version of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.TextShot">
            <summary>
            Obsolete. Use TextShots property. Content textshot (OCR) of the document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Sections">
            <summary>
            Sections of the document. Contain no sections if document is DBRecord
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ContentType">
            <summary>
            The internet media type of the document. If there is no section this value is missing.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.FileChunk">
            <summary>
            Contains data for a file chunk during a big file upload. This data is created on the server of every chunk request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ApplicationProperties">
            <summary>
            Define application specific properties. Different applications store specific application here
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.HaveMoreTotalPages">
            <summary>
            Contains true if all pages are known so PageCount contains exact number the pages in section. If the value is set to false there are more pagesm but at least the number set in PageCount
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.HasTextAnnotation">
            <summary>
            Contains true if document has a text annotation (the first section of the document has text annotation)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.HasXmlDigitalSignatures">
            <summary>
            Contains true if document contains at least one XML Digital signature
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.TotalPages">
            <summary>
            The number of pages of this section, if known. If it is unknown, this value is -1.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Id">
            <summary>
            Document identity
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.Title">
            <summary>
            The title of the document, if it exists.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.LastModified">
            <summary>
            Contains last modification date of the document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.CreatedAt">
            <summary>
            Contains creation date of the document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.FileSize">
            <summary>
            The sum of the size of all section files and document header.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.SectionCount">
            <summary>
            The number of sections of this document. This number is equal to the sequence length of the Sections element.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.IntellixTrust">
            <summary>
            Intellix status
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.VersionStatus">
            <summary>
            Version management status of the document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ContentDivideOperationRelationLink">
            <summary>Gets the Uri of the link for the relation “contentDivideOperation”.</summary>
            <remarks>Returns the uri of the link for the relation “contentDivideOperation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ClippedDocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “clippedDocuments”.</summary>
            <remarks>Returns the uri of the link for the relation “clippedDocuments” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.UnclipRelationLink">
            <summary>Gets the Uri of the link for the relation “unclip”.</summary>
            <remarks>Returns the uri of the link for the relation “unclip” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.PositionsRelationLink">
            <summary>Gets the Uri of the link for the relation “positions”.</summary>
            <remarks>Returns the uri of the link for the relation “positions” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.LockRelationLink">
            <summary>Gets the Uri of the link for the relation “lock”.</summary>
            <remarks>Returns the uri of the link for the relation “lock” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ThumbnailRelationLink">
            <summary>Gets the Uri of the link for the relation “thumbnail”.</summary>
            <remarks>Returns the uri of the link for the relation “thumbnail” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.DeepZoomImageRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImage”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImage” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.DeepZoomImageWithAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImageWithAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ResultListIconRelationLink">
            <summary>Gets the Uri of the link for the relation “resultListIcon”.</summary>
            <remarks>Returns the uri of the link for the relation “resultListIcon” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.FieldsRelationLink">
            <summary>Gets the Uri of the link for the relation “fields”.</summary>
            <remarks>Returns the uri of the link for the relation “fields” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.SuggestionsRelationLink">
            <summary>Gets the Uri of the link for the relation “suggestions”.</summary>
            <remarks>Returns the uri of the link for the relation “suggestions” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.SectionsRelationLink">
            <summary>Gets the Uri of the link for the relation “sections”.</summary>
            <remarks>Returns the uri of the link for the relation “sections” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ContentRelationLink">
            <summary>Gets the Uri of the link for the relation “content”.</summary>
            <remarks>Returns the uri of the link for the relation “content” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.FileDownloadRelationLink">
            <summary>Gets the Uri of the link for the relation “fileDownload”.</summary>
            <remarks>Returns the uri of the link for the relation “fileDownload” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.TextAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “textAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “textAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ChecksumStatusRelationLink">
            <summary>Gets the Uri of the link for the relation “checksumStatus”.</summary>
            <remarks>Returns the uri of the link for the relation “checksumStatus” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.XmlDSigContentRelationLink">
            <summary>Gets the Uri of the link for the relation “xmlDSigContent”.</summary>
            <remarks>Returns the uri of the link for the relation “xmlDSigContent” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.RightsRelationLink">
            <summary>Gets the Uri of the link for the relation “rights”.</summary>
            <remarks>Returns the uri of the link for the relation “rights” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.ProcessDocumentActionRelationLink">
            <summary>Gets the Uri of the link for the relation “processDocumentAction”.</summary>
            <remarks>Returns the uri of the link for the relation “processDocumentAction” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.AppPropertiesRelationLink">
            <summary>Gets the Uri of the link for the relation “appProperties”.</summary>
            <remarks>Returns the uri of the link for the relation “appProperties” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.DocumentLinksRelationLink">
            <summary>Gets the Uri of the link for the relation “documentLinks”.</summary>
            <remarks>Returns the uri of the link for the relation “documentLinks” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.LatestVersionRelationLink">
            <summary>Gets the Uri of the link for the relation “latestVersion”.</summary>
            <remarks>Returns the uri of the link for the relation “latestVersion” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.VersionHistoryRelationLink">
            <summary>Gets the Uri of the link for the relation “versionHistory”.</summary>
            <remarks>Returns the uri of the link for the relation “versionHistory” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.IntellixRelationLink">
            <summary>Gets the Uri of the link for the relation “intellix”.</summary>
            <remarks>Returns the uri of the link for the relation “intellix” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.CheckoutDocumentRelationLink">
            <summary>Gets the Uri of the link for the relation “checkoutDocument”.</summary>
            <remarks>Returns the uri of the link for the relation “checkoutDocument” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.CheckoutToFileSystemRelationLink">
            <summary>Gets the Uri of the link for the relation “checkoutToFileSystem”.</summary>
            <remarks>Returns the uri of the link for the relation “checkoutToFileSystem” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.CheckInFromFileSystemRelationLink">
            <summary>Gets the Uri of the link for the relation “checkInFromFileSystem”.</summary>
            <remarks>Returns the uri of the link for the relation “checkInFromFileSystem” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.DownloadAsArchiveRelationLink">
            <summary>Gets the Uri of the link for the relation “downloadAsArchive”.</summary>
            <remarks>Returns the uri of the link for the relation “downloadAsArchive” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.AnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “annotation”.</summary>
            <remarks>Returns the uri of the link for the relation “annotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.WorkflowHistoryRelationLink">
            <summary>Gets the Uri of the link for the relation “workflowHistory”.</summary>
            <remarks>Returns the uri of the link for the relation “workflowHistory” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Document.AuditInformationRelationLink">
            <summary>Gets the Uri of the link for the relation “auditInformation”.</summary>
            <remarks>Returns the uri of the link for the relation “auditInformation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteSelfRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteSelfRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSelfRelationForDocument(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSelfRelationForDocumentAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSelfRelationForDocumentAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToContentDivideOperationRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.ContentDivideOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentDivideOperation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToContentDivideOperationRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.ContentDivideOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentDivideOperation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “contentDivideOperation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToContentDivideOperationRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ContentDivideOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentDivideOperation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “contentDivideOperation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToClippedDocumentsRelationForDocument(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToClippedDocumentsRelationForDocumentAsync(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clippedDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToClippedDocumentsRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clippedDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentWordSearchResultFromPositionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “positions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentWordSearchResultFromPositionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentWordSearchResultFromPositionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToPositionsRelationForDocumentWordSearchResult(DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToPositionsRelationForDocumentWordSearchResultAsync(DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToPositionsRelationForDocumentWordSearchResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToLockRelationForString(DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToLockRelationForStringAsync(DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToLockRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteLockRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “lock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteLockRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.DeleteLockRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromThumbnailRelation">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromThumbnailRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromThumbnailRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageWithAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageWithAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromDeepZoomImageWithAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromResultListIconRelation">
            <summary>Calls the HTTP Get method on the link for the relation “resultListIcon”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromResultListIconRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “resultListIcon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultListIcon”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromResultListIconRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “resultListIcon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultListIcon”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentIndexFieldsFromFieldsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentIndexFieldsFromFieldsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentIndexFieldsFromFieldsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFields(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFieldsAsync(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFieldsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFields(DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFieldsAsync(DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToFieldsRelationForDocumentIndexFieldsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSuggestionFieldsFromSuggestionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSuggestionFieldsFromSuggestionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “suggestions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSuggestionFieldsFromSuggestionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “suggestions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSectionsFromSectionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “sections”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSectionsFromSectionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetSectionsFromSectionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSectionsRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSectionsRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToSectionsRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromContentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromContentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromContentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToContentRelationForStream(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToContentRelationForStreamAsync(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToContentRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromFileDownloadRelation">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromFileDownloadRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromFileDownloadRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToFileDownloadRelationForStream(DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToFileDownloadRelationForStreamAsync(DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToFileDownloadRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromTextAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromTextAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromTextAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToTextAnnotationRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToTextAnnotationRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToTextAnnotationRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromChecksumStatusRelation">
            <summary>Calls the HTTP Get method on the link for the relation “checksumStatus”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromChecksumStatusRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “checksumStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checksumStatus”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromChecksumStatusRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “checksumStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checksumStatus”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromXmlDSigContentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “xmlDSigContent”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromXmlDSigContentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “xmlDSigContent” asynchronously.</summary>
            <remarks>This method follows the link for the relation “xmlDSigContent”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetStreamFromXmlDSigContentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “xmlDSigContent” asynchronously.</summary>
            <remarks>This method follows the link for the relation “xmlDSigContent”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToRightsRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToRightsRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rights”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToRightsRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rights”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToProcessDocumentActionRelationForDocument(DocuWare.Platform.ServerClient.DocumentActionInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “processDocumentAction”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToProcessDocumentActionRelationForDocumentAsync(DocuWare.Platform.ServerClient.DocumentActionInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “processDocumentAction” asynchronously.</summary>
            <remarks>This method follows the link for the relation “processDocumentAction”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PutToProcessDocumentActionRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentActionInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “processDocumentAction” asynchronously.</summary>
            <remarks>This method follows the link for the relation “processDocumentAction”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentApplicationPropertiesFromAppPropertiesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentApplicationPropertiesFromAppPropertiesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentApplicationPropertiesFromAppPropertiesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAppPropertiesRelationForDocumentApplicationProperties(DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAppPropertiesRelationForDocumentApplicationPropertiesAsync(DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAppPropertiesRelationForDocumentApplicationPropertiesAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentLinksFromDocumentLinksRelation">
            <summary>Calls the HTTP Get method on the link for the relation “documentLinks”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentLinksFromDocumentLinksRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “documentLinks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documentLinks”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentLinksFromDocumentLinksRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “documentLinks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documentLinks”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromLatestVersionRelation">
            <summary>Calls the HTTP Get method on the link for the relation “latestVersion”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromLatestVersionRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “latestVersion” asynchronously.</summary>
            <remarks>This method follows the link for the relation “latestVersion”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentFromLatestVersionRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “latestVersion” asynchronously.</summary>
            <remarks>This method follows the link for the relation “latestVersion”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentsQueryResultFromVersionHistoryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistory”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentsQueryResultFromVersionHistoryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistory”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentsQueryResultFromVersionHistoryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistory”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToVersionHistoryRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “versionHistory”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToVersionHistoryRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “versionHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistory”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToVersionHistoryRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “versionHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistory”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutDocumentRelationForStream(DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutDocument”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutDocumentRelationForStreamAsync(DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutDocument” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkoutDocument”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutDocumentRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutDocument” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkoutDocument”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutToFileSystemRelationForStream(DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutToFileSystem”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutToFileSystemRelationForStreamAsync(DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutToFileSystem” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkoutToFileSystem”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckoutToFileSystemRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkoutToFileSystem” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkoutToFileSystem”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckInFromFileSystemRelationForDocument(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkInFromFileSystem”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckInFromFileSystemRelationForDocumentAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkInFromFileSystem” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkInFromFileSystem”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToCheckInFromFileSystemRelationForDocumentAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “checkInFromFileSystem” asynchronously.</summary>
            <remarks>This method follows the link for the relation “checkInFromFileSystem”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToDownloadAsArchiveRelationForStream(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “downloadAsArchive”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToDownloadAsArchiveRelationForStreamAsync(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “downloadAsArchive” asynchronously.</summary>
            <remarks>This method follows the link for the relation “downloadAsArchive”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToDownloadAsArchiveRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “downloadAsArchive” asynchronously.</summary>
            <remarks>This method follows the link for the relation “downloadAsArchive”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAnnotationsFromAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “annotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAnnotationsFromAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAnnotationsFromAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAnnotationRelationForDocumentAnnotations(DocuWare.Platform.ServerClient.DocumentAnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAnnotationRelationForDocumentAnnotationsAsync(DocuWare.Platform.ServerClient.DocumentAnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAnnotationRelationForDocumentAnnotationsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentAnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetWorkflowDocumentHistoryFromWorkflowHistoryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “workflowHistory”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetWorkflowDocumentHistoryFromWorkflowHistoryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “workflowHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowHistory”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetWorkflowDocumentHistoryFromWorkflowHistoryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “workflowHistory” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowHistory”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAuditInformationFromAuditInformationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “auditInformation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAuditInformationFromAuditInformationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “auditInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditInformation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.GetDocumentAuditInformationFromAuditInformationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “auditInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditInformation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAuditInformationRelationForDocumentAuditInformation(DocuWare.Platform.ServerClient.DocumentAuditQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “auditInformation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAuditInformationRelationForDocumentAuditInformationAsync(DocuWare.Platform.ServerClient.DocumentAuditQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “auditInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditInformation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Document.PostToAuditInformationRelationForDocumentAuditInformationAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentAuditQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “auditInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditInformation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Section">
            <remarks/>
            <summary>
            Define a single section of a document
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.SignatureStatus">
            <summary>
            Define allowed operations when there is signature
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.Pages">
            <summary>
            Contains one or more pages of the document, if there are pages available.
            </summary>
            <remarks>
            
                       Note that not all pages are necessarily listed here; it depends on the server's choice. However you still can get all
                       pages of a document when you follow the links specified in the Pages date.
                     
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.Thumbnails">
            <summary>
            Similar to Pages, but contains only links and page number.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.FileChunk">
            <summary>
            Contains data for a file chunk during a big file upload. This data is created on the server of every chunk request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.Id">
            <summary>
            Identity of the section
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.ContentType">
            <summary>
            The Internet media type of the section. If there is no section this value is missing.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.HaveMorePages">
            <summary>
            Contains true if all pages are known so PageCount contains exact number the pages in section. If the value is set to false there are more pagesm but at least the number set in PageCount
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.PageCount">
            <summary>
            The number of pages of this section, if known. If it is unknown, this value is -1.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.FileSize">
            <summary>
            The size of the file in bytes.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.OriginalFileName">
            <summary>
            Original file name with extension
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.ContentModified">
            <summary>
            Time when content is last modified
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.HasTextAnnotation">
            <summary>
            Contains true if the section has text annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.DocumentRelationLink">
            <summary>Gets the Uri of the link for the relation “document”.</summary>
            <remarks>Returns the uri of the link for the relation “document” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.DeepZoomImageRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImage”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImage” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.DeepZoomImageWithAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImageWithAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.PositionsRelationLink">
            <summary>Gets the Uri of the link for the relation “positions”.</summary>
            <remarks>Returns the uri of the link for the relation “positions” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.TextshotRelationLink">
            <summary>Gets the Uri of the link for the relation “textshot”.</summary>
            <remarks>Returns the uri of the link for the relation “textshot” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.ContentRelationLink">
            <summary>Gets the Uri of the link for the relation “content”.</summary>
            <remarks>Returns the uri of the link for the relation “content” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.FileDownloadRelationLink">
            <summary>Gets the Uri of the link for the relation “fileDownload”.</summary>
            <remarks>Returns the uri of the link for the relation “fileDownload” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.ThumbnailRelationLink">
            <summary>Gets the Uri of the link for the relation “thumbnail”.</summary>
            <remarks>Returns the uri of the link for the relation “thumbnail” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.IconRelationLink">
            <summary>Gets the Uri of the link for the relation “icon”.</summary>
            <remarks>Returns the uri of the link for the relation “icon” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.TextAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “textAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “textAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.PagesBlockRelationLink">
            <summary>Gets the Uri of the link for the relation “pagesBlock”.</summary>
            <remarks>Returns the uri of the link for the relation “pagesBlock” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.AnnotationAsSvgRelationLink">
            <summary>Gets the Uri of the link for the relation “annotationAsSvg”.</summary>
            <remarks>Returns the uri of the link for the relation “annotationAsSvg” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Section.AppPropertiesRelationLink">
            <summary>Gets the Uri of the link for the relation “appProperties”.</summary>
            <remarks>Returns the uri of the link for the relation “appProperties” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentFromDocumentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “document”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentFromDocumentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “document” asynchronously.</summary>
            <remarks>This method follows the link for the relation “document”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentFromDocumentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “document” asynchronously.</summary>
            <remarks>This method follows the link for the relation “document”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageWithAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageWithAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromDeepZoomImageWithAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetWordSearchResultFromPositionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “positions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetWordSearchResultFromPositionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetWordSearchResultFromPositionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPositionsRelationForWordSearchResult(DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPositionsRelationForWordSearchResultAsync(DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPositionsRelationForWordSearchResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SearchPositionQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “positions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “positions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentContentFromTextshotRelation">
            <summary>Calls the HTTP Get method on the link for the relation “textshot”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentContentFromTextshotRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentContentFromTextshotRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToTextshotRelationForString(DocuWare.Platform.ServerClient.Content.DocumentContent)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “textshot”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToTextshotRelationForStringAsync(DocuWare.Platform.ServerClient.Content.DocumentContent)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToTextshotRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.Content.DocumentContent)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromContentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromContentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromContentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToContentRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToContentRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PutToContentRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToContentRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToContentRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToContentRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromFileDownloadRelation">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromFileDownloadRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromFileDownloadRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToFileDownloadRelationForStream(DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToFileDownloadRelationForStreamAsync(DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToFileDownloadRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FileDownload)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetSectionFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetSectionFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetSectionFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.DeleteSelfRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.DeleteSelfRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.DeleteSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromThumbnailRelation">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromThumbnailRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromThumbnailRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromIconRelation">
            <summary>Calls the HTTP Get method on the link for the relation “icon”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromIconRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “icon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “icon”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromIconRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “icon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “icon”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromTextAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromTextAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromTextAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToTextAnnotationRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToTextAnnotationRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToTextAnnotationRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “textAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPagesBlockRelationForPages(DocuWare.Platform.ServerClient.PagesBlockQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “pagesBlock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPagesBlockRelationForPagesAsync(DocuWare.Platform.ServerClient.PagesBlockQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “pagesBlock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “pagesBlock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToPagesBlockRelationForPagesAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.PagesBlockQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “pagesBlock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “pagesBlock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromAnnotationAsSvgRelation">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromAnnotationAsSvgRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsSvg”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetStreamFromAnnotationAsSvgRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsSvg”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentApplicationPropertiesFromAppPropertiesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentApplicationPropertiesFromAppPropertiesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.GetDocumentApplicationPropertiesFromAppPropertiesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToAppPropertiesRelationForDocumentApplicationProperties(DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToAppPropertiesRelationForDocumentApplicationPropertiesAsync(DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Section.PostToAppPropertiesRelationForDocumentApplicationPropertiesAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentApplicationProperties)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “appProperties” asynchronously.</summary>
            <remarks>This method follows the link for the relation “appProperties”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportResult">
            <remarks/>
            <summary>
            Defines the result of the imported archive.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportResult.Results">
            <summary>
            A list with the sequence value of the documents that are not imported.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportResult.FileChunk">
            <summary>
            Contains data for a file chunk during a big file upload. This data is created on the server of every chunk request.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ImportResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportSettings">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ImportSettings.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportSettings.FieldMappings">
            <summary>
            Gets or sets field mappings.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportSettings.PreserveSystemFields">
            <summary>
            Gets or sets a value indicating whether the document' system fields to be replaced.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SynchronizationSettings">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SynchronizationSettings.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SynchronizationSettings.FieldMappings">
            <summary>
            Gets or sets field mappings.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SynchronizationSettings.SynchronizationOperation">
            <summary>
            Gets or sets a value indicating whether the document' system fields to be replaced.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SynchronizationSettings.Id">
            <summary>
            Document identity
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SynchronizationSettings.PreserveSystemFields">
            <summary>
            Gets or sets a value indicating whether the document' system fields to be replaced.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SynchronizationSettings.ImportNotMappedFields">
            <summary>
            Gets or sets a value indicating whether the fields which do not have mapping to be imported. If they are imported they will be imported with the same name.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PlatformClientConfiguration">
            <summary>
            A interface which is used to calculate a hash to identify the machine or device the application is running.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PlatformClientConfiguration.DefaultProductInfoHeader">
            <summary>
            Gets or sets the default product information header.
            </summary>
            <value>
            The default product information header.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.GetHostId">
            <summary>
            Gets the host identifier.
            </summary>
            <returns>A hash identifying the machine or device the application is running.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.AddProductInfoHeaderValueOfExecutingApplication(System.Net.Http.Headers.HttpHeaderValueCollection{System.Net.Http.Headers.ProductInfoHeaderValue})">
            <summary>
            Gets the product information header value of executing application.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.CreateDefaultHttpMessageHandler">
            <summary>
            Creates the default HTTP message handler.
            </summary>
            <returns>The default message handler which is used when connection to a service in case there is no explicit handler given.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.CreateHandlerForNTLMAuthentication(System.Net.ICredentials)">
            <summary>
            Creates a <see cref="T:System.Net.Http.HttpClientHandler"/> instance for handling NTLM authentication.
            </summary>
            <param name="credentials">The credentials.</param>
            <returns><see cref="T:System.Net.Http.HttpClientHandler"/> instance which uses the specified <paramref name="credentials"/>.</returns>
            <exception cref="T:System.NotSupportedException">Either this login method is not supported for this Platform or the .NET extensions for the DocuWare .NET API was not correctly loaded.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.CreateHandlerForNTLMAuthentication(System.Uri,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:System.Net.Http.HttpClientHandler"/> instance for handling NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domain">The domain.</param>
            <returns><see cref="T:System.Net.Http.HttpClientHandler"/> instance which uses the specified credentials.</returns>
            <exception cref="T:System.NotSupportedException">Either this login method is not supported for this Platform or the .NET extensions for the DocuWare .NET API was not correctly loaded.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PlatformClientConfiguration.GetRequestTimeout">
            <summary>
            Gets the request timeout.
            </summary>
            <returns>The timeout in milliseconds for a request or <c>null</c> if the request timeout is not explicitely set.</returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DefaultPlatformClientConfiguration">
            <summary>
            A default implementation of the <see cref="T:DocuWare.Platform.ServerClient.PlatformClientConfiguration"/> class.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DefaultPlatformClientConfiguration.GetHostId">
            <summary>
            Gets the host identifier.
            </summary>
            <returns>
            A hash identifying the machine or device the application is running.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DefaultPlatformClientConfiguration.CreateDefaultHttpMessageHandler">
            <summary>
            Creates the default HTTP message handler.
            </summary>
            <returns>
            The default message handler which is used when connection to a service in case there is no explicit handler given.
            </returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.MinimalVersionAttribute">
            <summary>
            Marks the minimal version needed to have this link or this property or this function available.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.MinimalVersionAttribute.MinumumVersion">
            <summary>
            Gets or sets the minumum version.
            </summary>
            <value>
            The minumum version.
            </value>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DolphinAttribute">
            <summary>
            Marks that this link or this property or this function is available since DocuWare 6.6.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DolphinAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.DolphinAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EagleAttribute">
            <summary>
            Marks that this link or this property or this function is available since DocuWare 6.7.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EagleAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.EagleAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FoxAttribute">
            <summary>
            Marks that this link or this property or this function is available since DocuWare 6.8.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FoxAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.FoxAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.GeckoAttribute">
            <summary>
            Marks that this link or this property or this function is available since DocuWare 6.9.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.GeckoAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.GeckoAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HawkAttribute">
            <summary>
            Marks that this link or this property or this function is available since DocuWare 6.10.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.HawkAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.HawkAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImpalaAttribute">
            <summary>
            Marks that this link or this property or this function is available since Impala 6.11.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ImpalaAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.ImpalaAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.JellyfishAttribute">
            <summary>
            Marks that this link or this property or this function is available since Jellyfish 6.12.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.JellyfishAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.JellyfishAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.KoalaAttribute">
            <summary>
            Marks that this link or this property or this function is available since Koala 7.00.
            </summary>   
        </member>
        <member name="M:DocuWare.Platform.ServerClient.KoalaAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.KoalaAttribute"/> class.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileNameExtensions">
            <summary>
            A class to handle file name encoding
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileNameExtensions.CreateCheckoutFileName(System.String,System.String,System.Int32)">
            <summary>
            Creates a name of the checkout file which contains the encoded document address.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="fileCabinetId">The file cabinet identifier.</param>
            <param name="docId">The document identifier.</param>
            <returns>A file name which contains the address of the document.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileNameExtensions.DecodeCheckoutFileName(System.String,System.String@,System.String@,System.Int32@)">
            <summary>
            Strips the address of a checked out file from its name.
            </summary>
            <param name="encodedName">Encoded name of the file.</param>
            <param name="fileName">Name of the file.</param>
            <param name="fileCabinetId">The file cabinet identifier.</param>
            <param name="docId">The document identifier.</param>
            <exception cref="T:System.ArgumentException">The file name cannot be decoded by the checkin/checkout encoding/decoding rules.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileNameExtensions.TryDecodeCheckoutFileName(System.String,System.String@,System.String@,System.Int32@)">
            <summary>
            Tries decode the file name of a checkout file.
            </summary>
            <param name="encodedName">Name of the encoded.</param>
            <param name="fileName">Name of the file.</param>
            <param name="fileCabinetId">The file cabinet identifier.</param>
            <param name="docId">The document identifier.</param>
            <returns><c>True</c> if the file name could be decoded. In this case the decoded parts of the file name is in the out parameters.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileNameExtensions.MakeFileNameSane(System.String)">
            <summary>
            Makes the file name sane.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The file name without not allowed characters.</returns>
            <remarks>This function removes any not supported character from a file name.</remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentTypeMapping">
            <summary>
            Maps content types to file extensions.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ContentTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.ContentTypeMapping"/> class.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentTypeMapping.Default">
            <summary>
            Gets the default instance of the mapper.
            </summary>
            <value>
            The default instance of the mapper.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ContentTypeMapping.GetContentTypeFromFileExtension(System.String)">
            <summary>
            Gets the content type from the file extension.
            </summary>
            <param name="fileExt">The file extension.</param>
            <returns></returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexField">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.Create(System.String,System.String)">
            <summary>
            Creates a string field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.Create(System.String,System.DateTime)">
            <summary>
            Creates a <see cref="T:System.DateTime"/> field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.CreateDate(System.String,System.DateTime)">
            <summary>
            Creates a date field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.CreateDate(System.String,System.Decimal)">
            <summary>
            Creates a date field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.Create(System.String,System.Decimal)">
            <summary>
            Creates a decimal field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.CreateDate(System.String,System.Int32)">
            <summary>
            Creates a date field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.Create(System.String,System.Int32)">
            <summary>
            Creates an integer field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.CreateDate(System.String,DocuWare.Platform.ServerClient.DocumentIndexFieldKeywords)">
            <summary>
            Creates a keyword field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.Create(System.String,DocuWare.Platform.ServerClient.DocumentIndexFieldKeywords)">
            <summary>
            Creates a keyword field with the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The new field.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentIndexField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexField.PointAndShootInfo">
            <summary>
            Contains one rectangle value for scalar field values and one or more values for keyword fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexField.FieldName">
            <summary>
            Contains the internal name of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexField.FieldLabel">
            <summary>
            Contains the label of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexField.IsNull">
            <summary>
            Indicates whether the field value is null or non-null.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexField.ReadOnly">
            <summary>
            Indicates whether this field is readonly or not.
            </summary>
            <remarks>
            
                         The value of this property can depend on the document. There might be documents which have a certain field set as read only while other
                         documents have these fields writable.
                       
            </remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogInfo">
            <remarks/>
            <summary>
            General properties of any dialog.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.Id">
            <summary>
            The id of the dialog
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.FileCabinetId">
            <summary>
            The id of the file cabinet
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.FileCabinetName">
            <summary>
            The name of the file cabinet
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.DisplayName">
            <summary>
            The display name of the dialog
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.IsForMobile">
            <summary>
            Gets or sets if this dialog is a available for mobile client
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.AssignedDialogId">
            <summary>
            The id of the assigned dialog (result list for search dialogs, info dialog for result dialogs, etc.)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.Color">
            <summary>
            Color of the dialog icon.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.IsDefault">
            <summary>
            Gets or sets if this dialog is a default dialog.
            </summary>
            <remarks>
            This flag can be used by the client to display a dialog in favour of the other dialogs. It can be used to display the initial dialog in case there is more than one dialog which can be displayed.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.Type">
            <summary>
            The type of the dialog.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.AssignedDialogRelationLink">
            <summary>Gets the Uri of the link for the relation “assignedDialog”.</summary>
            <remarks>Returns the uri of the link for the relation “assignedDialog” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.CountRelationLink">
            <summary>Gets the Uri of the link for the relation “count”.</summary>
            <remarks>Returns the uri of the link for the relation “count” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.SelectListRelationLink">
            <summary>Gets the Uri of the link for the relation “selectList”.</summary>
            <remarks>Returns the uri of the link for the relation “selectList” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.StoreDocumentRelationLink">
            <summary>Gets the Uri of the link for the relation “storeDocument”.</summary>
            <remarks>Returns the uri of the link for the relation “storeDocument” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.TransferRelationLink">
            <summary>Gets the Uri of the link for the relation “transfer”.</summary>
            <remarks>Returns the uri of the link for the relation “transfer” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.CreateUserDefinedSearchRelationLink">
            <summary>Gets the Uri of the link for the relation “createUserDefinedSearch”.</summary>
            <remarks>Returns the uri of the link for the relation “createUserDefinedSearch” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfo.ClientSideValidationRelationLink">
            <summary>Gets the Uri of the link for the relation “clientSideValidation”.</summary>
            <remarks>Returns the uri of the link for the relation “clientSideValidation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.DeleteSelfRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.DeleteSelfRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.DeleteSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromAssignedDialogRelation">
            <summary>Calls the HTTP Get method on the link for the relation “assignedDialog”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromAssignedDialogRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “assignedDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “assignedDialog”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetDialogFromAssignedDialogRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “assignedDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “assignedDialog”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetCountResultFromCountRelation">
            <summary>Calls the HTTP Get method on the link for the relation “count”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetCountResultFromCountRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.GetCountResultFromCountRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCountRelationForCountResult(DocuWare.Platform.ServerClient.CountExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “count”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCountRelationForCountResultAsync(DocuWare.Platform.ServerClient.CountExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCountRelationForCountResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.CountExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToSelectListRelationForSelectListResult(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToSelectListRelationForSelectListResultAsync(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToSelectListRelationForSelectListResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToStoreDocumentRelationForDocument(DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “storeDocument”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToStoreDocumentRelationForDocumentAsync(DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “storeDocument” asynchronously.</summary>
            <remarks>This method follows the link for the relation “storeDocument”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToStoreDocumentRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “storeDocument” asynchronously.</summary>
            <remarks>This method follows the link for the relation “storeDocument”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToTransferRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCreateUserDefinedSearchRelationForDialog(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCreateUserDefinedSearchRelationForDialogAsync(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToCreateUserDefinedSearchRelationForDialogAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToClientSideValidationRelationForString(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “clientSideValidation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToClientSideValidationRelationForStringAsync(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “clientSideValidation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clientSideValidation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfo.PostToClientSideValidationRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “clientSideValidation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clientSideValidation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexFields">
            <remarks/>
            <summary>
            List of index fields
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexFields.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:DocuWare.Platform.ServerClient.DocumentIndexField"/> with the specified field name.
            </summary>
            <value>
            The <see cref="T:DocuWare.Platform.ServerClient.DocumentIndexField"/>.
            </value>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">The field with the name ' + fieldName + ' is not part of the fields.</exception>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexFields.Field">
            <summary>
            List of index fields
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SortedField">
            <remarks/>
            <summary>
            Defines a sort by a field.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SortedField.Create(System.String,DocuWare.Platform.ServerClient.SortDirection)">
            <summary>
            Creates a sort order for the specified field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="direction">The direction.</param>
            <returns>The sort order</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SortedField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SortedField.Field">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SortedField.Direction">
            <summary>
            A sort direction
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogExpressionCondition">
            <remarks/>
            <summary>
            Condition for specific database name (field)
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogExpressionCondition.Create(System.String,System.String)">
            <summary>
            Creates a condition for an exact search at the specified field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns>The condition.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogExpressionCondition.Create(System.String,System.String,System.String)">
            <summary>
            Creates a condition for a range search at the specified field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="valueFrom">The value from.</param>
            <param name="valueTo">The value automatic.</param>
            <returns>The condition.</returns>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpressionCondition.Value">
            <summary>
            Specifies the value or the expression of the dialog field.
            </summary>
            <remarks>
            If a single value is specified then a exact search (or wild card search) is performed.
            </remarks>
            <remarks>
            If two values are specified then the condition denotes a range search.
            </remarks>
            <remarks>
            In case of two values where the first one is null a "less or equal than" search is performed.
                     If the second value is null a "greater or equal than" search is performed.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpressionCondition.DBName">
            <summary>
            Gets or sets the database name which provides the value checked against the condition.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ResultListExtensions">
            <summary>
            Extensions for the result list.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResult(DocuWare.Platform.ServerClient.Dialog,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents as table result.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="dialogExpression">The dialog expression.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResultAsync(DocuWare.Platform.ServerClient.Dialog,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents as table result asynchronously.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="dialogExpression">The dialog expression.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResult(DocuWare.Platform.ServerClient.Dialog)">
            <summary>
            Gets the documents as table result.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResultAsync(DocuWare.Platform.ServerClient.Dialog)">
            <summary>
            Gets the documents as table result asynchronously.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResult(DocuWare.Platform.ServerClient.FileCabinet)">
            <summary>
            Gets the documents table result.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsTableResultAsync(DocuWare.Platform.ServerClient.FileCabinet)">
            <summary>
            Gets the documents table result asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResult(DocuWare.Platform.ServerClient.Dialog,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents as table result.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="dialogExpression">The dialog expression.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResultAsync(DocuWare.Platform.ServerClient.Dialog,DocuWare.Platform.ServerClient.DialogExpression)">
            <summary>
            Gets the documents as table result asynchronously.
            </summary>
            <param name="dialog">The dialog.</param>
            <param name="dialogExpression">The dialog expression.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResult(DocuWare.Platform.ServerClient.Dialog)">
            <summary>
            Gets the documents as table result.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResultAsync(DocuWare.Platform.ServerClient.Dialog)">
            <summary>
            Gets the documents as table result asynchronously.
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResult(DocuWare.Platform.ServerClient.FileCabinet)">
            <summary>
            Gets the documents table result.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListExtensions.GetDocumentsResultAsync(DocuWare.Platform.ServerClient.FileCabinet)">
            <summary>
            Gets the documents table result asynchronously.
            </summary>
            <param name="fileCabinet">The file cabinet.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SchemaExtensions">
            <summary>
            Extensions.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SchemaExtensions.ToRectangle(DocuWare.Platform.ServerClient.LineEntry)">
            <summary>
            Gets the bounding box from the specified entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Organization">
            <remarks/>
            <summary>
            Definition for DocuWare organization.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.ConfigurationRights">
            <summary>
            List of the rights that the current user has for this cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.Name">
            <summary>
            Name of the organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.Id">
            <summary>
            Identity of the organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.Guid">
            <summary>
            Guid of the organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.FilecabinetsRelationLink">
            <summary>Gets the Uri of the link for the relation “filecabinets”.</summary>
            <remarks>Returns the uri of the link for the relation “filecabinets” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.UsersRelationLink">
            <summary>Gets the Uri of the link for the relation “users”.</summary>
            <remarks>Returns the uri of the link for the relation “users” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.RolesRelationLink">
            <summary>Gets the Uri of the link for the relation “roles”.</summary>
            <remarks>Returns the uri of the link for the relation “roles” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.GroupsRelationLink">
            <summary>Gets the Uri of the link for the relation “groups”.</summary>
            <remarks>Returns the uri of the link for the relation “groups” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.SelectListInfosRelationLink">
            <summary>Gets the Uri of the link for the relation “selectListInfos”.</summary>
            <remarks>Returns the uri of the link for the relation “selectListInfos” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.LoginTokenRelationLink">
            <summary>Gets the Uri of the link for the relation “loginToken”.</summary>
            <remarks>Returns the uri of the link for the relation “loginToken” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.DialogsRelationLink">
            <summary>Gets the Uri of the link for the relation “dialogs”.</summary>
            <remarks>Returns the uri of the link for the relation “dialogs” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.UserInfoRelationLink">
            <summary>Gets the Uri of the link for the relation “userInfo”.</summary>
            <remarks>Returns the uri of the link for the relation “userInfo” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.WorkflowsRelationLink">
            <summary>Gets the Uri of the link for the relation “workflows”.</summary>
            <remarks>Returns the uri of the link for the relation “workflows” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.ControllerWorkflowsRelationLink">
            <summary>Gets the Uri of the link for the relation “controllerWorkflows”.</summary>
            <remarks>Returns the uri of the link for the relation “controllerWorkflows” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.WorkflowRequestsRelationLink">
            <summary>Gets the Uri of the link for the relation “workflowRequests”.</summary>
            <remarks>Returns the uri of the link for the relation “workflowRequests” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organization.SubstitutionListsRelationLink">
            <summary>Gets the Uri of the link for the relation “substitutionLists”.</summary>
            <remarks>Returns the uri of the link for the relation “substitutionLists” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetFileCabinetsFromFilecabinetsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “filecabinets”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetFileCabinetsFromFilecabinetsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “filecabinets” asynchronously.</summary>
            <remarks>This method follows the link for the relation “filecabinets”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetFileCabinetsFromFilecabinetsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “filecabinets” asynchronously.</summary>
            <remarks>This method follows the link for the relation “filecabinets”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUsersFromUsersRelation">
            <summary>Calls the HTTP Get method on the link for the relation “users”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUsersFromUsersRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “users” asynchronously.</summary>
            <remarks>This method follows the link for the relation “users”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUsersFromUsersRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “users” asynchronously.</summary>
            <remarks>This method follows the link for the relation “users”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetRolesFromRolesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “roles”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetRolesFromRolesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetRolesFromRolesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetGroupsFromGroupsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “groups”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetGroupsFromGroupsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetGroupsFromGroupsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSelectListInfosFromSelectListInfosRelation">
            <summary>Calls the HTTP Get method on the link for the relation “selectListInfos”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSelectListInfosFromSelectListInfosRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “selectListInfos” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListInfos”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSelectListInfosFromSelectListInfosRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “selectListInfos” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListInfos”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetOrganizationFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetOrganizationFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetOrganizationFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToLoginTokenRelationForString(DocuWare.Platform.ServerClient.TokenDescription)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “loginToken”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToLoginTokenRelationForStringAsync(DocuWare.Platform.ServerClient.TokenDescription)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “loginToken” asynchronously.</summary>
            <remarks>This method follows the link for the relation “loginToken”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToLoginTokenRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.TokenDescription)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “loginToken” asynchronously.</summary>
            <remarks>This method follows the link for the relation “loginToken”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetDialogInfosFromDialogsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetDialogInfosFromDialogsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetDialogInfosFromDialogsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToDialogsRelationForDialogInfos(DocuWare.Platform.ServerClient.RequestDialogQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogs”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToDialogsRelationForDialogInfosAsync(DocuWare.Platform.ServerClient.RequestDialogQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToDialogsRelationForDialogInfosAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.RequestDialogQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUserInfoFromUserInfoRelation">
            <summary>Calls the HTTP Get method on the link for the relation “userInfo”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUserInfoFromUserInfoRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetUserInfoFromUserInfoRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUser(DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUserAsync(DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUserAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUser(DocuWare.Platform.ServerClient.NewUser)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUserAsync(DocuWare.Platform.ServerClient.NewUser)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToUserInfoRelationForUserAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.NewUser)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “userInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “userInfo”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromWorkflowsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “workflows”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromWorkflowsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “workflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflows”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromWorkflowsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “workflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflows”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromControllerWorkflowsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “controllerWorkflows”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromControllerWorkflowsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “controllerWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “controllerWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowsFromControllerWorkflowsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “controllerWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “controllerWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowRequestsFromWorkflowRequestsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “workflowRequests”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowRequestsFromWorkflowRequestsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “workflowRequests” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowRequests”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetWorkflowRequestsFromWorkflowRequestsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “workflowRequests” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowRequests”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToWorkflowRequestsRelationForString(DocuWare.Platform.ServerClient.RequestSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “workflowRequests”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToWorkflowRequestsRelationForStringAsync(DocuWare.Platform.ServerClient.RequestSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “workflowRequests” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowRequests”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.PostToWorkflowRequestsRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.RequestSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “workflowRequests” asynchronously.</summary>
            <remarks>This method follows the link for the relation “workflowRequests”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSubstitutionListsFromSubstitutionListsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionLists”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSubstitutionListsFromSubstitutionListsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionLists” asynchronously.</summary>
            <remarks>This method follows the link for the relation “substitutionLists”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organization.GetSubstitutionListsFromSubstitutionListsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionLists” asynchronously.</summary>
            <remarks>This method follows the link for the relation “substitutionLists”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo">
            <remarks/>
            <summary>
            Additional information for organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.CompanyNames">
            <summary>
            Name of companies included in organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.AddressLines">
            <summary>
            Addresses of organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.Administrator">
            <summary>
            Name of the administrator
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.EMail">
            <summary>
            Contact email of organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.SystemNumber">
            <summary>
            System number
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.RuntimeVersion">
            <summary>
            Runtime version of the DocuWare system
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdditionalOrganizationInfo.OrganizationType">
            <summary>
            Type of the organization
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ConfirmedData">
            <remarks/>
            <summary>
            Data which is sent when a user confirm a task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ConfirmedData.ConfirmedFields">
            <summary>
            List of confirmed fields.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ConfirmedField">
            <remarks/>
            <summary>
            Value of form field
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ConfirmedField.Value">
            <summary>
            Form field value casted to the form field value type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ConfirmedField.Id">
            <summary>
            Identifier of the field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WFFormFieldValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexFieldValueBase">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexFieldKeywords">
            <remarks/>
            <summary>
            List of keywords
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentIndexFieldKeywords.Keyword">
            <summary>
            List of keywords
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ItemChoiceType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignToHistoryStep">
            <remarks/>
            <summary>
            A history step for Assign to activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AssignToHistoryStep.AssignedUsers">
            <summary>
            List of new assigned user names.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignDataHistoryStep">
            <remarks/>
            <summary>
            A history step for Assign data activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AssignDataHistoryStep.Fields">
            <summary>
            List of assignments fields. The label is destination field name. The "Value" property is assigned value in it.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryField">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryField.Value">
            <summary>
            Value of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryField.Options">
            <summary>
            Additional options specific for field type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryField.Label">
            <summary>
            Тhe label of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryField.Type">
            <summary>
            Type of the history form field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryFieldOptions">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.NumericHistoryFieldOptions">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NumericHistoryFieldOptions.Precision">
            <summary>
            Precision of the field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextHistoryFieldOptions">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextHistoryFieldOptions.Length">
            <summary>
            Length of the field value.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryFormTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Link">
            <summary>
            Link field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Description">
            <summary>
            Description field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Text">
            <summary>
            Text field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Decimal">
            <summary>
            Decimal field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Date">
            <summary>
            Date field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.DateTime">
            <summary>
            DateTime field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.User">
            <summary>
            User field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Role">
            <summary>
            Role field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.SubstitutionRule">
            <summary>
            Substitution rule field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.Keyword">
            <summary>
            Keyword field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.MultiUser">
            <summary>
            Multi user field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.MultiRole">
            <summary>
            Multi role field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.HistoryFormTypeEnum.MultiSubstitutionRule">
            <summary>
            Multi substitution rule field
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Annotation">
            <remarks/>
            <summary>
            Annotation element. Contains all annotations for a specific page in up to 5 layers
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Annotation.Layer">
            <summary>
            List of layers that contains annotations in a specific layer. Annotation can have up to 5 layers.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Layer">
            <remarks/>
            <summary>
            Layer element. Contains annotations in a specific layer. Annotation can have up to 5 layers.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BitmapStampEntry">
            <remarks/>
            <summary>
            Bitmap stamp. Png encoded image.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BitmapStampEntry.PngData">
            <summary>
            Base 64 encoded data of the bitmap.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BitmapStampEntry.DpiX">
            <summary>
            Horizontal device point per inch of the image.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BitmapStampEntry.DpiY">
            <summary>
            Vertical device point per inch of the image.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampBase">
            <remarks/>
            <summary>
            Stamp base type. Inherited by 3 types: TextStamp, BitmapStamp, PolyLineStamp
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampBase.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.Location">
            <summary>
            Location of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.HeadFont">
            <summary>
            Font of the header of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.Signature">
            <summary>
            Define the sigiture of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.UserName">
            <summary>
            Full user name of the person that has set the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.Visible">
            <summary>
            Define if stamp is visible.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.Frame">
            <summary>
            Define if stamp has visible frame.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.ShowUser">
            <summary>
            Define if stamp show the user who placed the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.ShowDate">
            <summary>
            Define if stamp show date when stamp is placed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.ShowTime">
            <summary>
            Define if stamp show the time when stamp is placed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampBase.SigScopeInfo">
            <summary>
            Signature scope. Describes what is signed with this stamp.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AnnotationRectangle">
            <remarks/>
            <summary>
            Define rectangular annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationRectangle.Left">
            <summary>
            The left coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationRectangle.Top">
            <summary>
            The top coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationRectangle.Width">
            <summary>
            The width of the rectangle in coordinates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationRectangle.Height">
            <summary>
            The height of the rectangle in coordinates.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Font">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Font.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.FontName">
            <summary>
            Define name of the font.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.Bold">
            <summary>
            Define bold text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.Italic">
            <summary>
            Define italic text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.Underlined">
            <summary>
            Define underlined text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.StrikeThrough">
            <summary>
            Define striked text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.FontSize">
            <summary>
            The font size in twpis. E.g. a font of size 10pt has a value of 200.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Font.Spacing">
            <summary>
            Character spacing in twips. Extra distance between characters. It may be negative.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampSignatureType">
            <remarks/>
            <summary>
            Signature wise stamps.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StampSignatureType.No">
            <summary>
            Not a signature
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StampSignatureType.Simple">
            <summary>
            Simple signature - checksum only
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StampSignatureType.XMLDSIG">
            <summary>
            Xml digital signature - certificate based
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EntryBase">
            <remarks/>
            <summary>
            Base element for annotation entry.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EntryBase.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Created">
            <summary>
            Info about creation of the annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Type">
            <summary>
            Type of the annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Color">
            <summary>
            Color of the annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Rotation">
            <summary>
            Rotaion of the annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Transparent">
            <summary>
            Define if annotation is transparent.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.StrokeWidth">
            <summary>
            The thickness of the stroke in twips.
            </summary>
            <remarks>
            The default thickness is 1 pt = 20 twips
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EntryBase.Id">
            <summary>
            Identity of the stamp.
            </summary>
            <remarks>
            Specified if updating already exisitng annotation
            </remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CreatedInfo">
            <remarks/>
            <summary>
            Info about creation of item.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CreatedInfo.User">
            <summary>
            Id of the user who created this item.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CreatedInfo.Time">
            <summary>
            Timestamp when this item was created.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DeleteEntry">
            <remarks/>
            <summary>
            Entry that delete annotation spcified by its Id
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LineEntry">
            <remarks/>
            <summary>
            Line/Arrow annotation
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.LineEntry.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LineEntry.From">
            <summary>
            Start point of the line.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LineEntry.To">
            <summary>
            End  point of the line.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LineEntry.Arrow">
            <summary>
            Define a line with arror.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AnnotationPoint">
            <remarks/>
            <summary>
            Define point of annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationPoint.X">
            <summary>
            The horizontal position in coordinates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AnnotationPoint.Y">
            <summary>
            The vertical position in coordinates.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PolyLineEntry">
            <remarks/>
            <summary>
            PloyLine annotation. Conatins a single stroke of points.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PolyLineEntry.Stroke">
            <summary>
            Sequence of points that define a PloyLine.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Stroke">
            <remarks/>
            <summary>
            Sequence of points that define a PloyLine.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stroke.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stroke.Point">
            <summary>
            Sequence of points that define a PloyLine.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PolyLineStampEntry">
            <remarks/>
            <summary>
            Tablet polyline stamp. Contains one or more strokes. Used as handwriting stamp
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PolyLineStampEntry.Stroke">
            <summary>
            Sequence of strokes of sequence of points that define a set of polylines.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RectEntry">
            <remarks/>
            <summary>
            Rectangle or Ellipse annotation
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RectEntry.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RectEntry.Location">
            <summary>
            Location of the annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RectEntry.Filled">
            <summary>
            Define if rectangle is solid.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RectEntry.Ellipse">
            <summary>
            True if annotation is elipse defined into rectangle.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextEntry">
            <remarks/>
            <summary>
            Annotation that contains text
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextEntry.Font">
            <summary>
            Specify the font of the text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextEntry.Value">
            <summary>
            Text to be displayed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextEntry.Location">
            <summary>
            Location of the annotation.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextStampEntry">
            <remarks/>
            <summary>
            Text stamp. Value contains the text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextStampEntry.Font">
            <summary>
            Font that is used for the text of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextStampEntry.Value">
            <summary>
            Text that stamp will show.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PointAndShootInfo">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.PointAndShootInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PointAndShootInfo.Box">
            <summary>
            The bounding box of the selected content.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PointAndShootInfo.PageNumber">
            <summary>
            The number of the page on which the selected content is.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWRectangle">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWRectangle.Left">
            <summary>
            The left coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWRectangle.Top">
            <summary>
            The top coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWRectangle.Width">
            <summary>
            The width of the rectangle in coordinates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWRectangle.Height">
            <summary>
            The height of the rectangle in coordinates.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ConfigurationRight">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.SmartConnect">
            <summary>
            Manage SmartConnect configurations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.DocumentTray">
            <summary>
            Manage Document Tray
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.EmailNotification">
            <summary>
            Manage E-Mail Alert
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.ConnectToMfp">
            <summary>
            Manage MFP Workflow
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.OcrTemplate">
            <summary>
            Manage OCR template
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.ConnectToOutlook">
            <summary>
            Manage Connect to Outlook configurations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.Printer">
            <summary>
            Manage Printer configurations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.Import">
            <summary>
            Manage Web Import configurations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.DocuWareRequest">
            <summary>
            Manage REQUEST
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.IntelligentIndexing">
            <summary>
            Manage Intelligent Indexing
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.CONNECTToMail">
            <summary>
            Manage Connect to Mail configurations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.FileCabinets">
            <summary>
            File cabinets
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.Stamps">
            <summary>
            Manage stamps
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.SelectLists">
            <summary>
            Manage select lists
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.MaintainFixedSelectLists">
            <summary>
            Maintain fixed select lists
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ConfigurationRight.UserManagement">
            <summary>
            User Management
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SignatureStatus">
            <remarks/>
            <summary>
            Define allowed operations when there is signature
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SignatureStatus.Allow_Annotations">
            <summary>
            Allow placing of annotations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SignatureStatus.Allow_Stamps">
            <summary>
            Allow placing of stamps
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SignatureStatus.Allow_Signature_Stamps">
            <summary>
            Allow placing of signature stamps
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Pages">
            <remarks/>
            <summary>
            Define a collection of pages
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Pages.Page">
            <summary>
            A collection of pages
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Pages.NextBlockRelationLink">
            <summary>Gets the Uri of the link for the relation “nextBlock”.</summary>
            <remarks>Returns the uri of the link for the relation “nextBlock” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Pages.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Pages.GetPagesFromNextBlockRelation">
            <summary>Calls the HTTP Get method on the link for the relation “nextBlock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Pages.GetPagesFromNextBlockRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “nextBlock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “nextBlock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Pages.GetPagesFromNextBlockRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “nextBlock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “nextBlock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Page">
            <remarks/>
            <summary>
            Gets information about specific page.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.PageNum">
            <summary>
            Zero based page number.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.HasAnnotation">
            <summary>
            True if the page contains at least one annotation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.ThumbnailRelationLink">
            <summary>Gets the Uri of the link for the relation “thumbnail”.</summary>
            <remarks>Returns the uri of the link for the relation “thumbnail” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.IconRelationLink">
            <summary>Gets the Uri of the link for the relation “icon”.</summary>
            <remarks>Returns the uri of the link for the relation “icon” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.DeepZoomImageRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImage”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImage” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.DeepZoomImageWithAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “deepZoomImageWithAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.LowQualityImageRelationLink">
            <summary>Gets the Uri of the link for the relation “lowQualityImage”.</summary>
            <remarks>Returns the uri of the link for the relation “lowQualityImage” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.LowQualityImageWithAnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “lowQualityImageWithAnnotation”.</summary>
            <remarks>Returns the uri of the link for the relation “lowQualityImageWithAnnotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.TextshotRelationLink">
            <summary>Gets the Uri of the link for the relation “textshot”.</summary>
            <remarks>Returns the uri of the link for the relation “textshot” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.FileDownloadRelationLink">
            <summary>Gets the Uri of the link for the relation “fileDownload”.</summary>
            <remarks>Returns the uri of the link for the relation “fileDownload” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.AnnotationRelationLink">
            <summary>Gets the Uri of the link for the relation “annotation”.</summary>
            <remarks>Returns the uri of the link for the relation “annotation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.AnnotationAsSvgRelationLink">
            <summary>Gets the Uri of the link for the relation “annotationAsSvg”.</summary>
            <remarks>Returns the uri of the link for the relation “annotationAsSvg” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.AnnotationAsXamlRelationLink">
            <summary>Gets the Uri of the link for the relation “annotationAsXaml”.</summary>
            <remarks>Returns the uri of the link for the relation “annotationAsXaml” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.StampRelationLink">
            <summary>Gets the Uri of the link for the relation “stamp”.</summary>
            <remarks>Returns the uri of the link for the relation “stamp” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.StampBestPositionRelationLink">
            <summary>Gets the Uri of the link for the relation “stampBestPosition”.</summary>
            <remarks>Returns the uri of the link for the relation “stampBestPosition” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Page.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromThumbnailRelation">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromThumbnailRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromThumbnailRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromIconRelation">
            <summary>Calls the HTTP Get method on the link for the relation “icon”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromIconRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “icon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “icon”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromIconRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “icon” asynchronously.</summary>
            <remarks>This method follows the link for the relation “icon”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImage”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageWithAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageWithAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromDeepZoomImageWithAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “deepZoomImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “deepZoomImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageRelation">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImage”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lowQualityImage”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImage” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lowQualityImage”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageWithAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImageWithAnnotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageWithAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lowQualityImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromLowQualityImageWithAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “lowQualityImageWithAnnotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lowQualityImageWithAnnotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageContentFromTextshotRelation">
            <summary>Calls the HTTP Get method on the link for the relation “textshot”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageContentFromTextshotRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageContentFromTextshotRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “textshot” asynchronously.</summary>
            <remarks>This method follows the link for the relation “textshot”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromFileDownloadRelation">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromFileDownloadRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromFileDownloadRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToFileDownloadRelationForStream(DocuWare.Platform.ServerClient.FileDownloadPage)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToFileDownloadRelationForStreamAsync(DocuWare.Platform.ServerClient.FileDownloadPage)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToFileDownloadRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FileDownloadPage)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fileDownload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fileDownload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetAnnotationFromAnnotationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “annotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetAnnotationFromAnnotationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetAnnotationFromAnnotationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotation(DocuWare.Platform.ServerClient.AnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotationAsync(DocuWare.Platform.ServerClient.AnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotationAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.AnnotationsPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotation(DocuWare.Platform.ServerClient.Annotation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotationAsync(DocuWare.Platform.ServerClient.Annotation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToAnnotationRelationForAnnotationAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.Annotation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “annotation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromAnnotationAsSvgRelation">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromAnnotationAsSvgRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsSvg”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetStreamFromAnnotationAsSvgRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsSvg”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetXElementWrapperFromAnnotationAsXamlRelation">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsXaml”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetXElementWrapperFromAnnotationAsXamlRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsXaml” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsXaml”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetXElementWrapperFromAnnotationAsXamlRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “annotationAsXaml” asynchronously.</summary>
            <remarks>This method follows the link for the relation “annotationAsXaml”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampRelationForAnnotation(DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stamp”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampRelationForAnnotationAsync(DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stamp” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stamp”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampRelationForAnnotationAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stamp” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stamp”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampBestPositionRelationForDWPoint(DocuWare.Platform.ServerClient.StampFormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stampBestPosition”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampBestPositionRelationForDWPointAsync(DocuWare.Platform.ServerClient.StampFormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stampBestPosition” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stampBestPosition”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.PostToStampBestPositionRelationForDWPointAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.StampFormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “stampBestPosition” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stampBestPosition”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Page.GetPageFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PageData">
            <remarks/>
            <summary>
            Define a metadata for a page
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.LowQualitySize">
            <summary>
            Gets or sets the low quality level.
            </summary>
            <remarks>
            
                       The low quality size is the size in pixels which a client can use for displaying a document before starting using the deep zoom control.
                       A client should not request any levels with less resolution than defined by this value because
                       the quality of the level defined by this value is the best also for lower levels.
                     
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.TileSize">
            <summary>
            Gets or sets the recommented size of multi scale image tiles.
            </summary>
            <remarks>
            
                       If a client decides to display the rendered page as multi scale image (using the Deep Zoom technology)
                       this value gives a hint for the recommented size of the tiles.
                     
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.RenderedImageFormat">
            <summary>
            Gets or sets the preferred format this page is rendered.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.ContentArea">
            <summary>
            Gets or sets the area of the content of the page. The coordinates are in twips (1/1440 inches) - https://en.wikipedia.org/wiki/Twip .
            </summary>
            <remarks>
            
                       The content of a page is the part where the text resided.
                       If the page is blank or the server cannot determine
                       such an area the rectangle should contain the entire page.
                     
            </remarks>
            <remarks>
            
                       If this field is <v>null</v> the server has not yet calculated the size of this page.
                     
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.DpiX">
            <summary>
            Gets the horizontal resolution of a page image. In case of vector images this is the maximal resolution which can be rendered.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.DpiY">
            <summary>
            Gets the vertical resolution of a page image. In case of vector images this is the maximal resolution which can be rendered.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.Width">
            <summary>
            Gets the horizontal size of a page image in pixels. In case of vector images this is the maximal pixel width which can be rendered.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageData.Height">
            <summary>
            Gets the vertical size of a page image in pixels. In case of vector images this is the maximal pixel height which can be rendered.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PlatformImageFormat">
            <remarks/>
            <summary>
            Define a supported image formats in platform
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UploadedFileChunk">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UploadedFileChunk.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadedFileChunk.Finished">
            <summary>
            Indicates that the last chunk has been uploaded.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadedFileChunk.LastChunkId">
            <summary>
            The id of the last uploaded chunk.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadedFileChunk.BytesWritten">
            <summary>
            The number of bytes written up to now.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadedFileChunk.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UploadedFileChunk.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UploadedFileChunk.GetUploadedFileChunkFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UploadedFileChunk.GetUploadedFileChunkFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UploadedFileChunk.GetUploadedFileChunkFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentApplicationProperty">
            <remarks/>
            <summary>
            Define application specific property
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentApplicationProperty.Name">
            <summary>
            Name of the property.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentApplicationProperty.Value">
            <summary>
            Value of the property
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SuggestionField">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SuggestionField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SuggestionValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IntellixFieldTrust">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentFlags">
            <remarks/>
            <summary>
            Define possible flags for a document
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentFlags.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsCold">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsDBRecord">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsCheckedOut">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsCopyRightProtected">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsVoiceAvailable">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.HasAppendedDocuments">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsProtected">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsDeleted">
            <summary>
            Readonly flag. It will be overriden if set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentFlags.IsEmail">
            <summary>
            Read-write flag.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentVersion">
            <remarks/>
            <summary>
            Document version info
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentVersion.Major">
            <summary>
            Major version of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentVersion.Minor">
            <summary>
            Minor version of the document.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IntellixTrust">
            <remarks/>
            <summary>
            Define how much the intellix result is reliable
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.None">
            <summary>
            No intelix
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.Failed">
            <summary>
            Intelix failed
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.InProgress">
            <summary>
            Intelix still in progress
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.Red">
            <summary>
            Unrecognized
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.Yellow">
            <summary>
            Predicted
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.IntellixTrust.Green">
            <summary>
            Recognized
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.VersionManagementStatus">
            <remarks/>
            <summary>
            Define the version management status of a document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementStatus.Disable">
            <summary>
            Version management is disabled.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementStatus.Initial">
            <summary>
            The initial version of the document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementStatus.InProgress">
            <summary>
            Manual version management is in progress.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementStatus.Manual">
            <summary>
            Manual version of the document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementStatus.Automatic">
            <summary>
            Automatic version of the document.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Right">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Admin_Owner">
            <summary>
            Owner
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Admin_ModifyRight">
            <summary>
            Modify Rights
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Admin_Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Admin_EditDialogs">
            <summary>
            Edit dialogs
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Admin_MigrationAdministration">
            <summary>
            Migration
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Store">
            <summary>
            Store
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Search">
            <summary>
            Search
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Edit">
            <summary>
            Edit index data
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_DisplayDocument">
            <summary>
            Display document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_EditDocuments">
            <summary>
            Edit documents
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_DeleteDocuments">
            <summary>
            Delete documents
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Export">
            <summary>
            Export
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_AppendToReadOnly">
            <summary>
            Append to read only
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_ChangeToReadOnly">
            <summary>
            Modify read-only document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_Checkout">
            <summary>
            Check out
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.General_AddEntries">
            <summary>
            (Obsolete.Moved on dialog level)Add Entries to Select-List-Only-Fields
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_New">
            <summary>
            New annotations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_Delete">
            <summary>
            Delete annotations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_All">
            <summary>
            Change annotations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_Hide">
            <summary>
            Hide annotations
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_Stamp_New">
            <summary>
            New stamp
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Right.Annotation_Stamp_Hide">
            <summary>
            Hide a stamp
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinet">
            <remarks/>
            <summary>
            Models a DocuWare file cabinet or a web basket(document tray).
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Fields">
            <summary>
            List of the fields of the cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Rights">
            <summary>
            List of the rights that the current user has for this cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ExtendedUserRights">
            <summary>
            Gets a sets the extended user rights.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Color">
            <summary>
            Gets or sets the color of the file cabinet icon.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Name">
            <summary>
            Gets or sets the name of the file cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Id">
            <summary>
            Gets or sets the id of the file.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.IsBasket">
            <summary>
            Gets or sets a flag indicating whether this file cabinet is a basket or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Usable">
            <summary>
            Gets or sets if user has usage right for web basket. For file cabinets it's always true
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.Default">
            <summary>
            Gets or sets a flag indicating whether this cabinet is default or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.AssignedCabinetId">
            <summary>
            Gets or sets a flag indicating whether this cabinet is default or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.IntellixDialogId">
            <summary>
            Gets or sets a flag indicating whether this cabinet is default or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.VersionManagement">
            <summary>
            Version management mode.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.VersionHistoryResultListId">
            <summary>
            Gets the id of version history result list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.WindowsExplorerClientAccess">
            <summary>
            Gets whether the file cabinet can be accessed by windows explorer client.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.AddIndexEntriesInUpperCase">
            <summary>
            Gets whether all letters are input in upper case, regardless of how they were entered on the keyboard
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.DocumentAuditingEnabled">
            <summary>
            Gets or sets a value indicating whether the document auditing is enabled for that file cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.HasFullTextSupport">
            <summary>
            Gets or sets a value indicating whether the cabinet has fulltext search support.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.DocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “documents”.</summary>
            <remarks>Returns the uri of the link for the relation “documents” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.DocumentsTableRelationLink">
            <summary>Gets the Uri of the link for the relation “documentsTable”.</summary>
            <remarks>Returns the uri of the link for the relation “documentsTable” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ContentMergeOperationRelationLink">
            <summary>Gets the Uri of the link for the relation “contentMergeOperation”.</summary>
            <remarks>Returns the uri of the link for the relation “contentMergeOperation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.AdvancedDocumentUploadRelationLink">
            <summary>Gets the Uri of the link for the relation “advancedDocumentUpload”.</summary>
            <remarks>Returns the uri of the link for the relation “advancedDocumentUpload” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ImportDocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “importDocuments”.</summary>
            <remarks>Returns the uri of the link for the relation “importDocuments” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.UnprocessedDocumentUploadRelationLink">
            <summary>Gets the Uri of the link for the relation “unprocessedDocumentUpload”.</summary>
            <remarks>Returns the uri of the link for the relation “unprocessedDocumentUpload” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.QueryRelationLink">
            <summary>Gets the Uri of the link for the relation “query”.</summary>
            <remarks>Returns the uri of the link for the relation “query” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.DialogsRelationLink">
            <summary>Gets the Uri of the link for the relation “dialogs”.</summary>
            <remarks>Returns the uri of the link for the relation “dialogs” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.SearchesRelationLink">
            <summary>Gets the Uri of the link for the relation “searches”.</summary>
            <remarks>Returns the uri of the link for the relation “searches” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.CustomSearchRelationLink">
            <summary>Gets the Uri of the link for the relation “customSearch”.</summary>
            <remarks>Returns the uri of the link for the relation “customSearch” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ResultTreesRelationLink">
            <summary>Gets the Uri of the link for the relation “resultTrees”.</summary>
            <remarks>Returns the uri of the link for the relation “resultTrees” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.StoresRelationLink">
            <summary>Gets the Uri of the link for the relation “stores”.</summary>
            <remarks>Returns the uri of the link for the relation “stores” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.TaskListsRelationLink">
            <summary>Gets the Uri of the link for the relation “taskLists”.</summary>
            <remarks>Returns the uri of the link for the relation “taskLists” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.StampsRelationLink">
            <summary>Gets the Uri of the link for the relation “stamps”.</summary>
            <remarks>Returns the uri of the link for the relation “stamps” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.NotificationsRelationLink">
            <summary>Gets the Uri of the link for the relation “notifications”.</summary>
            <remarks>Returns the uri of the link for the relation “notifications” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.TransferRelationLink">
            <summary>Gets the Uri of the link for the relation “transfer”.</summary>
            <remarks>Returns the uri of the link for the relation “transfer” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.VersionHistoryResultListRelationLink">
            <summary>Gets the Uri of the link for the relation “versionHistoryResultList”.</summary>
            <remarks>Returns the uri of the link for the relation “versionHistoryResultList” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.BatchUpdateRelationLink">
            <summary>Gets the Uri of the link for the relation “batchUpdate”.</summary>
            <remarks>Returns the uri of the link for the relation “batchUpdate” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.FieldValueStatisticsRelationLink">
            <summary>Gets the Uri of the link for the relation “fieldValueStatistics”.</summary>
            <remarks>Returns the uri of the link for the relation “fieldValueStatistics” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ReplicationDataRelationLink">
            <summary>Gets the Uri of the link for the relation “replicationData”.</summary>
            <remarks>Returns the uri of the link for the relation “replicationData” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ReplicationDeleteDataRelationLink">
            <summary>Gets the Uri of the link for the relation “replicationDeleteData”.</summary>
            <remarks>Returns the uri of the link for the relation “replicationDeleteData” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.SetupReplicationRelationLink">
            <summary>Gets the Uri of the link for the relation “setupReplication”.</summary>
            <remarks>Returns the uri of the link for the relation “setupReplication” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.ReplicationInfoRelationLink">
            <summary>Gets the Uri of the link for the relation “replicationInfo”.</summary>
            <remarks>Returns the uri of the link for the relation “replicationInfo” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinet.NextSequenceElementRelationLink">
            <summary>Gets the Uri of the link for the relation “nextSequenceElement”.</summary>
            <remarks>Returns the uri of the link for the relation “nextSequenceElement” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromDocumentsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “documents”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromDocumentsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “documents” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documents”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromDocumentsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “documents” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documents”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToDocumentsRelationForDocument(DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “documents”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToDocumentsRelationForDocumentAsync(DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “documents” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documents”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToDocumentsRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.Document)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “documents” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documents”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryTableResultFromDocumentsTableRelation">
            <summary>Calls the HTTP Get method on the link for the relation “documentsTable”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryTableResultFromDocumentsTableRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “documentsTable” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documentsTable”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryTableResultFromDocumentsTableRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “documentsTable” asynchronously.</summary>
            <remarks>This method follows the link for the relation “documentsTable”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PutToContentMergeOperationRelationForDocument(DocuWare.Platform.ServerClient.ContentMergeOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentMergeOperation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PutToContentMergeOperationRelationForDocumentAsync(DocuWare.Platform.ServerClient.ContentMergeOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentMergeOperation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “contentMergeOperation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PutToContentMergeOperationRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ContentMergeOperationInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “contentMergeOperation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “contentMergeOperation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToAdvancedDocumentUploadRelationForDocument(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “advancedDocumentUpload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToAdvancedDocumentUploadRelationForDocumentAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “advancedDocumentUpload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “advancedDocumentUpload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToAdvancedDocumentUploadRelationForDocumentAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “advancedDocumentUpload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “advancedDocumentUpload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResult(DocuWare.Platform.ServerClient.ImportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResultAsync(DocuWare.Platform.ServerClient.ImportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “importDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ImportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “importDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResult(DocuWare.Platform.ServerClient.SynchronizationSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResultAsync(DocuWare.Platform.ServerClient.SynchronizationSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “importDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToImportDocumentsRelationForImportResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SynchronizationSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “importDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “importDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToUnprocessedDocumentUploadRelationForDocument(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “unprocessedDocumentUpload”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToUnprocessedDocumentUploadRelationForDocumentAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “unprocessedDocumentUpload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “unprocessedDocumentUpload”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToUnprocessedDocumentUploadRelationForDocumentAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “unprocessedDocumentUpload” asynchronously.</summary>
            <remarks>This method follows the link for the relation “unprocessedDocumentUpload”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromQueryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “query”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromQueryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “query” asynchronously.</summary>
            <remarks>This method follows the link for the relation “query”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDocumentsQueryResultFromQueryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “query” asynchronously.</summary>
            <remarks>This method follows the link for the relation “query”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromDialogsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromDialogsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromDialogsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “dialogs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogs”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromSearchesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “searches”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromSearchesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “searches” asynchronously.</summary>
            <remarks>This method follows the link for the relation “searches”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromSearchesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “searches” asynchronously.</summary>
            <remarks>This method follows the link for the relation “searches”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogFromCustomSearchRelation">
            <summary>Calls the HTTP Get method on the link for the relation “customSearch”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogFromCustomSearchRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “customSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “customSearch”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogFromCustomSearchRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “customSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “customSearch”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromResultTreesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “resultTrees”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromResultTreesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “resultTrees” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultTrees”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromResultTreesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “resultTrees” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultTrees”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromStoresRelation">
            <summary>Calls the HTTP Get method on the link for the relation “stores”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromStoresRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “stores” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stores”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromStoresRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “stores” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stores”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromTaskListsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “taskLists”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromTaskListsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “taskLists” asynchronously.</summary>
            <remarks>This method follows the link for the relation “taskLists”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfosFromTaskListsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “taskLists” asynchronously.</summary>
            <remarks>This method follows the link for the relation “taskLists”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetFileCabinetFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetFileCabinetFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetFileCabinetFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStampsFromStampsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “stamps”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStampsFromStampsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “stamps” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stamps”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStampsFromStampsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “stamps” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stamps”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetNotificationsFromNotificationsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “notifications”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetNotificationsFromNotificationsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “notifications” asynchronously.</summary>
            <remarks>This method follows the link for the relation “notifications”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetNotificationsFromNotificationsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “notifications” asynchronously.</summary>
            <remarks>This method follows the link for the relation “notifications”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNotificationsRelationForNotifications(DocuWare.Platform.ServerClient.Notifications)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “notifications”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNotificationsRelationForNotificationsAsync(DocuWare.Platform.ServerClient.Notifications)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “notifications” asynchronously.</summary>
            <remarks>This method follows the link for the relation “notifications”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNotificationsRelationForNotificationsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.Notifications)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “notifications” asynchronously.</summary>
            <remarks>This method follows the link for the relation “notifications”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FileCabinetTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToTransferRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentsTransferInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “transfer” asynchronously.</summary>
            <remarks>This method follows the link for the relation “transfer”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfoFromVersionHistoryResultListRelation">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistoryResultList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfoFromVersionHistoryResultListRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistoryResultList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistoryResultList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetDialogInfoFromVersionHistoryResultListRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “versionHistoryResultList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “versionHistoryResultList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResult(DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToFieldValueStatisticsRelationForFieldValueStatisticsResult(DocuWare.Platform.ServerClient.FieldValueStatisticsExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fieldValueStatistics”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToFieldValueStatisticsRelationForFieldValueStatisticsResultAsync(DocuWare.Platform.ServerClient.FieldValueStatisticsExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fieldValueStatistics” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fieldValueStatistics”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToFieldValueStatisticsRelationForFieldValueStatisticsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FieldValueStatisticsExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “fieldValueStatistics” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fieldValueStatistics”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDataRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationData”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDataRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationData” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationData”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDataRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationData” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationData”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDeleteDataRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationDeleteData”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDeleteDataRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationDeleteData” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationDeleteData”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToReplicationDeleteDataRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “replicationDeleteData” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationDeleteData”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToSetupReplicationRelationForString(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “setupReplication”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToSetupReplicationRelationForStringAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “setupReplication” asynchronously.</summary>
            <remarks>This method follows the link for the relation “setupReplication”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToSetupReplicationRelationForStringAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “setupReplication” asynchronously.</summary>
            <remarks>This method follows the link for the relation “setupReplication”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStreamFromReplicationInfoRelation">
            <summary>Calls the HTTP Get method on the link for the relation “replicationInfo”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStreamFromReplicationInfoRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “replicationInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationInfo”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.GetStreamFromReplicationInfoRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “replicationInfo” asynchronously.</summary>
            <remarks>This method follows the link for the relation “replicationInfo”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNextSequenceElementRelationForSequenceResult(DocuWare.Platform.ServerClient.SequenceRequest)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “nextSequenceElement”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNextSequenceElementRelationForSequenceResultAsync(DocuWare.Platform.ServerClient.SequenceRequest)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “nextSequenceElement” asynchronously.</summary>
            <remarks>This method follows the link for the relation “nextSequenceElement”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinet.PostToNextSequenceElementRelationForSequenceResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SequenceRequest)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “nextSequenceElement” asynchronously.</summary>
            <remarks>This method follows the link for the relation “nextSequenceElement”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinetField">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.FixedEntry">
            <summary>
            Fixed value of the field.If it's null the field has no fixed value.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.FieldInfoText">
            <summary>
            Description of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.Scope">
            <summary>
            Gets whether the field is a user or a system field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.DWFieldType">
            <summary>
            The DocuWare type of the field
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.Length">
            <summary>
            Lenght of the field (for text fields).
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.DBFieldName">
            <summary>
            The name of the database column for the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.DisplayName">
            <summary>
            Label (display name) of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.DropLeadingZero">
            <summary>
            Determines whether the system will automatically remove any leading zeros. If both the Remove leading spaces and Remove leading zeros options are enabled, both leading spaces and zeros are removed: _07896 becomes 7896.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.DropLeadingBlanks">
            <summary>
            Determines whether the system will automatically remove any leading spaces. If both the Remove leading spaces and Remove leading zeros options are enabled, both leading spaces and zeros are removed: _07896 becomes 7896.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.UsedAsDocumentName">
            <summary>
            Determines whether the field is used as document name.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.NotEmpty">
            <summary>
            If this flag is true then this field must have an entry, otherwise the document cannot be stored.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetField.Precision">
            <summary>
            The number of decimal places that can be entered after the decimal point of a numeric field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinetFieldScope">
            <remarks/>
            <summary>
            The scope of the file cabinet field.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FileCabinetFieldScope.User">
            <summary>
            User defined field.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FileCabinetFieldScope.System">
            <summary>
            System field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWFieldType">
            <remarks/>
            <summary>
            Type of a DocuWare file cabinet field.
            			Please Do Not Change order because it matches DocuWare.FileCabinet.Settings.DocuWareType
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExtendedUserRights">
            <remarks/>
            <summary>
            Defines the extended rights of the user.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedUserRights.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExtendedUserRights.AllowViewAuditData">
            <summary>
            Gets or sets a value indicating whether the right for viewing audit data is allowed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.VersionManagementMode">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementMode.Disable">
            <summary>
            Version management is disabled.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementMode.Manual">
            <summary>
            Version management is set to manual mode.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.VersionManagementMode.Automatic">
            <summary>
            Version management is set to automatic mode.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogTypes">
            <remarks/>
            <summary>
            Types of dialogs.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.Search">
            <summary>
            Search dialog.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.Store">
            <summary>
            Store dialog.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.ResultList">
            <summary>
            Result list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.ResultTree">
            <summary>
            Tree view.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.InfoDialog">
            <summary>
            Info dialog.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogTypes.TaskList">
            <summary>
            Task list(result list with predefiened conditions).
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.User">
            <remarks/>
            <summary>
            User details and settings
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.EMail">
            <summary>
            The email address of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.DefaultWebBasket">
            <summary>
            Default Web Basket
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.OutOfOffice">
            <summary>
            Out of office settings
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.RegionalSettings">
            <summary>
            Regional settings
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.Id">
            <summary>
            The ID of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.Name">
            <summary>
            The display name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.FirstName">
            <summary>
            The first name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.LastName">
            <summary>
            The last name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.Salutation">
            <summary>
            The salutation of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.DBName">
            <summary>
            The databasename of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.Active">
            <summary>
            The value indicates whether the user is active or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.NetworkId">
            <summary>
            The networkId of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.DefaultWebBasketRelationLink">
            <summary>Gets the Uri of the link for the relation “defaultWebBasket”.</summary>
            <remarks>Returns the uri of the link for the relation “defaultWebBasket” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.GroupsRelationLink">
            <summary>Gets the Uri of the link for the relation “groups”.</summary>
            <remarks>Returns the uri of the link for the relation “groups” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.User.RolesRelationLink">
            <summary>Gets the Uri of the link for the relation “roles”.</summary>
            <remarks>Returns the uri of the link for the relation “roles” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetUserFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetUserFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetUserFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PostToSelfRelationForUser(DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PostToSelfRelationForUserAsync(DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PostToSelfRelationForUserAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.User)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetFileCabinetFromDefaultWebBasketRelation">
            <summary>Calls the HTTP Get method on the link for the relation “defaultWebBasket”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetFileCabinetFromDefaultWebBasketRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “defaultWebBasket” asynchronously.</summary>
            <remarks>This method follows the link for the relation “defaultWebBasket”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetFileCabinetFromDefaultWebBasketRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “defaultWebBasket” asynchronously.</summary>
            <remarks>This method follows the link for the relation “defaultWebBasket”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetGroupsFromGroupsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “groups”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetGroupsFromGroupsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetGroupsFromGroupsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToGroupsRelationForString(DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “groups”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToGroupsRelationForStringAsync(DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToGroupsRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “groups” asynchronously.</summary>
            <remarks>This method follows the link for the relation “groups”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetRolesFromRolesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “roles”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetRolesFromRolesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.GetRolesFromRolesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToRolesRelationForString(DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “roles”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToRolesRelationForStringAsync(DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.User.PutToRolesRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.AssignmentOperation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “roles” asynchronously.</summary>
            <remarks>This method follows the link for the relation “roles”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OutOfOffice">
            <remarks/>
            <summary>
            Defines when a user is out of office
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OutOfOffice.IsOutOfOffice">
            <summary>
            Flag which marks either user is in the office or not.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OutOfOffice.StartDateTime">
            <summary>
            Start datetime after which user will not be in the office.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OutOfOffice.EndDateTime">
            <summary>
            Ending datetime after which user will be in the office.If not set user will be out of office for unlimited amount of time.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RegionalSettings">
            <remarks/>
            <summary>
            Defines user locale
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormOption">
            <remarks/>
            <summary>
            An option for a check box or radio group
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormControl">
            <remarks/>
            <summary>
            Base class for web form fields
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Position">
            <remarks/>
            <summary>
            Size and positioning of controls
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Behavior">
            <remarks/>
            <summary>
            Definition of a behavior for forms
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BehaviorCondition">
            <remarks/>
            <summary>
            Definition of a behavior condition
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Operator">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Continuation">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BehaviorAction">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Zone">
            <remarks/>
            <summary>
            Definition of a Template Zone
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AlignmentType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Stamp">
            <remarks/>
            <summary>
            Models a DocuWare stamp.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.FormField">
            <summary>
            List of the stamp form fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Fields">
            <summary>
            List of the stamp fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.HeadFont">
            <summary>
            Font for the additional items of information.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.PasswordProtected">
            <summary>
            If this flag is true password is needed to place the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Signature">
            <summary>
            The type of the stamp signature if there is any.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Color">
            <summary>
            The color of the stamp content
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Name">
            <summary>
            The name of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.DisplayName">
            <summary>
            The display name of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Overwrite">
            <summary>
            If this flag is true the system will overwrite existing database entries with the stamp entries.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Id">
            <summary>
            The id of the stamp, which is a GUID usually.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.IsHidden">
            <summary>
            Determines whether the stamp is visible.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.Autosave">
            <summary>
            Automatically save the stamp after specified period in seconds. Value -1 mean the stamp have to be saved on user action.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.CloseAfterStampSet">
            <summary>
            Automatically close the window after stamp is placed in a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.AutomaticallyOpenNextDocument">
            <summary>
            Determines whether the stamp remains active after being stored.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.KeepStampActive">
            <summary>
            Determines whether next document is opened automatically after the stamp is stored.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.AsBitmapRelationLink">
            <summary>Gets the Uri of the link for the relation “asBitmap”.</summary>
            <remarks>Returns the uri of the link for the relation “asBitmap” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamp.AsSvgRelationLink">
            <summary>Gets the Uri of the link for the relation “asSvg”.</summary>
            <remarks>Returns the uri of the link for the relation “asSvg” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsBitmapRelation">
            <summary>Calls the HTTP Get method on the link for the relation “asBitmap”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsBitmapRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “asBitmap” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asBitmap”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsBitmapRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “asBitmap” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asBitmap”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsBitmapRelationForStream(DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asBitmap”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsBitmapRelationForStreamAsync(DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asBitmap” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asBitmap”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsBitmapRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asBitmap” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asBitmap”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsSvgRelation">
            <summary>Calls the HTTP Get method on the link for the relation “asSvg”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsSvgRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “asSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asSvg”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.GetStreamFromAsSvgRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “asSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asSvg”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsSvgRelationForStream(DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asSvg”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsSvgRelationForStreamAsync(DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asSvg”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamp.PostToAsSvgRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.FormFieldValues)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “asSvg” asynchronously.</summary>
            <remarks>This method follows the link for the relation “asSvg”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampFormField">
            <remarks/>
            <summary>
            A form field for variable text to a text stamp.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.Name">
            <summary>
            Name of the form field
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.Label">
            <summary>
            The label used to represent the form field when the stamp is set on the client.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.Length">
            <summary>
            Lenght of the form field
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.Precision">
            <summary>
            Gets the number of digits after the decimal point in case of a numeric field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.DWFieldType">
            <summary>
            The DocuWare type of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.Mask">
            <summary>
            Mask(regular expression) for limiting the input options for the form field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.MaskErrorText">
            <summary>
            Error message to display if the input does not match the mask definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.SampleEditText">
            <summary>
            Sample entry that matches the mask definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.SelectListsAssigned">
            <summary>
            A value indicating whether the any select list is assigned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.SelectListValuesRelationLink">
            <summary>Gets the Uri of the link for the relation “selectListValues”.</summary>
            <remarks>Returns the uri of the link for the relation “selectListValues” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormField.SimpleSelectListRelationLink">
            <summary>Gets the Uri of the link for the relation “simpleSelectList”.</summary>
            <remarks>Returns the uri of the link for the relation “simpleSelectList” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSelectListValuesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “selectListValues”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSelectListValuesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “selectListValues” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListValues”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSelectListValuesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “selectListValues” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListValues”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSelectListValuesRelationForSelectListResult(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectListValues”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSelectListValuesRelationForSelectListResultAsync(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectListValues” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListValues”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSelectListValuesRelationForSelectListResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “selectListValues” asynchronously.</summary>
            <remarks>This method follows the link for the relation “selectListValues”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSimpleSelectListRelation">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSimpleSelectListRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.GetSelectListResultFromSimpleSelectListRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSimpleSelectListRelationForSelectListResult(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSimpleSelectListRelationForSelectListResultAsync(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampFormField.PostToSimpleSelectListRelationForSelectListResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampField">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampField.Value">
            <summary>
            Get or sets the form field value casted to the index field type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampField.Name">
            <summary>
            Name of the index field that will be changed by the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampField.DWType">
            <summary>
            The DocuWare type of the index field that will be changed by the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampField.Length">
            <summary>
            Length of the index field that will be changed by the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampField.HasFixedEntry">
            <summary>
            Determines whether the stamp field has defined fixed entry.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentIndexFieldValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BitmapStamp">
            <remarks/>
            <summary>
            Stamp that applies an image.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BitmapStamp.ContentRelationLink">
            <summary>Gets the Uri of the link for the relation “content”.</summary>
            <remarks>Returns the uri of the link for the relation “content” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BitmapStamp.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BitmapStamp.GetStreamFromContentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BitmapStamp.GetStreamFromContentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BitmapStamp.GetStreamFromContentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StrokeStamp">
            <remarks/>
            <summary>
            Stamp that allows you to add a signature using an electronic pen.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StrokeStamp.StrokeWidth">
            <summary>
            The line weight of the handwritten signature.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StrokeStamp.StrokeColor">
            <summary>
            Color of the line of the handwritten signature.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextStamp">
            <remarks/>
            <summary>
            Stamp that applies a defined text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextStamp.Font">
            <summary>
            The font of the text of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextStamp.Content">
            <summary>
            The text to be displayed in the stamp.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Workflow">
            <remarks/>
            <summary>
            Model a workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.ColumnDefinition">
            <summary>
            List of the visible columns of the workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.Id">
            <summary>
            Id of the workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.Name">
            <summary>
            Name of the workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.TaskCount">
            <summary>
            Number of items of the query leading to this result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.FileCabinetId">
            <summary>
            Id of the file cabinet which has been connected with this workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.TasksRelationLink">
            <summary>Gets the Uri of the link for the relation “tasks”.</summary>
            <remarks>Returns the uri of the link for the relation “tasks” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflow.CountRelationLink">
            <summary>Gets the Uri of the link for the relation “count”.</summary>
            <remarks>Returns the uri of the link for the relation “count” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksFromTasksRelation">
            <summary>Calls the HTTP Get method on the link for the relation “tasks”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksFromTasksRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “tasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tasks”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksFromTasksRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “tasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tasks”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.PostToTasksRelationForWorkflowTasks(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tasks”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.PostToTasksRelationForWorkflowTasksAsync(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tasks”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.PostToTasksRelationForWorkflowTasksAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tasks”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksCountFromCountRelation">
            <summary>Calls the HTTP Get method on the link for the relation “count”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksCountFromCountRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflow.GetWorkflowTasksCountFromCountRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “count” asynchronously.</summary>
            <remarks>This method follows the link for the relation “count”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnsDefinition">
            <remarks/>
            <summary>
            A columns definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnsDefinition.Column">
            <summary>
            Columns for a workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnsDefinition.Sort">
            <summary>
            Sort order of columns for a workflow.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Column">
            <remarks/>
            <summary>
            A column for a workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Column.ColumnOptions">
            <summary>
            Additional options specific for column type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Column.Label">
            <summary>
            Label of the column.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Column.Id">
            <summary>
            Identifier of the column.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Column.ColumnValueType">
            <summary>
            Type of the column.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Column.ColumnType">
            <summary>
            Type of the column as source.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnOptions">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DateColumn">
            <remarks/>
            <summary>
            Additional options for a date or datetime column in a workflow
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.NumberColumn">
            <remarks/>
            <summary>
            Additional options for a numeric column in a workflow
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NumberColumn.Precision">
            <summary>
            Precision of number in a number column
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextColumn">
            <remarks/>
            <summary>
            Additional options for a text column in a workflow
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TextColumn.Length">
            <summary>
            Length of text in a text column
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnValueTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnValueTypeEnum.Text">
            <summary>
            Text column
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnValueTypeEnum.Decimal">
            <summary>
            Decimal column
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnValueTypeEnum.Date">
            <summary>
            Date column
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnValueTypeEnum.DateTime">
            <summary>
            Date Time column
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.GlobalVariable">
            <summary>
            Global variable
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.IndexField">
            <summary>
            File cabinet field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.TaskState">
            <summary>
            System column - taskState
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.ReceivedOn">
            <summary>
            System column - tasks received on
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.ReminderDate">
            <summary>
            System column - reminder date
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.ExpireDate">
            <summary>
            System column - expire date
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.Instance">
            <summary>
            System column - instance id
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.Version">
            <summary>
            System column - workflow version
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.Activity">
            <summary>
            System column - activity name
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.TaskUser">
            <summary>
            System column - task user
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.StartDate">
            <summary>
            System column - workflow start date
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.LastErrorActivity">
            <summary>
            System column - last error activity
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.LastErrorMessage">
            <summary>
            System column - last error message
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ColumnTypeEnum.LastDecisionUser">
            <summary>
            System column - last decision user
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnSortOrder">
            <remarks/>
            <summary>
            A sort by a specific column.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnSortOrder.ColumnId">
            <summary>
            Column identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnSortOrder.Direction">
            <summary>
            A sort direction.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SortDirection">
            <remarks/>
            <summary>
            Define a sort direction
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SortDirection.Default">
            <summary>
            Sorts a field in the default order.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SortDirection.Asc">
            <summary>
            Sorts a field in ascending order.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SortDirection.Desc">
            <summary>
            Sorts a field in descending order.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Decision">
            <remarks/>
            <summary>
            A workflow decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.TaskFormField">
            <summary>
            List of workflow fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.DecisionOperations">
            <summary>
            Operations which can be executed on a decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.Id">
            <summary>
            Identifier of the decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.Description">
            <summary>
            Description of the decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.Label">
            <summary>
            Label of the decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decision.Color">
            <summary>
            Color of the decision.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Decision.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskFormField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DescriptionFormField">
            <remarks/>
            <summary>
            A description form.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DescriptionFormField.LinkParameters">
            <summary>
            List of link parameters.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DescriptionFormField.DescriptionText">
            <summary>
            Text of the description.
                         Consumer should replaces the format item or items in the specified string with the string representation of the corresponding LinkParameters as html links.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LinkParameter">
            <remarks/>
            <summary>
            A link parameter.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LinkParameter.Url">
            <summary>
            Contains a web address.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LinkParameter.Label">
            <summary>
            Contains text, which appears to the user instead of the url.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BaseForm">
            <remarks/>
            <summary>
            A base form.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseForm.FormFieldType">
            <summary>
            Type of the form field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseForm.Label">
            <summary>
            Label of the form field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseForm.Id">
            <summary>
            Identifier of the form field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Link">
            <summary>
            Link form
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Description">
            <summary>
            Description form
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Password">
            <summary>
            Password field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Text">
            <summary>
            Text field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Decimal">
            <summary>
            Decimal field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Date">
            <summary>
            Date field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.DateTime">
            <summary>
            DateTime field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.User">
            <summary>
            User field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Role">
            <summary>
            Role field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.SubstitutionRule">
            <summary>
            Substitution rule field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FormTypeEnum.Keyword">
            <summary>
            Keyword field
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.KeywordsField">
            <remarks/>
            <summary>
            A keyword field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskTextField">
            <remarks/>
            <summary>
            A text field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskTextField.FieldMask">
            <summary>
            Field mask a text field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskTextField.Length">
            <summary>
            Length of the field value.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldMask">
            <remarks/>
            <summary>
            A text field mask.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMask.ErrorText">
            <summary>
            Error message to display if the input does not match the mask definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMask.RegularExpression">
            <summary>
            Regular expression for limiting the input options for the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMask.SampleEditText">
            <summary>
            Sample entry that matches the mask definition.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CommonFormField">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.PrefillValue">
            <summary>
            Default value of the form field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.Mandatory">
            <summary>
            Determines whether the field can be empty.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.Description">
            <summary>
            Description of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.HasSelectList">
            <summary>
            Determines whether the field value can be selected from a select list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.IsReadOnly">
            <summary>
            Determines whether the field is read only.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.IsSelectListOnly">
            <summary>
            If this flag is true, no one can allocate a new entry for this field when confirming a task, unless this is contained in a selection list or empty.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CommonFormField.SelectListGuid">
            <summary>
            Identifier of the select list.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LinkForm">
            <remarks/>
            <summary>
            A link form.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LinkForm.Url">
            <summary>
            Contains a web address.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskNumberField">
            <remarks/>
            <summary>
            A number field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskNumberField.Precision">
            <summary>
            Precision of the field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RoleField">
            <remarks/>
            <summary>
            A role field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.MultiValueField">
            <remarks/>
            <summary>
            A multi value field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.MultiValueField.IsMultiselect">
            <summary>
            Determines whether the field is multi select (value can be a range of values from a select list).
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubstitutionRuleField">
            <remarks/>
            <summary>
            A substitution rule field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskDateTimeField">
            <remarks/>
            <summary>
            A dateTime field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UserField">
            <remarks/>
            <summary>
            A user field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecisionOperations">
            <remarks/>
            <summary>
            Operations which can be executed on a decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionOperations.BaseDecisionOperations">
            <summary>
            Base operations which can be executed on a decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionOperations.ExtendedDecisionOperations">
            <summary>
            Operations which can be executed on a decision only from form interface.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DecisionOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BaseDecisionOperations">
            <remarks/>
            <summary>
            Base operations which can be executed on a decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseDecisionOperations.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseDecisionOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseDecisionOperations.GetDecisionFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseDecisionOperations.GetDecisionFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseDecisionOperations.GetDecisionFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExtendedDecisionOperations">
            <remarks/>
            <summary>
            Operations which can be executed on a decision only from form interface.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExtendedDecisionOperations.ConfirmRelationLink">
            <summary>Gets the Uri of the link for the relation “confirm”.</summary>
            <remarks>Returns the uri of the link for the relation “confirm” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedDecisionOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedDecisionOperations.PostToConfirmRelationForString(DocuWare.Platform.ServerClient.ConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedDecisionOperations.PostToConfirmRelationForStringAsync(DocuWare.Platform.ServerClient.ConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm” asynchronously.</summary>
            <remarks>This method follows the link for the relation “confirm”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedDecisionOperations.PostToConfirmRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm” asynchronously.</summary>
            <remarks>This method follows the link for the relation “confirm”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryStep">
            <remarks/>
            <summary>
            A history step.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.Info">
            <summary>
            Additional information for the history step according to the type of the step.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.StepNumber">
            <summary>
            Sequential received number of the step.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.StepDate">
            <summary>
            Creation date and time of the history step.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.ActivityName">
            <summary>
            Name of the activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.ActivityType">
            <summary>
            Type of the activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HistoryStep.StepType">
            <summary>
            Type of the history step.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryStepInfo">
            <remarks/>
            <summary>
            Additional information for the history step according to the type of the step.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistoryStepInfoBase">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ConditionHistoryStep">
            <remarks/>
            <summary>
            A history step for Condition activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ConditionHistoryStep.OutputName">
            <summary>
            Output name of the exit.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecisionHistoryStep">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionHistoryStep.InputFields">
            <summary>
            List of fields which has been confirmed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionHistoryStep.Assignments">
            <summary>
            List of assignments which has been executed in this step.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionHistoryStep.DocumentUserVersion">
            <summary>
            Document user version when the task is confirmed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionHistoryStep.UserName">
            <summary>
            Name of the user who confirmed the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionHistoryStep.DecisionName">
            <summary>
            Name of the decision which has been confirmed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EmailHistoryStep">
            <remarks/>
            <summary>
            A history step for Email activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EmailHistoryStep.Recipients">
            <summary>
            List of recipient names who received the email.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EmailHistoryStep.Subject">
            <summary>
            Subject of the email.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EndHistoryStep">
            <remarks/>
            <summary>
            A history step for End activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EndHistoryStep.DocumentUserVersion">
            <summary>
            Document user version when the instance is finished.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ErrorHistoryStep">
            <remarks/>
            <summary>
            A history step for Error exit.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ErrorHistoryStep.ErrorMessage">
            <summary>
            Error message which cause error exit.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ErrorHistoryStep.FullErrorMessage">
            <summary>
            Contains full error message.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ErrorHistoryStep.OutputName">
            <summary>
            Name of the error exit.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.GeneralErrorDecisionHistoryStep">
            <remarks/>
            <summary>
            A history step for General error.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GeneralErrorDecisionHistoryStep.UserName">
            <summary>
            Name of the user who confirmed the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GeneralErrorDecisionHistoryStep.DecisionName">
            <summary>
            Name of the decision which has been confirmed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OutOfOfficeHistoryStep">
            <remarks/>
            <summary>
            A history step for Out of office exit.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OutOfOfficeHistoryStep.NewUser">
            <summary>
            User name of the new assigned user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OutOfOfficeHistoryStep.OutOfOfficeUser">
            <summary>
            User name of the user who went out of office.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ReassignHistoryStep">
            <remarks/>
            <summary>
            A history step for Reassign operation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignHistoryStep.RecipientsName">
            <summary>
            List of names of the new assigned users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignHistoryStep.Subject">
            <summary>
            Subject of the email
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignHistoryStep.SendMail">
            <summary>
            Determines whether emails are sent to the new assigned users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignHistoryStep.UserName">
            <summary>
            Name of the user who reassigned the task.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestDecisionHistoryStep">
            <remarks/>
            <summary>
            A history step for confirmed decision in request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionHistoryStep.InputFields">
            <summary>
            List of fields which has been confirmed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionHistoryStep.DocumentUserVersion">
            <summary>
            Document user version when the task is confirmed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionHistoryStep.UserName">
            <summary>
            Name of the user who confirmed the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionHistoryStep.DecisionName">
            <summary>
            Name of the decision which has been confirmed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestEndHistoryStep">
            <remarks/>
            <summary>
            A history step for finish a request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestEndHistoryStep.UserName">
            <summary>
            Name of the user who finish the request.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestStartHistoryStep">
            <remarks/>
            <summary>
            A history step for trigger a request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestStartHistoryStep.RequestText">
            <summary>
            Request text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestStartHistoryStep.UserName">
            <summary>
            Name of the user who triggered the request.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StartHistoryStep">
            <remarks/>
            <summary>
            A history step for Start activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StartHistoryStep.DocumentUserVersion">
            <summary>
            Document user version when the instance is triggered.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StopHistoryStep">
            <remarks/>
            <summary>
            A history step for Stop workflow operation.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StopHistoryStep.UserName">
            <summary>
            Name of the user who stopped the instance.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StopHistoryStep.DocumentUserVersion">
            <summary>
            Document user version when the instance is stopped.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TimeoutHistoryStep">
            <remarks/>
            <summary>
            A history step for Time out exit.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TimeoutHistoryStep.OutputName">
            <summary>
            Name of the time out exit of the activity.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebServiceHistoryStep">
            <remarks/>
            <summary>
            A history step for Web Service activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WebServiceHistoryStep.Parameters">
            <summary>
            List of parameters sent to the web service method.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WebServiceHistoryStep.Results">
            <summary>
            List of assignments from result of the web service method to Global variables.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WebServiceHistoryStep.Method">
            <summary>
            Name of the method which is called.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StepTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.DecisionHistoryStep">
            <summary>
            Confirmed decision history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.GeneralErrorDecisionHistoryStep">
            <summary>
            Confirmed general error history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.ReassignHistoryStep">
            <summary>
            Reassign task history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.AssignDataHistoryStep">
            <summary>
            Assign data history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.AssignToHistoryStep">
            <summary>
            Assign to history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.ConditionHistoryStep">
            <summary>
            Condition history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.EmailHistoryStep">
            <summary>
            Email history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.WebServiceHistoryStep">
            <summary>
            Web service history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.StartHistoryStep">
            <summary>
            Start history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.StopHistoryStep">
            <summary>
            Stop workflow history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.EndHistoryStep">
            <summary>
            End history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.ErrorHistoryStep">
            <summary>
            Error exit history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.TimeoutHistoryStep">
            <summary>
            Time out history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.OutOfOfficeHistotyStep">
            <summary>
            Out of office history step
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.RequestDecisionHistoryStep">
            <summary>
            Confirmed decision history step from request.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.RequestStartHistoryStep">
            <summary>
            Start history step from request.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.StepTypeEnum.RequestEndHistoryStep">
            <summary>
            End history step from request.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.InstanceHistory">
            <remarks/>
            <summary>
            List of history steps for an instance.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.HistorySteps">
            <summary>
            List of history steps.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.Id">
            <summary>
            Instance id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.WorkflowId">
            <summary>
            Workflow id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.Name">
            <summary>
            Workflow name.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.Version">
            <summary>
            Workflow version number.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.WorkflowRequest">
            <summary>
            True if it is history for workflow request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.InstanceHistory.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.InstanceHistory.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.InstanceHistory.GetInstanceHistoryFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.InstanceHistory.GetInstanceHistoryFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.InstanceHistory.GetInstanceHistoryFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Organizations">
            <remarks/>
            <summary>
            List of organizations
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Organizations.Organization">
            <summary>
            List of organizations
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Organizations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceDescription">
            <remarks/>
            <summary>
            Root object that define platform structure.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.Tests">
            <summary>
            Test applications for platform.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.Documentation">
            <summary>
            Documentation links for platform.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.Resources">
            <summary>
            Resource definitions/templates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.Statistics">
            <summary>
            Test applications for platform.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.Version">
            <summary>
            Contains the product version of DocuWare.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.OrganizationsRelationLink">
            <summary>Gets the Uri of the link for the relation “organizations”.</summary>
            <remarks>Returns the uri of the link for the relation “organizations” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.LoginRelationLink">
            <summary>Gets the Uri of the link for the relation “login”.</summary>
            <remarks>Returns the uri of the link for the relation “login” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.GuestLoginRelationLink">
            <summary>Gets the Uri of the link for the relation “guestLogin”.</summary>
            <remarks>Returns the uri of the link for the relation “guestLogin” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.WindowsLoginRelationLink">
            <summary>Gets the Uri of the link for the relation “windowsLogin”.</summary>
            <remarks>Returns the uri of the link for the relation “windowsLogin” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.ChangePasswordRelationLink">
            <summary>Gets the Uri of the link for the relation “changePassword”.</summary>
            <remarks>Returns the uri of the link for the relation “changePassword” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.ResetPasswordRelationLink">
            <summary>Gets the Uri of the link for the relation “resetPassword”.</summary>
            <remarks>Returns the uri of the link for the relation “resetPassword” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.TokenLoginRelationLink">
            <summary>Gets the Uri of the link for the relation “tokenLogin”.</summary>
            <remarks>Returns the uri of the link for the relation “tokenLogin” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.TrustedLoginRelationLink">
            <summary>Gets the Uri of the link for the relation “trustedLogin”.</summary>
            <remarks>Returns the uri of the link for the relation “trustedLogin” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.LogoutRelationLink">
            <summary>Gets the Uri of the link for the relation “logout”.</summary>
            <remarks>Returns the uri of the link for the relation “logout” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.DisconnectRelationLink">
            <summary>Gets the Uri of the link for the relation “disconnect”.</summary>
            <remarks>Returns the uri of the link for the relation “disconnect” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.LoginCookieRelationLink">
            <summary>Gets the Uri of the link for the relation “loginCookie”.</summary>
            <remarks>Returns the uri of the link for the relation “loginCookie” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.UriTemplatesRelationLink">
            <summary>Gets the Uri of the link for the relation “uriTemplates”.</summary>
            <remarks>Returns the uri of the link for the relation “uriTemplates” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.AdhocRenderingRelationLink">
            <summary>Gets the Uri of the link for the relation “adhocRendering”.</summary>
            <remarks>Returns the uri of the link for the relation “adhocRendering” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.RootSchemaRelationLink">
            <summary>Gets the Uri of the link for the relation “rootSchema”.</summary>
            <remarks>Returns the uri of the link for the relation “rootSchema” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.LogRelationLink">
            <summary>Gets the Uri of the link for the relation “log”.</summary>
            <remarks>Returns the uri of the link for the relation “log” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescription.PermanentUrlRelationLink">
            <summary>Gets the Uri of the link for the relation “permanentUrl”.</summary>
            <remarks>Returns the uri of the link for the relation “permanentUrl” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetOrganizationsFromOrganizationsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “organizations”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetOrganizationsFromOrganizationsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “organizations” asynchronously.</summary>
            <remarks>This method follows the link for the relation “organizations”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetOrganizationsFromOrganizationsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “organizations” asynchronously.</summary>
            <remarks>This method follows the link for the relation “organizations”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLoginRelation">
            <summary>Calls the HTTP Get method on the link for the relation “login”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLoginRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “login” asynchronously.</summary>
            <remarks>This method follows the link for the relation “login”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLoginRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “login” asynchronously.</summary>
            <remarks>This method follows the link for the relation “login”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToLoginRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “login”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToLoginRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “login” asynchronously.</summary>
            <remarks>This method follows the link for the relation “login”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToLoginRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “login” asynchronously.</summary>
            <remarks>This method follows the link for the relation “login”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromGuestLoginRelation">
            <summary>Calls the HTTP Get method on the link for the relation “guestLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromGuestLoginRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “guestLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “guestLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromGuestLoginRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “guestLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “guestLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToGuestLoginRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “guestLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToGuestLoginRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “guestLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “guestLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToGuestLoginRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “guestLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “guestLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromWindowsLoginRelation">
            <summary>Calls the HTTP Get method on the link for the relation “windowsLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromWindowsLoginRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “windowsLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “windowsLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromWindowsLoginRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “windowsLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “windowsLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToWindowsLoginRelationForString(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “windowsLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToWindowsLoginRelationForStringAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “windowsLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “windowsLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToWindowsLoginRelationForStringAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “windowsLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “windowsLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromChangePasswordRelation">
            <summary>Calls the HTTP Get method on the link for the relation “changePassword”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromChangePasswordRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “changePassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “changePassword”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromChangePasswordRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “changePassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “changePassword”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToChangePasswordRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “changePassword”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToChangePasswordRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “changePassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “changePassword”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToChangePasswordRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “changePassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “changePassword”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromResetPasswordRelation">
            <summary>Calls the HTTP Get method on the link for the relation “resetPassword”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromResetPasswordRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “resetPassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resetPassword”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromResetPasswordRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “resetPassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resetPassword”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToResetPasswordRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “resetPassword”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToResetPasswordRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “resetPassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resetPassword”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToResetPasswordRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “resetPassword” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resetPassword”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTokenLoginRelation">
            <summary>Calls the HTTP Get method on the link for the relation “tokenLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTokenLoginRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “tokenLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tokenLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTokenLoginRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “tokenLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tokenLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTokenLoginRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tokenLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTokenLoginRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tokenLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tokenLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTokenLoginRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tokenLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tokenLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTrustedLoginRelation">
            <summary>Calls the HTTP Get method on the link for the relation “trustedLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTrustedLoginRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “trustedLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “trustedLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromTrustedLoginRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “trustedLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “trustedLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTrustedLoginRelationForStream(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “trustedLogin”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTrustedLoginRelationForStreamAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “trustedLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “trustedLogin”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToTrustedLoginRelationForStreamAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “trustedLogin” asynchronously.</summary>
            <remarks>This method follows the link for the relation “trustedLogin”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLogoutRelation">
            <summary>Calls the HTTP Get method on the link for the relation “logout”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLogoutRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “logout” asynchronously.</summary>
            <remarks>This method follows the link for the relation “logout”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromLogoutRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “logout” asynchronously.</summary>
            <remarks>This method follows the link for the relation “logout”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromDisconnectRelation">
            <summary>Calls the HTTP Get method on the link for the relation “disconnect”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromDisconnectRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “disconnect” asynchronously.</summary>
            <remarks>This method follows the link for the relation “disconnect”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromDisconnectRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “disconnect” asynchronously.</summary>
            <remarks>This method follows the link for the relation “disconnect”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromLoginCookieRelation">
            <summary>Calls the HTTP Get method on the link for the relation “loginCookie”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromLoginCookieRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “loginCookie” asynchronously.</summary>
            <remarks>This method follows the link for the relation “loginCookie”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromLoginCookieRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “loginCookie” asynchronously.</summary>
            <remarks>This method follows the link for the relation “loginCookie”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetAdhocRenderingFilesFromAdhocRenderingRelation">
            <summary>Calls the HTTP Get method on the link for the relation “adhocRendering”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetAdhocRenderingFilesFromAdhocRenderingRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “adhocRendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “adhocRendering”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetAdhocRenderingFilesFromAdhocRenderingRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “adhocRendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “adhocRendering”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToAdhocRenderingRelationForAdhocRenderingFile(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “adhocRendering”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToAdhocRenderingRelationForAdhocRenderingFileAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “adhocRendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “adhocRendering”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.PostToAdhocRenderingRelationForAdhocRenderingFileAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “adhocRendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “adhocRendering”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromRootSchemaRelation">
            <summary>Calls the HTTP Get method on the link for the relation “rootSchema”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromRootSchemaRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “rootSchema” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rootSchema”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStreamFromRootSchemaRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “rootSchema” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rootSchema”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromPermanentUrlRelation">
            <summary>Calls the HTTP Get method on the link for the relation “permanentUrl”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromPermanentUrlRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “permanentUrl” asynchronously.</summary>
            <remarks>This method follows the link for the relation “permanentUrl”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescription.GetStringFromPermanentUrlRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “permanentUrl” asynchronously.</summary>
            <remarks>This method follows the link for the relation “permanentUrl”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceDescriptionTests">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionTests.HtmlTestClientRelationLink">
            <summary>Gets the Uri of the link for the relation “htmlTestClient”.</summary>
            <remarks>Returns the uri of the link for the relation “htmlTestClient” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionTests.ReflectStampPlacementRelationLink">
            <summary>Gets the Uri of the link for the relation “reflectStampPlacement”.</summary>
            <remarks>Returns the uri of the link for the relation “reflectStampPlacement” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionTests.ReflectDialogQueryRelationLink">
            <summary>Gets the Uri of the link for the relation “reflectDialogQuery”.</summary>
            <remarks>Returns the uri of the link for the relation “reflectDialogQuery” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionTests.QueryStringRelationLink">
            <summary>Gets the Uri of the link for the relation “queryString”.</summary>
            <remarks>Returns the uri of the link for the relation “queryString” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromHtmlTestClientRelation">
            <summary>Calls the HTTP Get method on the link for the relation “htmlTestClient”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromHtmlTestClientRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “htmlTestClient” asynchronously.</summary>
            <remarks>This method follows the link for the relation “htmlTestClient”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromHtmlTestClientRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “htmlTestClient” asynchronously.</summary>
            <remarks>This method follows the link for the relation “htmlTestClient”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectStampPlacementRelationForStampPlacement(DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectStampPlacement”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectStampPlacementRelationForStampPlacementAsync(DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectStampPlacement” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reflectStampPlacement”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectStampPlacementRelationForStampPlacementAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.StampPlacement)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectStampPlacement” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reflectStampPlacement”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectDialogQueryRelationForDialogExpression(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectDialogQuery”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectDialogQueryRelationForDialogExpressionAsync(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectDialogQuery” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reflectDialogQuery”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.PostToReflectDialogQueryRelationForDialogExpressionAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reflectDialogQuery” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reflectDialogQuery”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromQueryStringRelation">
            <summary>Calls the HTTP Get method on the link for the relation “queryString”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromQueryStringRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “queryString” asynchronously.</summary>
            <remarks>This method follows the link for the relation “queryString”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionTests.GetStreamFromQueryStringRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “queryString” asynchronously.</summary>
            <remarks>This method follows the link for the relation “queryString”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.LinkModelOverviewRelationLink">
            <summary>Gets the Uri of the link for the relation “linkModelOverview”.</summary>
            <remarks>Returns the uri of the link for the relation “linkModelOverview” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.SchemasRelationLink">
            <summary>Gets the Uri of the link for the relation “schemas”.</summary>
            <remarks>Returns the uri of the link for the relation “schemas” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.SchemaSearchRelationLink">
            <summary>Gets the Uri of the link for the relation “schemaSearch”.</summary>
            <remarks>Returns the uri of the link for the relation “schemaSearch” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.UriTemplatesDocumentationRelationLink">
            <summary>Gets the Uri of the link for the relation “uriTemplatesDocumentation”.</summary>
            <remarks>Returns the uri of the link for the relation “uriTemplatesDocumentation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromLinkModelOverviewRelation">
            <summary>Calls the HTTP Get method on the link for the relation “linkModelOverview”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromLinkModelOverviewRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “linkModelOverview” asynchronously.</summary>
            <remarks>This method follows the link for the relation “linkModelOverview”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromLinkModelOverviewRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “linkModelOverview” asynchronously.</summary>
            <remarks>This method follows the link for the relation “linkModelOverview”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetXmlSchemasFromSchemasRelation">
            <summary>Calls the HTTP Get method on the link for the relation “schemas”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetXmlSchemasFromSchemasRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “schemas” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schemas”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetXmlSchemasFromSchemasRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “schemas” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schemas”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromSchemaSearchRelation">
            <summary>Calls the HTTP Get method on the link for the relation “schemaSearch”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromSchemaSearchRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “schemaSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schemaSearch”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromSchemaSearchRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “schemaSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schemaSearch”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromUriTemplatesDocumentationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “uriTemplatesDocumentation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromUriTemplatesDocumentationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “uriTemplatesDocumentation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “uriTemplatesDocumentation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionDocumentation.GetStreamFromUriTemplatesDocumentationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “uriTemplatesDocumentation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “uriTemplatesDocumentation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics.CfsRelationLink">
            <summary>Gets the Uri of the link for the relation “cfs”.</summary>
            <remarks>Returns the uri of the link for the relation “cfs” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics.PostToCfsRelationForStream(DocuWare.Platform.ServerClient.CFSStatisticGeneral)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “cfs”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics.PostToCfsRelationForStreamAsync(DocuWare.Platform.ServerClient.CFSStatisticGeneral)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “cfs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “cfs”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceDescriptionStatistics.PostToCfsRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.CFSStatisticGeneral)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “cfs” asynchronously.</summary>
            <remarks>This method follows the link for the relation “cfs”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.XmlSchemas">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlSchemas.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.XmlSchema">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.XmlSchema.SchemaRelationLink">
            <summary>Gets the Uri of the link for the relation “schema”.</summary>
            <remarks>Returns the uri of the link for the relation “schema” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlSchema.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlSchema.GetStreamFromSchemaRelation">
            <summary>Calls the HTTP Get method on the link for the relation “schema”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlSchema.GetStreamFromSchemaRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “schema” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schema”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlSchema.GetStreamFromSchemaRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “schema” asynchronously.</summary>
            <remarks>This method follows the link for the relation “schema”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignmentOperation">
            <remarks/>
            <summary>
            Add or remove assignments.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AssignmentOperation.Ids">
            <summary>
            List of ids of the assigned objects.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignmentOperationType">
            <remarks/>
            <summary>
            Types of the assignment operation.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.AssignmentOperationType.Add">
            <summary>
            Add assignment.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.AssignmentOperationType.Remove">
            <summary>
            Remove assignment.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileDownload">
            <remarks/>
            <summary>
            Define how a document can be downloaded
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileDownload.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownload.TargetFileType">
            <summary>
            Specifies the target format (target file type) of the downloaded file.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownload.DirectDownload">
            <summary>
            If this flag is true then the file is directly downloaded, even if the browser provides a plugin for this file.
            </summary>
            <remarks>
            
                     If you have a browser plugin installed which shows you the content a PDF file in the browser directly then this
                     flag can be used to override this behaviour and let the browser open a "Save file" box.
                   
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownload.AutoPrint">
            <summary>
            If this flag is true then the PDF will have a script which opens the print dialog immediately.
            </summary>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownload.SendByEmail">
            <summary>
            This flag should be true if the document will be sent by email.
            </summary>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileDownloadType">
            <remarks/>
            <summary>
            Define the format that will be used to download a document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FileDownloadType.Auto">
            <summary>
            The type of the downloaded file determined by the server automatically.
                       In case of a single file this is directly downloaded, otherwise a ZIP file is created.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FileDownloadType.Zip">
            <summary>
            The files are always downloaded as ZIP file.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.FileDownloadType.PDF">
            <summary>
            The files are always downloaded as PDF file. If more than one document is downloaded then every document is converted to PDF and the PDF files are packed in a ZIP file.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileDownloadBase">
            <remarks/>
            <summary>
            Define how a page of a document can be downloaded
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileDownloadBase.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownloadBase.Layers">
            <summary>
            Specifies the annotation layers to be included in the output file.
            </summary>
            <remarks>
            
            					This list is used only when KeepAnnotations flag is set to true; if this flag is set to false, then this list is ignored and no layers are included.
            					In order to keep all layers, just set KeepAnnotations to true and pass an empty list or do not specify a list at all.
            				
            </remarks>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownloadBase.KeepAnnotations">
            <summary>
            If this flag is true then the annotations are rendered in the PDF file, otherwise the annotations are removed.
            </summary>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileDownloadPage">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileDownloadPage.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownloadPage.AutoPrint">
            <summary>
            If this flag is true then the PDF will have a script which opens the print dialog immediately.
            </summary>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileDownloadPage.SendByEmail">
            <summary>
            This flag should be true if the document will be sent by email.
            </summary>
            <remarks>
            This flag applies only to the PDF target format.
            </remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentActionInfo">
            <remarks/>
            <summary>
            Information about the action pereformed on document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentActionInfo.DocumentActionParameters">
            <summary>
            Specific data for the action
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentActionInfo.DocumentAction">
            <summary>
            Actions pereformed on document
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentActionParameters">
            <remarks/>
            <summary>
            Basic parameters for specific action
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAction">
            <remarks/>
            <summary>
            Actions pereformed on document (ReIntellix e.g.)
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.ReIntellix">
            <summary>
            Resend textshots to Intellix
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.Append">
            <summary>
            Append documents form other cabinet to document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.SetLatestVersion">
            <summary>
            Set document as latest version
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.UndoCheckOut">
            <summary>
            Undo check out of the document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.CheckOut">
            <summary>
            Check out document to specific cabinet. Accept CheckOutActionParameters
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.CheckIn">
            <summary>
            Check in document to the original cabinet. Accept CheckInActionParameters
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.EnhanceImage">
            <summary>
            Enchance section image by applying deskew and rotate. Accept EnhanceImageParameters
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.MergeAnnotations">
            <summary>
            Merge annotations into section image. Aplicable only for PDFs. Accept MergeAnnotationsParameters
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DocumentAction.RotatePage">
            <summary>
            Rotate section page (image + annotations). Aplicable only for raster files and PDFs. Accept RotatePageParameters
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Sections">
            <remarks/>
            <summary>
            Define all sections of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Sections.Section">
            <summary>
            Specific section of a document
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Sections.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentsQueryResult">
            <remarks/>
            <summary>
            Define a result from document query
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.Count">
            <summary>
            Gets the number of items of the query leading to this result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.Title">
            <summary>
            The title of the document collection, if it exists.
            </summary>
            <remarks>
            Could be the name of the dialog creating this collection.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.FeedRelationLink">
            <summary>Gets the Uri of the link for the relation “feed”.</summary>
            <remarks>Returns the uri of the link for the relation “feed” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.DownloadRelationLink">
            <summary>Gets the Uri of the link for the relation “download”.</summary>
            <remarks>Returns the uri of the link for the relation “download” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.BatchUpdateRelationLink">
            <summary>Gets the Uri of the link for the relation “batchUpdate”.</summary>
            <remarks>Returns the uri of the link for the relation “batchUpdate” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.CreateUserDefinedSearchRelationLink">
            <summary>Gets the Uri of the link for the relation “createUserDefinedSearch”.</summary>
            <remarks>Returns the uri of the link for the relation “createUserDefinedSearch” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryResult.ExportDocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “exportDocuments”.</summary>
            <remarks>Returns the uri of the link for the relation “exportDocuments” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetXElementWrapperFromFeedRelation">
            <summary>Calls the HTTP Get method on the link for the relation “feed”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetXElementWrapperFromFeedRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “feed” asynchronously.</summary>
            <remarks>This method follows the link for the relation “feed”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetXElementWrapperFromFeedRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “feed” asynchronously.</summary>
            <remarks>This method follows the link for the relation “feed”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromDownloadRelation">
            <summary>Calls the HTTP Get method on the link for the relation “download”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromDownloadRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “download” asynchronously.</summary>
            <remarks>This method follows the link for the relation “download”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.GetDocumentsQueryResultFromDownloadRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “download” asynchronously.</summary>
            <remarks>This method follows the link for the relation “download”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResult(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToCreateUserDefinedSearchRelationForDialog(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToCreateUserDefinedSearchRelationForDialogAsync(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToCreateUserDefinedSearchRelationForDialogAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToExportDocumentsRelationForStream(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToExportDocumentsRelationForStreamAsync(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “exportDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryResult.PostToExportDocumentsRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “exportDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CountPlusValue">
            <remarks/>
            <summary>
            Define unstrict count. If HasMore is true it is possible to have more items
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CountPlusValue.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountPlusValue.HasMore">
            <summary>
            If this flag is true then the real number of hits can be larger than specified by the value of this element.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentMergeOperationInfo">
            <remarks/>
            <summary>
            Models a DocuWare content merge operation.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ContentMergeOperationInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentMergeOperationInfo.Documents">
            <summary>
            Collection of documents to be used in the operation
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentMergeOperationInfo.Operation">
            <summary>
            Operation that have to be executed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentMergeOperationInfo.Force">
            <summary>
            Force merge operation even if possible loss of data
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentMergeOperation">
            <remarks/>
            <summary>
            Subset of content operations.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ContentMergeOperation.Clip">
            <summary>
            Merge documents in one document with multiple sections. Accept list of documents. Produce a document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ContentMergeOperation.Staple">
            <summary>
            Merge documents as one section with multiple pages. Accept list of documents. Produce a document
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentDivideOperationInfo">
            <remarks/>
            <summary>
            Models a DocuWare content divide operation.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ContentDivideOperationInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentDivideOperationInfo.Pages">
            <summary>
            Collection of pages to be used in the operation
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentDivideOperationInfo.ResultNames">
            <summary>
            Define document names to be used for the result documents. Original document name is not changed
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentDivideOperationInfo.Operation">
            <summary>
            Operation that have to be executed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ContentDivideOperationInfo.Force">
            <summary>
            Force divide operation even if possible loss of data
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentDivideOperation">
            <remarks/>
            <summary>
            Subset of content operations.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ContentDivideOperation.Unclip">
            <summary>
            Split every section as a new document. Accept no arguments. Produce list of documents
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ContentDivideOperation.Unstaple">
            <summary>
            Split every page as a new document. Accept no arguments. Produce list of documents
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ContentDivideOperation.Split">
            <summary>
            Split document on specific pages as new documents. Accept list of pages. Produce list of documents
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LockInfo">
            <remarks/>
            <summary>
            Define how a document will be locked
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LockInfo.Interval">
            <summary>
            Define the lifetime interval for the lock.
                     This parameter contains a time interval specification in the form:
                     [ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]
                     Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required.
                     For more details check http://msdn.microsoft.com/en-us/library/se73z7b9.aspx
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LockInfo.Operation">
            <summary>
            Optional arbitrary string that define the purpose of the lock operation. Only one operation will successfully apply a lock on one document at same time.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SearchPositionQuery">
            <remarks/>
            <summary>
            Define a query for searching words in phrase
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SearchPositionQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.Phrase">
            <summary>
            Define the search phrase (words)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.IgnoreCase">
            <summary>
            Define if case is ignored
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.WholeWord">
            <summary>
            Define if search for whole words only
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.StartPage">
            <summary>
            Define a starting page for the search
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.StartSectionNumber">
            <summary>
            Define a starting section for the search
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.PageCount">
            <summary>
            Search this number of pages after the first page where a hit occur. If value is less than zero then all pages will be returned
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.Backward">
            <summary>
            If this flag is true then the search will be executed in the previous pages.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.RangeSearch">
            <summary>
            If this flag is true then only the specified page range is searched. Otherwise the whole document starting at the specified page is serched until the specified number of pages are found.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SearchPositionQuery.Normalize">
            <summary>
            If this flag is true then the result coordinates orientation will be alligned with the page
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WordSearchResult">
            <remarks/>
            <summary>
            Define a a set of words and locations where they are found in a section
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResult.Search">
            <summary>
            Contains the search query leading to this result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResult.PageHits">
            <summary>
            Contains a set pages where of words are found
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WordSearchResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WordSearchResult.GetWordSearchResultFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WordSearchResult.GetWordSearchResultFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WordSearchResult.GetWordSearchResultFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WordSearchResultPageHit">
            <remarks/>
            <summary>
            Define a a set of words and locations where they are found in a page
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResultPageHit.Hits">
            <summary>
            Contains the sequence of words matching the search query.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResultPageHit.PageNum">
            <summary>
            Page number where the hits a found
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WordSearchResultWordHit">
            <remarks/>
            <summary>
            Define a word and specific location where it is found
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResultWordHit.Text">
            <summary>
            Contains the text matching the query.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentWordSearchResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentWordSearchResult.Search">
            <summary>
            Contains the search query leading to this result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentWordSearchResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentWordSearchResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentWordSearchResult.GetDocumentWordSearchResultFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentWordSearchResult.GetDocumentWordSearchResultFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentWordSearchResult.GetDocumentWordSearchResultFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentWordSearchResultSectionHits">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentApplicationProperties">
            <remarks/>
            <summary>
            Define application specific properties. Different applications store specific application here
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentApplicationProperties.DocumentApplicationProperty">
            <summary>
            Define application specific properties. Different applications store specific application here
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentLink">
            <remarks/>
            <summary>
            Define a query that link one documnet to another document from same or different file cabinet
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.Id">
            <summary>
            Identity of the document link
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.Name">
            <summary>
            Name of the document link
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.TargetFileCabinet">
            <summary>
            File cabinet that the document is linked to
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.TargetResultList">
            <summary>
            Identity of the result list that will be used to show the linked documents
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.ResultRelationLink">
            <summary>Gets the Uri of the link for the relation “result”.</summary>
            <remarks>Returns the uri of the link for the relation “result” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLink.ResultDialogRelationLink">
            <summary>Gets the Uri of the link for the relation “resultDialog”.</summary>
            <remarks>Returns the uri of the link for the relation “resultDialog” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDocumentsQueryResultFromResultRelation">
            <summary>Calls the HTTP Get method on the link for the relation “result”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDocumentsQueryResultFromResultRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDocumentsQueryResultFromResultRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.PostToResultRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “result”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.PostToResultRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.PostToResultRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ResultListQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDialogFromResultDialogRelation">
            <summary>Calls the HTTP Get method on the link for the relation “resultDialog”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDialogFromResultDialogRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “resultDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultDialog”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLink.GetDialogFromResultDialogRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “resultDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “resultDialog”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentLinks">
            <remarks/>
            <summary>
            Define all document links that a vlid for a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentLinks.Items">
            <summary>
            Define specific document link of a document
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentLinks.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckOutToFileSystemInfo">
            <remarks/>
            <summary>
            Empty structure for checkout to file system operation
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentsTransferInfo">
            <remarks/>
            <summary>
            Defines the parameters of a documents transfer.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsTransferInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsTransferInfo.SourceFileCabinetId">
            <summary>
            Gets the id of the file cabinet which contains the document to be copied/moved.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsTransferInfo.UseDefaultDialog">
            <summary>
            Gets a value indicating whether a default store dialog, if such dialog is assing to the user, to be used.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsTransferInfo.KeepSource">
            <summary>
            If this flag is true the source documents remain in the source file cabinet; otherwise they are removed from the source file cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsTransferInfo.FillIntellix">
            <summary>
            If this flag is true the source document's metadata is adjusted with intellix suggestions using the intellix map for the default assigned file cabinet.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsTransferInfo.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinetTransferInfo">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinetTransferInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetTransferInfo.SourceDocId">
            <summary>
            Contains the identifiers of the documents to be copied/moved.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetTransferInfo.SourceFileCabinetId">
            <summary>
            Gets the id of the file cabinet which contains the document to be copied/moved.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetTransferInfo.KeepSource">
            <summary>
            If this flag is true the source documents remain in the source file cabinet; otherwise they are removed from the source file cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetTransferInfo.FillIntellix">
            <summary>
            If this flag is true the source document's metadata is adjusted with intellix suggestions using the intellix map for the default assigned file cabinet.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinets">
            <remarks/>
            <summary>
            Lsit of file cabinets or document trays(web baskets).
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinets.FileCabinet">
            <summary>
            Lsit of file cabinets or document trays(web baskets).
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FileCabinets.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SequenceResult">
            <remarks/>
            <summary>
            Defines the result for requested next element of a sequence.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SequenceResult.NextElement">
            <summary>
            The next element of the sequence.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SequenceRequest">
            <remarks/>
            <summary>
            Defines the request next element of a sequence.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SequenceRequest.SequenceId">
            <summary>
            The global unique identifier of the sequence.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UserDefinedSearchInfo">
            <remarks/>
            <summary>
            Options for creating user defined search based on result list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserDefinedSearchInfo.DialogExpression">
            <summary>
            Gets or sets the conditions which are used for creating user defined search based on result list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserDefinedSearchInfo.Name">
            <summary>
            The name of the user defined search based on result list.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogExpression">
            <remarks/>
            <summary>
            Query definition for a dialog result list
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpression.Condition">
            <summary>
            Gets or sets the conditions which are checked to obtain the search result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpression.AdditionalCabinets">
            <summary>
            Gets or sets the additional cabinets to search in.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpression.CompleteCondition">
            <summary>
            FOR INTERNAL USE ONLY: Gets or sets an addtional query string according to the DocuWare URL integration query syntax.
            </summary>
            <remarks>
            The query syntax is described at <a href="http://help.docuware.com/en/#b62903t52746n68491">the documentation of the URL Creation Tool</a>
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogExpression.Operation">
            <summary>
            Specifies the operation between the conditions of the dialog expression.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogExpressionOperation">
            <remarks/>
            <summary>
            Supported operations for dialog expression
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogExpressionOperation.And">
            <summary>
            All conditions must be fulfilled.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DialogExpressionOperation.Or">
            <summary>
            At least one condition must be fulfilled.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ResultListQuery">
            <remarks/>
            <summary>
            Base query definition for a result list
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultListQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.SortOrder">
            <summary>
            Gets or sets the fields which are returned by this query.
            </summary>
            <remarks>
            
            					Depending on the server's choice, there might be more fields included, like some system fields. If this field is null then all fields are returned.
            				
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.AdditionalResultFields">
            <summary>
            Define addition result fields to retrieve
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.FlagConditions">
            <summary>
            Condition that filter documents by its flags
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.Start">
            <summary>
            Start index of result document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.Count">
            <summary>
            Number of result documents to be retrieved in one block
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.ExcludeDefaultSystemFields">
            <summary>
            Specifies whether the default system/additional fields should be returned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.WithoutLinks">
            <summary>
            Specifies whether the links are filled in the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultListQuery.IncludeSuggestions">
            <summary>
            Gets or sets a value indicating whether Intellix suggestions to be included.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FlagConditions">
            <remarks/>
            <summary>
            Filter documents with specific flags
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FlagConditions.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FlagConditions.IncludeCheckedOut">
            <summary>
            Include documents which are checked out
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FlagConditions.IncludeAppended">
            <summary>
            Include documents which are appended
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogFields">
            <remarks/>
            <summary>
            List of dialog fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogFields.Field">
            <summary>
            List of dialog fields.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogFields.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogField">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.Mask">
            <summary>
            Mask(regular expression) for limiting the input options for the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.MaskErrorText">
            <summary>
            Error message to display if the input does not match the mask definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SampleEditText">
            <summary>
            Sample entry that matches the mask definition.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.PrefillValue">
            <summary>
            The default value of the field(s). If DynamicPrefillValue is not empty this property should be ignored.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.DynamicPrefillValue">
            <summary>
            Dynamic (CurrentDate, CurrentDatetime, etc.) default value of the field(s).If this element is not empty PrefilValue shoud be ignored.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SelectListInfos">
            <summary>
            Gets a list with information for all assigned select lists.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.DBFieldName">
            <summary>
            Name of field in the file cabinet.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.DlgLabel">
            <summary>
            Label (display name) of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.DWFieldType">
            <summary>
            The DocuWare type of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.Locked">
            <summary>
            Determines whether the value of the field cannot be changed by the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.ReadOnly">
            <summary>
            Determines whether the field is read only, considering Locked property and user rights(Modify Right for info dialog, Write Right for store dialog)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.NotEmpty">
            <summary>
            Determines whether the field can be empty, considering NotEmpty in Field settings and Field may be empty Right
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.Visible">
            <summary>
            Determines whether the field is visible.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.Length">
            <summary>
            Length of the field (for text fields).
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.Precision">
            <summary>
            The precision of this dialog field. This is derived from the file cabinet fields precision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.AllowExtendedSearch">
            <summary>
            Use extended search
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.UsedAsDocumentName">
            <summary>
            Determines whether the field is used as document name.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.IsHierarchy">
            <summary>
            Determines whether the field is part of the hierarchy structure of tree view result dialog (only for tree view result dialogs, for other types it's always false).
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.AllowFiltering">
            <summary>
            Allow extended filtering.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SelectListOnly">
            <summary>
            (Only relevant for store and info dialogs)If this flag is true, no one can allocate a new entry for this field when storing a document, unless this is contained in a selection list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SelectListType">
            <summary>
            Type of the select list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.AssignedInternalSelectList">
            <summary>
            A value indicating whether the internal select list is assigned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SequenceId">
            <summary>
            The unique identifier of the sequence.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SelectListsAssigned">
            <summary>
            A value indicating whether the any select list is assigned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogField.SimpleSelectListRelationLink">
            <summary>Gets the Uri of the link for the relation “simpleSelectList”.</summary>
            <remarks>Returns the uri of the link for the relation “simpleSelectList” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.GetSelectListResultFromSimpleSelectListRelation">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.GetSelectListResultFromSimpleSelectListRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.GetSelectListResultFromSimpleSelectListRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.PostToSimpleSelectListRelationForSelectListResult(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.PostToSimpleSelectListRelationForSelectListResultAsync(DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogField.PostToSimpleSelectListRelationForSelectListResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SelectListExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “simpleSelectList” asynchronously.</summary>
            <remarks>This method follows the link for the relation “simpleSelectList”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DynamicValueType">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DynamicValueType.CurrentDate">
            <summary>
            Current date.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DynamicValueType.CurrentDateTime">
            <summary>
            Current date including the time.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DynamicValueType.CurrentTime">
            <summary>
            Current time.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DynamicValueType.AutoNumber">
            <summary>
            Auto incrementing number.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListInfo">
            <remarks/>
            <summary>
            Select list information object.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListInfo.Guid">
            <summary>
            The guid of the select list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListInfo.Name">
            <summary>
            The name of the select list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListInfo.Kind">
            <summary>
            The Kind of the select list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListInfo.ValuesRelationLink">
            <summary>Gets the Uri of the link for the relation “values”.</summary>
            <remarks>Returns the uri of the link for the relation “values” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.GetSelectListValuesResultFromValuesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “values”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.GetSelectListValuesResultFromValuesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “values” asynchronously.</summary>
            <remarks>This method follows the link for the relation “values”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.GetSelectListValuesResultFromValuesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “values” asynchronously.</summary>
            <remarks>This method follows the link for the relation “values”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.PostToValuesRelationForSelectListValuesResult(DocuWare.Platform.ServerClient.SelectListValuesQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “values”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.PostToValuesRelationForSelectListValuesResultAsync(DocuWare.Platform.ServerClient.SelectListValuesQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “values” asynchronously.</summary>
            <remarks>This method follows the link for the relation “values”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfo.PostToValuesRelationForSelectListValuesResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.SelectListValuesQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “values” asynchronously.</summary>
            <remarks>This method follows the link for the relation “values”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListKind">
            <remarks/>
            <summary>
            Kind of the select list
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SelectListKind.Fixed">
            <summary>
            Fixed select list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SelectListKind.External">
            <summary>
            External select list.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListType">
            <remarks/>
            <summary>
            Type of the select list
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SelectListType.Standard">
            <summary>
            Standard select list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SelectListType.Multifield">
            <summary>
            Multi-field select list.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Dialog">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Dialog.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Dialog.Fields">
            <summary>
            The fields of this dialog.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Dialog.Query">
            <summary>
            The query defined by this dialog.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Dialog.Properties">
            <summary>
            Dialog properties specific for dialog type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Dialog.HasValidation">
            <summary>
            A value indicating whether the dialog has configured client side validation.This option is available only for store and info dialogs, for other dialog types it is always false.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Dialog.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentsQuery">
            <remarks/>
            <summary>
            Defines a query for documents.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.ForceRefresh">
            <summary>
            Determine if result list is retrieved from the cache when ForceRefresh is set to false (default) or always a new one is executed when ForceRefresh is set to true.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.Expression">
            <summary>
            Gets or sets the query expression.
            </summary>
            <remarks>
            The query string contains the query in a proper expression. If the expression is missing then all documents match the query.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.Fields">
            <summary>
            Gets or sets the fields which are returned by this query.
            </summary>
            <remarks>
            
            					Depending on the server's choice, there might be more fields included, like some system fields. If this field is null then all fields are returned.
            				
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.SortOrder">
            <summary>
            Gets or sets the fields which are returned by this query.
            </summary>
            <remarks>
            
            					Depending on the server's choice, there might be more fields included, like some system fields. If this field is null then all fields are returned.
            				
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.ExcludeSystemFields">
            <summary>
            Specifies whether the default system/additional fields should be returned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.IncludeSuggestions">
            <summary>
            Gets or sets a value indicating whether Intellix suggetstions to be included.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.ResultRelationLink">
            <summary>Gets the Uri of the link for the relation “result”.</summary>
            <remarks>Returns the uri of the link for the relation “result” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.DialogExpressionRelationLink">
            <summary>Gets the Uri of the link for the relation “dialogExpression”.</summary>
            <remarks>Returns the uri of the link for the relation “dialogExpression” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.TableResultRelationLink">
            <summary>Gets the Uri of the link for the relation “tableResult”.</summary>
            <remarks>Returns the uri of the link for the relation “tableResult” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.TableDialogExpressionRelationLink">
            <summary>Gets the Uri of the link for the relation “tableDialogExpression”.</summary>
            <remarks>Returns the uri of the link for the relation “tableDialogExpression” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQuery.BatchUpdateRelationLink">
            <summary>Gets the Uri of the link for the relation “batchUpdate”.</summary>
            <remarks>Returns the uri of the link for the relation “batchUpdate” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryResultFromResultRelation">
            <summary>Calls the HTTP Get method on the link for the relation “result”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryResultFromResultRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryResultFromResultRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “result” asynchronously.</summary>
            <remarks>This method follows the link for the relation “result”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToDialogExpressionRelationForDocumentsQueryResult(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogExpression”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToDialogExpressionRelationForDocumentsQueryResultAsync(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogExpression” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogExpression”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToDialogExpressionRelationForDocumentsQueryResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “dialogExpression” asynchronously.</summary>
            <remarks>This method follows the link for the relation “dialogExpression”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryTableResultFromTableResultRelation">
            <summary>Calls the HTTP Get method on the link for the relation “tableResult”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryTableResultFromTableResultRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “tableResult” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tableResult”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.GetDocumentsQueryTableResultFromTableResultRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “tableResult” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tableResult”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToTableDialogExpressionRelationForDocumentsQueryTableResult(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tableDialogExpression”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToTableDialogExpressionRelationForDocumentsQueryTableResultAsync(DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tableDialogExpression” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tableDialogExpression”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToTableDialogExpressionRelationForDocumentsQueryTableResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DialogExpression)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “tableDialogExpression” asynchronously.</summary>
            <remarks>This method follows the link for the relation “tableDialogExpression”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResult(DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQuery.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.BatchUpdateProcess)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogProperties">
            <remarks/>
            <summary>
            Specific properties for each dialog type
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogProperties.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogInfos">
            <remarks/>
            <summary>
            List of dialog infos.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfos.Dialog">
            <summary>
            List of dialog infos.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogInfos.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfos.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfos.GetDialogInfosFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfos.GetDialogInfosFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogInfos.GetDialogInfosFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestDialogQuery">
            <remarks/>
            <summary>
            Array of dialog types.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDialogQuery.DialogTypes">
            <summary>
            Array of document types.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListValuesQuery">
            <remarks/>
            <summary>
            Query for select list values
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListValuesQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListValuesQuery.Start">
            <summary>
            First result to return if block size is specified.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListValuesQuery.Count">
            <summary>
            Result will be returned on pages with that block size if specified.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListValuesQuery.ValuePrefix">
            <summary>
            A possible prefix of value of the field to be filled.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListValuesQuery.ReturnType">
            <summary>
            Return type of the result. Possible values are "String", "Decimal", "Date" and "DateTime". If ommited, each value is converted to a string using the agent's locale settings.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AdhocRenderingFile">
            <remarks/>
            <summary>
            Main class for managing adhoc rendering file.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingFile.MetaData">
            <summary>
            Gets the meta data for the file. This usually contains the entries from the user dictionary of a PDF file or the meta data settings from a MS word file.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingFile.PageCount">
            <summary>
            Gets the number of pages of this file.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingFile.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingFile.RenderingRelationLink">
            <summary>Gets the Uri of the link for the relation “rendering”.</summary>
            <remarks>Returns the uri of the link for the relation “rendering” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.GetAdhocRenderingFileFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.GetAdhocRenderingFileFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.GetAdhocRenderingFileFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.PostToRenderingRelationForStream(DocuWare.Platform.ServerClient.AdhocRenderingQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rendering”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.PostToRenderingRelationForStreamAsync(DocuWare.Platform.ServerClient.AdhocRenderingQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rendering”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFile.PostToRenderingRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.AdhocRenderingQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rendering” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rendering”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AdhocRenderingFiles">
            <remarks/>
            <summary>
            A list of uploaded files prepared for adhoc rendering.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingFiles.Item">
            <summary>
            Gets the pages of this file up to a server defined limit.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingFiles.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AdhocRenderingQuery">
            <remarks/>
            <summary>
            Specifies how a file is to be rendered.
            </summary>
            <remarks>
            
                   You can specify either a canvas size (in pixels) or a resolution (in dpi) of the rendered bitmap. In case you specify
                   the canvas size the rendered bitmap fits into the canvas while the page ratio is preserved.
                 
            </remarks>
            <remarks>
            In case you do not specify the size or resolution a default rendering resolution of 72 dpi is assumed.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AdhocRenderingQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingQuery.Size">
            <summary>
            Gets or sets the size in pixels of the rendering canvas.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingQuery.Page">
            <summary>
            Gets or sets page number to be rendered.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingQuery.Dpi">
            <summary>
            Gets or sets the resolution of the rendered bitmap.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AdhocRenderingQuery.ApiKey">
            <summary>
            Gets or sets the rendering api key.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWSize">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWSize.Width">
            <summary>
            The width in coordinates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWSize.Height">
            <summary>
            The height in coordinates.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UserValidation">
            <remarks/>
            <summary>
            User details needed for validation user login
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserValidation.Password">
            <summary>
            Password to validate
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Users">
            <remarks/>
            <summary>
            Defines a list of users
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Users.User">
            <summary>
            Defines a list of users
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Users.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TokenDescription">
            <remarks/>
            <summary>
            Define a purpose of the token. Can define some restrictions
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TokenDescription.TargetProducts">
            <summary>
            The token can be used multiple times
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TokenDescription.Usage">
            <summary>
            Define the usage of the token.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TokenDescription.Lifetime">
            <summary>
            Lifetime of the token. After lifetime expires token cannot be used anymore. This parameter contains a time interval specification in the form:
                     [ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]
                     Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required.
                     For more details check http://msdn.microsoft.com/en-us/library/se73z7b9.aspx
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWProductTypes">
            <remarks/>
            <summary>
            Subset of DocuWare license types.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DocuWareClient">
            <summary>
            DocuWare Windows Client
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DocuWareClientLic4">
            <summary>
            One Concurrent is equal to 4 named licenses - since Jellyfish
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DocuWareSite">
            <summary>
            DocuWare Site Windows Client
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToRicoh">
            <summary>
            Connect to Ricoh
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToToshiba">
            <summary>
            Connect To Toshiba
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToXerox">
            <summary>
            Connect to Xerox
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToSharp">
            <summary>
            Connect to Sharp
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToMOSS">
            <summary>
            Connect to SharePoint
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.SmartConnect">
            <summary>
            Smart Connect
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.WebClient">
            <summary>
            DocuWare Web Client
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.ROWebClient">
            <summary>
            Read only DocuWare Web Client
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.TaskList">
            <summary>
            Task Lists
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.EmailAlert">
            <summary>
            Email Alert
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToOutlook">
            <summary>
            Connect to Outlook
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.Mobile">
            <summary>
            DocuWare mobile device
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToMail">
            <summary>
            Connect to Mail
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DocuWareServer">
            <summary>
            License for all DocuWare servers
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.PlatformService">
            <summary>
            Platform service
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.WorkflowManager">
            <summary>
            Workflow Manager
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.Import">
            <summary>
            Import
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DWRequest">
            <summary>
            DocuWare Request
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToOKI">
            <summary>
            Connect to OKI
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.CONNECTToRicohOnline">
            <summary>
            Connect to Ricoh Online
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.BarcodeAndForms">
            <summary>
            Barcode and Forms
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.WindowsExplorerClient">
            <summary>
            Windows Explorer Client
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.Administration">
            <summary>
            Administration only client. No content rights
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.Unknown">
            <summary>
            Unknown product type
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.Forms">
            <summary>
            Forms
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.PublicForms">
            <summary>
            Public Forms
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.AutoIndex">
            <summary>
            Auto index
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.DWProductTypes.DesktopApps">
            <summary>
            Desktop Applications
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TokenUsage">
            <remarks/>
            <summary>
            Usage of the token.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TokenUsage.Single">
            <summary>
            The token can be used to login only once
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TokenUsage.Multi">
            <summary>
            The token can be used multiple times
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Group">
            <remarks/>
            <summary>
            Defines a DocuWare group
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Group.Id">
            <summary>
            The role id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Group.Name">
            <summary>
            The name of the group.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Group.Active">
            <summary>
            Is group active flag.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Group.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Group.UsersRelationLink">
            <summary>Gets the Uri of the link for the relation “users”.</summary>
            <remarks>Returns the uri of the link for the relation “users” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetGroupFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetGroupFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetGroupFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetUsersFromUsersRelation">
            <summary>Calls the HTTP Get method on the link for the relation “users”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetUsersFromUsersRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “users” asynchronously.</summary>
            <remarks>This method follows the link for the relation “users”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Group.GetUsersFromUsersRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “users” asynchronously.</summary>
            <remarks>This method follows the link for the relation “users”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Groups">
            <remarks/>
            <summary>
            A collection of groups
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Groups.Item">
            <summary>
            A collection of groups
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Groups.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Role">
            <remarks/>
            <summary>
            Defines a DocuWare role
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Role.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Role.Id">
            <summary>
            The role id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Role.Name">
            <summary>
            The name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Role.Active">
            <summary>
            Is role active flag.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Role.Type">
            <summary>
            Type of role.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Role.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Role.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Role.GetRoleFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Role.GetRoleFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Role.GetRoleFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RoleTypes">
            <remarks/>
            <summary>
            A predefined DocuWare role types
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Roles">
            <remarks/>
            <summary>
            A collection of roles
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Roles.Item">
            <summary>
            A collection of roles
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Roles.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Notifications">
            <remarks/>
            <summary>
            A data stucture for managing notifications.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notifications.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notifications.Notification">
            <summary>
            Collection of notifications.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notifications.Timeout">
            <summary>
            Gets or sets the notifications timeout im milliseconds. A positive value lets the server wait for notifications for the specified amount of time. A value of 0 means that the server should respond immediately. A value of -1 indicates that the server should define the timeout.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notifications.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notifications.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notifications.GetNotificationsFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notifications.GetNotificationsFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notifications.GetNotificationsFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Notification">
            <remarks/>
            <summary>
            A data stucture for implementing simple notifications.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Notification.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notification.TimeStamp">
            <summary>
            TimeStamp when the notification was checked. Ensure that notification was happened before that time stamp
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notification.IsActive">
            <summary>
            If this flag is true then this notification is set.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Notification.Name">
            <summary>
            Gets or sets the name of this notification.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormInfo">
            <remarks/>
            <summary>
            Form object used for displaying form
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormInfo.ConfigId">
            <summary>
            Id of the form configuration used to retrieve full configuration
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormInfo.Fields">
            <summary>
            List of web form fields
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormInfo.Behaviors">
            <summary>
            List of web form behaviors
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormInfo.FormProperties">
            <summary>
            Form Properties
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormInfo.SubmissionOptions">
            <summary>
            Submission Options
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormProperties">
            <remarks/>
            <summary>
            Definition of Form Properties
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubmissionOptions">
            <remarks/>
            <summary>
            Settings for post submission options
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RedirectType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CreateFormsFileResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CreateFormsFileResult.FilePath">
            <summary>
            File path.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CreateFormsFileResult.ContentType">
            <summary>
            the content type
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormsInput">
            <remarks/>
            <summary>
            Input used to submit form and store in DocuWare
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormsInput.FormInfo">
            <summary>
            Form information with configuration id and form fields with user input
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormsInput.HTML">
            <summary>
            String representing the HTML of the form
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UploadTemplateInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadTemplateInput.TemplateGUID">
            <summary>
            GUID for the uploaded template
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadTemplateInput.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadTemplateInput.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UploadTemplateResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadTemplateResult.TemplateGUID">
            <summary>
            GUID for the uploaded template
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UploadTemplateResult.TotalNumberOfPages">
            <summary>
            Total Page Count
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SaveTemplateInput">
            <remarks/>
            <summary>
            Save Template
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormTemplate">
            <remarks/>
            <summary>
            Definition of the Save Template
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SaveTemplateResult">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CopyTemplateInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CopyTemplateInput.TemplateGUID">
            <summary>
            GUID for the template to copy
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CopyTemplateResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CopyTemplateResult.TemplateGUID">
            <summary>
            GUID for the uploaded template
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DeleteTemplatesInput">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DeleteTemplatesResult">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.GetTemplateImageInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageInput.TemplateGUID">
            <summary>
            GUID for the uploaded template
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageInput.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageInput.PageNumber">
            <summary>
            Page Number
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.GetTemplateImageResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageResult.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageResult.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.GetTemplateImageResult.ImageDPI">
            <summary>
            ImageDPI
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportConfigInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportConfigInput.ConfigGUID">
            <summary>
            GUID for the exported config
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportConfigInput.OrganizationID">
            <summary>
            Org ID
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportConfigResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportConfigResult.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportConfigResult.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportConfigInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportConfigInput.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportConfigInput.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportConfigInput.OrganizationID">
            <summary>
            Org ID
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportConfigResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportConfigResult.ConfigJSON">
            <summary>
            FormConfig as JSON
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportTemplateInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportTemplateInput.ConfigGUID">
            <summary>
            GUID for the exported config
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportTemplateInput.TemplateGUID">
            <summary>
            GUID for the exported template
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportTemplateInput.OrganizationID">
            <summary>
            Org ID
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportTemplateResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportTemplateResult.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportTemplateResult.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportTemplateInput">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportTemplateInput.FileName">
            <summary>
            File Name
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportTemplateInput.FileData">
            <summary>
            Binary file data
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportTemplateInput.OrganizationID">
            <summary>
            Org ID
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportTemplateResult">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportTemplateResult.ConfigJSON">
            <summary>
            Template Config as JSON
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CFSStatisticGeneral">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CFSStatisticSpecific">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CFSStatisticSpecific.ObjectID">
            <summary>
            The identifier of the instance to be monitored.
                     For a file cabinet this is the file cabinet id, for a device this is the device string.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CFSSpecificValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CFSTableNames">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAuditInformation">
            <remarks/>
            <summary>
            Defines auditing information for a document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditInformation.Events">
            <summary>
            Gets or sets a list of document auditing events.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditInformation.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditInformation.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditInformation.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditInformation.GetDocumentAuditInformationFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAuditEvent">
            <remarks/>
            <summary>
            Define auditing information property
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEvent.AuditEvent">
            <summary>
            Define allowed operations when there is signature
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEvent.AuditEventInformationRelationLink">
            <summary>Gets the Uri of the link for the relation “auditEventInformation”.</summary>
            <remarks>Returns the uri of the link for the relation “auditEventInformation” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditEvent.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditEvent.GetDocumentAuditEventInformationFromAuditEventInformationRelation">
            <summary>Calls the HTTP Get method on the link for the relation “auditEventInformation”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditEvent.GetDocumentAuditEventInformationFromAuditEventInformationRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “auditEventInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditEventInformation”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditEvent.GetDocumentAuditEventInformationFromAuditEventInformationRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “auditEventInformation” asynchronously.</summary>
            <remarks>This method follows the link for the relation “auditEventInformation”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AuditEvent">
            <remarks/>
            <summary>
            Define auditing information property
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.Id">
            <summary>
            Gets or sets the identity of the auditing event.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.Event">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.Type">
            <summary>
            Gets or sets the type of the event.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.Name">
            <summary>
            Gets or sets the name of the object that has been changed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.User">
            <summary>
            Gets or sets the name of the user who updated the object.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AuditEvent.Date">
            <summary>
            Gets or sets the date and time when the event is happened.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAuditEventInformation">
            <remarks/>
            <summary>
            Defines a list of audit event properties.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEventInformation.DocumentAuditEventProperties">
            <summary>
            Gets or sets the list of audit event properties.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAuditEventProperty">
            <remarks/>
            <summary>
            Defines the description of auditing event property.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEventProperty.PropertyName">
            <summary>
            Gets or sets the name of the property that has been changed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEventProperty.OldValue">
            <summary>
            Gets or sets the old value of the property.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEventProperty.NewValue">
            <summary>
            Gets or sets the new value of the property.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditEventProperty.DWFieldType">
            <summary>
            The DocuWare type of the field
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IntegerList">
            <remarks/>
            <summary>
            Define a list of integers values
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.IntegerList.Int">
            <summary>
            A list of integers values
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo">
            <remarks/>
            <summary>
            Structure for updating index fields, including the index fields values and the dialog used for updating.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo.DialogId">
            <summary>
            Define dialog which is used to update the fields. Used to override data that is not exposed to the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo.NormalizeCoordinates">
            <summary>
            If this flag is true then the orientation of the coordinates in PointAndShootInfo will be alligned with the page.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult">
            <remarks/>
            <summary>
            Structure for the result of batch update oparations.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.Item">
            <summary>
            List of the resulting documents and errors.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.SuccessCount">
            <summary>
            The number of successfull updated documents.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.PostToNextRelationForBatchUpdateIndexFieldsResult(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.PostToNextRelationForBatchUpdateIndexFieldsResultAsync(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateIndexFieldsResult.PostToNextRelationForBatchUpdateIndexFieldsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateResultItem">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateResultItem.Document">
            <summary>
            The document after it has been updated.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateResultItem.ErrorMessage">
            <summary>
            The error message of the failed update operation.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateResultItem.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PagesBlockQuery">
            <remarks/>
            <summary>
            A query for requesting page blocks.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PagesBlockQuery.FirstPage">
            <summary>
            The first page of the page block
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PagesBlockQuery.PageCount">
            <summary>
            Total count of the pages in the page block
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormFieldValues">
            <remarks/>
            <summary>
            The form field values which are applied when placing or rendering the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormFieldValues.Field">
            <summary>
            Gets or sets the form field values which are applied when placing or rendering the stamp.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormFieldValue">
            <remarks/>
            <summary>
            Contains the value of form field
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormFieldValue.TypedValue">
            <summary>
            Get or sets the form field value casted to the index field type.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormFieldValue.Name">
            <summary>
            Get or sets the name of the form field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FormFieldValue.Value">
            <summary>
            Get or sets the display value of the form field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Stamps">
            <remarks/>
            <summary>
            List of stamps.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Stamps.Stamp">
            <summary>
            List of stamps.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Stamps.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampPlacement">
            <remarks/>
            <summary>
            Describes how to place a stamp on a page.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.StampPlacement.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Strokes">
            <summary>
            A polyline entry in case of stroke stamps.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Location">
            <summary>
            The location of the stamp.
            </summary>
            <remarks>
            The coordinates are in twips (1/1440 inches).
            </remarks>
            <remarks>
            If this field is <c>null</c> then the stamp is placed automatically.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Field">
            <summary>
            The form field values which are applied when placing the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Rotation">
            <summary>
            Rotation of the stamp. Only rotation even of 90 degree are supported.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Layer">
            <summary>
            Layer where the stamp have to be placed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampPlacement.Password">
            <summary>
            Password for password protected stamps
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWPoint">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWPoint.X">
            <summary>
            The horizontal position in coordinates.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DWPoint.Y">
            <summary>
            The vertical position in coordinates.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampFormFieldValues">
            <remarks/>
            <summary>
            The form field values which are applied when placing or rendering a specific stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampFormFieldValues.Field">
            <summary>
            The form field values which are applied when placing the stamp.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AnnotationsPlacement">
            <remarks/>
            <summary>
            Describes how to place a set of annotations and stamps on a page.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAnnotationsPlacement">
            <remarks/>
            <summary>
            Descripes how to place a set of annotations and stamps on a document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAnnotationsPlacement.Annotations">
            <summary>
            List of SectionAnnotationsPlacement items.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SectionAnnotationsPlacement">
            <remarks/>
            <summary>
            Describes how to place a set of annotations and stamps on a section.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SectionAnnotationsPlacement.SectionNumber">
            <summary>
            Number of the section to set annotations on.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SectionAnnotationsPlacement.PageNumber">
            <summary>
            Number of the page to set annotations on.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAnnotations">
            <remarks/>
            <summary>
            Descripes how to place a set of annotations and stamps on a document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAnnotations.Annotations">
            <summary>
            List of SectionAnnotation items.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SectionAnnotation">
            <remarks/>
            <summary>
            Describes how to place a set of annotations and stamps on a section.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SectionAnnotation.SectionNumber">
            <summary>
            Number of the section to set annotations on.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SectionAnnotation.PageNumber">
            <summary>
            Number of the page to set annotations on.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateProcess">
            <remarks/>
            <summary>
            A class which contains data for batch update processes.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcess.Source">
            <summary>
            The source of the items to be updated.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcess.Data">
            <summary>
            The data which is used to specifiy the updated data and update process control.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateSource">
            <remarks/>
            <summary>
            The base for defining a sequence of documents to be updated.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateProcessData">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BatchUpdateProcessData.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcessData.Field">
            <summary>
            The fields which are updated.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcessData.StoreDialogId">
            <summary>
            The id of the dialog to be used to update fields which are hidden inside the store dialog.
            </summary>
            <remarks>
            
                       Ignore this field if the update is not triggered by a dialog.
                     
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcessData.BatchSize">
            <summary>
            The number of documents which are updated within a update chunk.
            </summary>
            <remarks>
            If the value is missing then the server decides the size of chunks. The server might choose a different chunk size than requested by this property.
            </remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateProcessData.BreakOnError">
            <summary>
            If this attribute is set to
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CsvExpression">
            <remarks/>
            <summary>
            Query csv file.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CsvExpression.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CsvExpression.DialogExpression">
            <summary>
            Gets or sets the conditions which are checked to obtain the search result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CsvExpression.Delimiter">
            <summary>
            Specifies the delimiter for cvs' values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CsvExpression.IsUtc">
            <summary>
            Specifies whether the time values to be in Utc or Local.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CountExpression">
            <remarks/>
            <summary>
            The expression for counting a documents.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CountExpression.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountExpression.DialogExpression">
            <summary>
            The expression with already filled values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountExpression.FieldName">
            <summary>
            The database name of the dialog field whose groups are to be counted. In case
            				you want only the number of hits matching the dialog expression just leave this field empty.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountExpression.Limit">
            <summary>
            Limit the count up to specified value. Used for optimization and currently affecting only general count (when FieldName is not specified)
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListExpression">
            <remarks/>
            <summary>
            Query definition for a select list
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListExpression.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.DialogExpression">
            <summary>
            The expression with already filled values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.ValuePrefix">
            <summary>
            A possible prefix of value of the field to be filled.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.FieldName">
            <summary>
            The database name of the dialog field to be filled.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.Count">
            <summary>
            Result will be returned on pages with that block size if specified. If set to default (0) select lists will be returned in one block using Limit parameter.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.Start">
            <summary>
            First result to return if block size is specified
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.Limit">
            <summary>
            Limit the number of hits that are returned if no block size is specified
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.SortDirection">
            <summary>
            Define sort order of the select list
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.ExcludeExternal">
            <summary>
            Determines whether to return values from external select lists
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListExpression.Typed">
            <summary>
            If this value is <c>true</c>, then the response contains typed values. Otherwise each value is converted to a string using the agent's locale settings.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldValueStatisticsExpression">
            <remarks/>
            <summary>
            The expression for field statistics.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.FieldValueStatisticsExpression.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldValueStatisticsExpression.FieldName">
            <summary>
            The database name of the field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldValueStatisticsExpression.Limit">
            <summary>
            Limit the number of hits that are returned.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FunctionExpression">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AnyExpression">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BooleanConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DateConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DateTimeConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecimalConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DoubleConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldValueExpression">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.IntConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StringConstant">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SystemVariableExpression">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SuggestionFields">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListResult">
            <remarks/>
            <summary>
            Select list values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListResult.Value">
            <summary>
            Select list values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListResult.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListResult.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListResult.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListResult.GetSelectListResultFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldValueStatisticsResult">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldValueStatistics">
            <remarks/>
            <summary>
            Value with statistics.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldValueStatistics.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldValueStatistics.Count">
            <summary>
            The number of times the value occurs in the documents.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LinkRelations">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.LinkRelations.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LinkRelations.IsComplete">
            <summary>
            If this is true than there are no other links are expected than the specified.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LinkRelation">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LinkInvoke">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.LinkInvoke.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentTypeList">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentTypeListComplexType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentTypeListContentType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentTypeListSchemaType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HttpMethod">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ContentType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CountResultItem">
            <remarks/>
            <summary>
            Result of item count
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountResultItem.Name">
            <summary>
            Name of the item that is counted
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountResultItem.Count">
            <summary>
            The items count
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CountResult">
            <remarks/>
            <summary>
            Result set of of item counts
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountResult.Group">
            <summary>
            Set of count results
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CountResult.TimeStamp">
            <summary>
            TimeStamp of the result
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentSourceType">
            <remarks/>
            <summary>
            Specifies the source of documents which trigger jobs in the DocuWare Job Framework. Also used to identify the type of configuration edited in the Job Configurator (Printer Configurator, Import Configurator etc.)
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TableResultFieldKind">
            <remarks/>
            <summary>
            Kind of the field
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultFieldKind.System">
            <summary>
            System field.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultFieldKind.Index">
            <summary>
            Index field.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.TableResultFieldKind.Additional">
            <summary>
            Additional field which is not part of the file cabinet(calculated fields like total page count, special values like text preview etc.).
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.NullTableResultValue">
            <remarks/>
            <summary>
            Represents empty value in table result list.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TableResultRow">
            <remarks/>
            <summary>
            Define a row of  the table result from document query
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.Suggestions">
            <summary>
            Fields of a document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.Id">
            <summary>
            Id of the document represented by the current row.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.FieldsRelationLink">
            <summary>Gets the Uri of the link for the relation “fields”.</summary>
            <remarks>Returns the uri of the link for the relation “fields” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.SuggestionsRelationLink">
            <summary>Gets the Uri of the link for the relation “suggestions”.</summary>
            <remarks>Returns the uri of the link for the relation “suggestions” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.ClippedDocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “clippedDocuments”.</summary>
            <remarks>Returns the uri of the link for the relation “clippedDocuments” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.SectionsRelationLink">
            <summary>Gets the Uri of the link for the relation “sections”.</summary>
            <remarks>Returns the uri of the link for the relation “sections” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.ThumbnailRelationLink">
            <summary>Gets the Uri of the link for the relation “thumbnail”.</summary>
            <remarks>Returns the uri of the link for the relation “thumbnail” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.LockRelationLink">
            <summary>Gets the Uri of the link for the relation “lock”.</summary>
            <remarks>Returns the uri of the link for the relation “lock” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.RightsRelationLink">
            <summary>Gets the Uri of the link for the relation “rights”.</summary>
            <remarks>Returns the uri of the link for the relation “rights” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TableResultRow.IntellixRelationLink">
            <summary>Gets the Uri of the link for the relation “intellix”.</summary>
            <remarks>Returns the uri of the link for the relation “intellix” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteSelfRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteSelfRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSelfRelationForDocument(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSelfRelationForDocumentAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSelfRelationForDocumentAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentIndexFieldsFromFieldsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentIndexFieldsFromFieldsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetDocumentIndexFieldsFromFieldsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFields(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFieldsAsync(DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFieldsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.DocumentIndexFields)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFields(DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFieldsAsync(DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToFieldsRelationForDocumentIndexFieldsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UpdateIndexFieldsInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “fields” asynchronously.</summary>
            <remarks>This method follows the link for the relation “fields”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSuggestionFieldsFromSuggestionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSuggestionFieldsFromSuggestionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “suggestions”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSuggestionFieldsFromSuggestionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “suggestions” asynchronously.</summary>
            <remarks>This method follows the link for the relation “suggestions”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToClippedDocumentsRelationForDocument(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToClippedDocumentsRelationForDocumentAsync(DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clippedDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PutToClippedDocumentsRelationForDocumentAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.IntegerList)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “clippedDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “clippedDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSectionsFromSectionsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “sections”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSectionsFromSectionsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetSectionsFromSectionsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSectionsRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSectionsRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToSectionsRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “sections” asynchronously.</summary>
            <remarks>This method follows the link for the relation “sections”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetStreamFromThumbnailRelation">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetStreamFromThumbnailRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.GetStreamFromThumbnailRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “thumbnail” asynchronously.</summary>
            <remarks>This method follows the link for the relation “thumbnail”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToLockRelationForString(DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToLockRelationForStringAsync(DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToLockRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.LockInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteLockRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “lock”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteLockRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.DeleteLockRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “lock” asynchronously.</summary>
            <remarks>This method follows the link for the relation “lock”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToRightsRelationForSection(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToRightsRelationForSectionAsync(System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rights”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TableResultRow.PostToRightsRelationForSectionAsync(System.Threading.CancellationToken,System.String,System.IO.Stream)">
            <param name="requestedContentType">Mime type of the requested body content, i.e. application/pdf.</param>
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “rights” asynchronously.</summary>
            <remarks>This method follows the link for the relation “rights”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentsQueryTableResult">
            <remarks/>
            <summary>
            Define table result from document query
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.Count">
            <summary>
            Gets the number of items of the query leading to this result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.FeedRelationLink">
            <summary>Gets the Uri of the link for the relation “feed”.</summary>
            <remarks>Returns the uri of the link for the relation “feed” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.DownloadRelationLink">
            <summary>Gets the Uri of the link for the relation “download”.</summary>
            <remarks>Returns the uri of the link for the relation “download” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.BatchUpdateRelationLink">
            <summary>Gets the Uri of the link for the relation “batchUpdate”.</summary>
            <remarks>Returns the uri of the link for the relation “batchUpdate” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.CreateUserDefinedSearchRelationLink">
            <summary>Gets the Uri of the link for the relation “createUserDefinedSearch”.</summary>
            <remarks>Returns the uri of the link for the relation “createUserDefinedSearch” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.ExportDocumentsRelationLink">
            <summary>Gets the Uri of the link for the relation “exportDocuments”.</summary>
            <remarks>Returns the uri of the link for the relation “exportDocuments” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetXElementWrapperFromFeedRelation">
            <summary>Calls the HTTP Get method on the link for the relation “feed”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetXElementWrapperFromFeedRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “feed” asynchronously.</summary>
            <remarks>This method follows the link for the relation “feed”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetXElementWrapperFromFeedRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “feed” asynchronously.</summary>
            <remarks>This method follows the link for the relation “feed”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromDownloadRelation">
            <summary>Calls the HTTP Get method on the link for the relation “download”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromDownloadRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “download” asynchronously.</summary>
            <remarks>This method follows the link for the relation “download”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.GetDocumentsQueryTableResultFromDownloadRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “download” asynchronously.</summary>
            <remarks>This method follows the link for the relation “download”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResult(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToBatchUpdateRelationForBatchUpdateIndexFieldsResultAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.BatchUpdateProcessData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “batchUpdate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “batchUpdate”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToCreateUserDefinedSearchRelationForDialog(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToCreateUserDefinedSearchRelationForDialogAsync(DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToCreateUserDefinedSearchRelationForDialogAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UserDefinedSearchInfo)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createUserDefinedSearch” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createUserDefinedSearch”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToExportDocumentsRelationForStream(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToExportDocumentsRelationForStreamAsync(DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “exportDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentsQueryTableResult.PostToExportDocumentsRelationForStreamAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ExportSettings)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “exportDocuments” asynchronously.</summary>
            <remarks>This method follows the link for the relation “exportDocuments”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WordSearchResultWordHits">
            <remarks/>
            <summary>
            Define a a set of words and locations where they are found
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WordSearchResultWordHits.Wd">
            <summary>
            Define a a set of words and locations where they are found
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.PageHits">
            <remarks/>
            <summary>
            Contains a set pages where of words are found
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.PageHits.PageHit">
            <summary>
            Define a set pages where of words are found
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ChecksumStatusType">
            <remarks/>
            <summary>
            Define a result from a checksum
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ChecksumStatusType.NotChecked">
            <summary>
            The checksums is not checked.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ChecksumStatusType.Ok">
            <summary>
            All checksums are correct.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ChecksumStatusType.NoChecksum">
            <summary>
            There are no checksums.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ChecksumStatusType.WrongChecksum">
            <summary>
            As least one of the checksum is wrong.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ChecksumStatusType.FailedToCheck">
            <summary>
            A problem has occurred while checking the checksum.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckOutActionParameters">
            <remarks/>
            <summary>
            Parameters for CheckOut action
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CheckOutActionParameters.FileCabinetId">
            <summary>
            Identity of the destination cabinet.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckInActionParameters">
            <remarks/>
            <summary>
            Parameters for CheckIn action
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CheckInActionParameters.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CheckInActionParameters.DocumentVersion">
            <summary>
            Check in version of the document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CheckInActionParameters.CheckInReturnDocument">
            <summary>
            Defines which document to be returned.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CheckInActionParameters.Comments">
            <summary>
            Minor version of the document.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckInReturnDocument">
            <remarks/>
            <summary>
            The CheckInRequestDocument enumeration specifies the document that has to be returned by check in operation.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.CheckInReturnDocument.Original">
            <summary>
            Specifies that the original document should be returned.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.CheckInReturnDocument.CheckedIn">
            <summary>
            Specifies that the currently checked in document should be returned.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckOutResult">
            <remarks/>
            <summary>
            Result from a checkout. Contains link where document can be downloaded
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.CheckOutResult.ContentRelationLink">
            <summary>Gets the Uri of the link for the relation “content”.</summary>
            <remarks>Returns the uri of the link for the relation “content” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CheckOutResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CheckOutResult.GetStreamFromContentRelation">
            <summary>Calls the HTTP Get method on the link for the relation “content”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CheckOutResult.GetStreamFromContentRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.CheckOutResult.GetStreamFromContentRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “content” asynchronously.</summary>
            <remarks>This method follows the link for the relation “content”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EnhanceImageParameters">
            <remarks/>
            <summary>
            Parameters for EnhanceImage action
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EnhanceImageParameters.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.EnhanceImageParameters.SectionNumber">
            <summary>
            Number of the section to process.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.MergeAnnotationsParameters">
            <remarks/>
            <summary>
            Parameters for MergeAnnotations action
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.MergeAnnotationsParameters.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.MergeAnnotationsParameters.SectionNumber">
            <summary>
            Number of the section to process.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RotatePageParameters">
            <remarks/>
            <summary>
            Parameters for RotatePage action
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RotatePageParameters.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RotatePageParameters.SectionNumber">
            <summary>
            Number of the section to process.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RotatePageParameters.PageNumber">
            <summary>
            Page to be rotated.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RotatePageParameters.Rotation">
            <summary>
            Angle divisible by 90. Counterclockwise. DocuWare legacy.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AppendActionParameters">
            <remarks/>
            <summary>
            Specific data for append action
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.AppendActionParameters.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AppendActionParameters.RemoveSourceDocuments">
            <summary>
            Indicates whether to delete the documents from source cabinet
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AppendActionParameters.DocumentsInFront">
            <summary>
            Info for the documents to be attached before the target document
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AppendActionParameters.DocumentsAtBack">
            <summary>
            Info for the documents to be attached after the target document
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AppendActionDocuments">
            <remarks/>
            <summary>
            Cabinet specific document info needed for document append action
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AppendActionDocuments.SourceCabinetId">
            <summary>
            Id of the source cabinet/basket
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AppendActionDocuments.Documents">
            <summary>
            Ids of the documents to be attached
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.XmlDSigStatusType">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.XmlDSigStatusType.NotChecked">
            <summary>
            Not checked.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.XmlDSigStatusType.Ok">
            <summary>
            Okay.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.XmlDSigStatusType.NotOk">
            <summary>
            Failed. Details in ErrorInfo.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.XmlDSigContentType">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.XmlDSigContentType.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportSettings">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExportSettings.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportSettings.ExportHistory">
            <summary>
            Gets or sets a value indicating whether the document's versions has to be exported.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportSettings.ExportTextshots">
            <summary>
            Gets or sets a value indicating whether the document's textshot has to be exported.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldMapping">
            <remarks/>
            <summary>
            Define fields mapping between source and destination file cabinets.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMapping.Source">
            <summary>
            Name of the source field.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMapping.Destination">
            <summary>
            Name of the destination field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SynchronizationOperation">
            <remarks/>
            <summary>
            Define the operation that will be applied on synchronizing.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SynchronizationOperation.Add">
            <summary>
            Specifies that the synchronization will apply ADD opration.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.SynchronizationOperation.Replace">
            <summary>
            Specifies that the synchronization will apply Replace opration.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FieldMappings">
            <remarks/>
            <summary>
            Define fields mapping between source and destination file cabinets.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FieldMappings.Mapping">
            <summary>
            Gets or sets field mappings.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ConfigurationRights">
            <remarks/>
            <summary>
            List of rights.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ConfigurationRights.ConfigurationRight">
            <summary>
            List of configuration rights.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Rights">
            <remarks/>
            <summary>
            List of rights.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Rights.Right">
            <summary>
            List of rights.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportResultEntry">
            <remarks/>
            <summary>
            Defines the result of the imported archive.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportResultEntry.EntryVersions">
            <summary>
            A list with the sequence value of the documents that are not imported.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportResultEntry.ErrorMessage">
            <summary>
            Gets or sets the error message if the import operation fails.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportResultEntry.Status">
            <summary>
            Gets or sets the status of the document.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportEntryVersion">
            <remarks/>
            <summary>
            Defines the result of the imported archive.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportEntryVersion.Id">
            <summary>
            Gets or sets the error message if the import operation fails.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ImportEntryVersion.Status">
            <summary>
            Gets or sets the status of the document.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportEntryVersionStatus">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ImportEntryVersionStatus.Succeeded">
            <summary>
            A value that indicates whether importing of the version is successful.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ImportEntryVersionStatus.Failed">
            <summary>
            A value that indicates whether importing of the version failed.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ImportEntryVersionStatus.Aborted">
            <summary>
            A value that indicates whether importing of the version is not started.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImportEntryStatus">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ImportEntryStatus.Succeeded">
            <summary>
            A value that inticates whether importing of the document is successful.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ImportEntryStatus.Failed">
            <summary>
            A value that inticates whether importing of the document failed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LogicalOperator">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LogicalOperator.DefaultOperator">
            <summary>
            If the option cannot be set in the dialog, the value defined here is always used for the search query
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LogicalOperator.Show">
            <summary>
            If this option is enabled, the option can be set in the search dialog, and users can select either the AND or OR logical operator for their search query
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ViewerDialogModes">
            <remarks/>
            <summary>
            Mode in which the viewer is opened to display a document
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ViewerDialogModes.EditMode">
            <summary>
            Document is opened for editing and is locked for other users until it's closed.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ViewerDialogModes.AdHocEditMode">
            <summary>
            Document is opened for editing and is locked only while editing.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ViewerDialogModes.ReadOnly">
            <summary>
            Document is opened as read-only.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ViewerDialog">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ViewerDialog.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ViewerDialog.Mode">
            <summary>
            The mode in which the viewer is open to display a document from the result list
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ViewerDialog.MarkFulltextSearchHits">
            <summary>
            Determines whether the occurrences that match the fulltext search are highlighted in the displayed document
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogPropertiesSearch">
            <remarks/>
            <summary>
            Dialog properties specific for Search Dialog
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesSearch.LogicalOperator">
            <summary>
            The logical operator used for the search conditions
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogPropertiesResultList">
            <remarks/>
            <summary>
            Dialog properties specific for Result List
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesResultList.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.Functions">
            <summary>
            Functions available for the result list (Print document, Display document, etc.)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.ViewerDialog">
            <summary>
            Viewer properties
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.SortOrder">
            <summary>
            Sort order for the result list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.DefaultListTextLetterCase">
            <summary>
            Letter case to be used to display the hits in the result list
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.DisplayFirstDocument">
            <summary>
            Determines whether the web client automatically displays the first document in the result list in the viewer.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesResultList.ShowCheckedOutDocumens">
            <summary>
            Determines whether the result list can show documents that are currently checked out.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ResultDialogFunction">
            <remarks/>
            <summary>
            Function of result list
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ResultDialogFunction.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultDialogFunction.Type">
            <summary>
            The type of the result dialog function.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultDialogFunction.InToolBar">
            <summary>
            If this option is enabled, the result list contains an icon you can use to access the function
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ResultDialogFunction.AsButton">
            <summary>
            If this option is enabled, the result list contains a button with which to call the function
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ResultDialogFunctionType">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.StartNewRetrieval">
            <summary>
            Function for initiating a new search. The search dialog contains the search terms used in the last search.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.LinkSearch">
            <summary>
            Function for displaying documents linked to a document selected in the result list. It opens a dialog listing all the link definitions for that document. When you select one of these definitions, the linked documents are displayed.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DisplayDocument">
            <summary>
            Function for displaying the document in the Viewer.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DisplayInfoBox">
            <summary>
            Function for opening the infobox for a highlighted document. This allows you to view and modify all database entries for the document as well as the contents of the system fields - such as store date and DocID.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.PrintSelectedDocument">
            <summary>
            Function for printing documents that are selected in the result list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DeleteSelectedDocument">
            <summary>
            Function for deleting documents selected in the result list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.CopyToBasket">
            <summary>
            Function that allows you to place a copy of the selected documents in the selected basket / document tray in Windows Client or Web Client.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.Versions">
            <summary>
            Function that allows you to show or hide checked-out documents Checked-out documents can only be viewed by other users. No overlays can be shown, and no stamps added.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.AppendFromBasket">
            <summary>
            Function that allows you to attach selected documents from the selected basket / document tray to a document or database entry in the result list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DownloadAsOriginal">
            <summary>
            The function for downloading a document in the original format from a result list.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DownloadAsPDFWithoutAnno">
            <summary>
            The function for downloading a document from a result list in PDF format without annotations.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.DownloadAsPDFWithAnno">
            <summary>
            The function for downloading a document from a result list in PDF format with annotations.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendAsOriginal">
            <summary>
            The function for sending a document in the original format from a result list as an email attachment.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendAsPDFWithoutAnno">
            <summary>
            The function for sending a document from a result list in PDF format without annotations as an email attachment.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendAsPDFWithAnno">
            <summary>
            The function for sending a document from a result list in PDF format with annotations as an email attachment.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendAsHyperlink">
            <summary>
            The function for sending a document from a result list as a hyperlink in an email.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendResultList">
            <summary>
            The function for sending a currently open result list by email. A hyperlink is inserted in the email with the search query on which the current result list is based.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.EMailReply">
            <summary>
            The function for creating a reply email to an email that is stored in DocuWare. If this function is used in the result list, the email client, e.g. Outlook, opens with a normal reply email.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.EMailReplyAll">
            <summary>
            The function for creating a reply email to all parties for an email that is stored in DocuWare. If this function is used in the result list, the email client, e.g. Outlook, opens with a normal reply-to-all email.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.EMailForward">
            <summary>
            The function for forwarding an email that is stored in DocuWare. If this function is used in the result list, the email client, e.g. Outlook, opens with a normal forward email.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ShowInSeparateViewer">
            <summary>
            The function for opening the documents of a result list in different viewers. A new Viewer is opened for each document when you want to view the document. This makes it easy to compare documents with each other.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.EditDocument">
            <summary>
            The function for editing documents in the original program and saving the changes back to the archived document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ShowWorkflowHistory">
            <summary>
            Function for displaying the workflow tracking which is linked to the document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ExportToCSV">
            <summary>
            Function for exporting the document to CSV.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.CreateREQUEST">
            <summary>
            Functions for storing the documents in a DocuWare Request.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ChangeIndexOfMultipleDocuments">
            <summary>
            Function for selecting several documents, calling up an index field and editing the entry for all selected documents.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.CheckOutToBasket">
            <summary>
            The function for checking out a document from the file cabinet to a basket / document tray and editing it there. During this time, the document is locked in the file cabinet, but can be viewed in read-only mode.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.CheckOutToFileSystem">
            <summary>
            The function for checking out a document from the file cabinet to a Windows file system and editing it there. During this time, the document is locked in the file cabinet, but can be viewed in read-only mode.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ChangeDocumentStatus">
            <summary>
            The function for setting the status of a document version from, e.g. "Out of Date" or "In Progress" to "Up to Date".
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.ShowVersionHistory">
            <summary>
            The function for displaying all versions of a document.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.CopyIntoAnotherFileCabinet">
            <summary>
            Function that allows you to copy a selected document into a different file cabinet.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ResultDialogFunctionType.SendREQUEST">
            <summary>
            Functions for sending a DocuWare Request.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LetterCase">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.LetterCase.Default">
            <summary>
            As in the database
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.LetterCase.UpperCase">
            <summary>
            Upper case letters
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.LetterCase.LowerCase">
            <summary>
            Lower case letters
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogPropertiesTaskList">
            <remarks/>
            <summary>
            Dialog properties specific for Task lists
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTaskList.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTaskList.Conditions">
            <summary>
            The search conditions of the dialog.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTaskList.ConditionString">
            <summary>
            The search conditions of the dialog as string.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTaskList.Private">
            <summary>
            Determines whether the task list is private for the user that created it (by user defined search)
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTaskList.AutoRefresh">
            <summary>
            Determines whether the task list is automatically refreshed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DialogPropertiesTreeView">
            <remarks/>
            <summary>
            Dialog properties specific for Tree list
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.StoreDialogId">
            <summary>
            Id of the store dialog to be used for storing documents in the tree view.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.Icon">
            <summary>
            Gets a string which represents an icon name identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.StoreDialogRelationLink">
            <summary>Gets the Uri of the link for the relation “storeDialog”.</summary>
            <remarks>Returns the uri of the link for the relation “storeDialog” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.GetDialogFromStoreDialogRelation">
            <summary>Calls the HTTP Get method on the link for the relation “storeDialog”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.GetDialogFromStoreDialogRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “storeDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “storeDialog”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DialogPropertiesTreeView.GetDialogFromStoreDialogRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “storeDialog” asynchronously.</summary>
            <remarks>This method follows the link for the relation “storeDialog”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListInfos">
            <remarks/>
            <summary>
            List of select list information objects.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListInfos.SelectLists">
            <summary>
            List of select lists information.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListInfos.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SelectListValuesResult">
            <remarks/>
            <summary>
            Specific properties for each dialog type
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SelectListValuesResult.SingleColumn">
            <summary>
            Get or sets the form field value casted to the index field type.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SelectListValuesResult.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SingleColumnSelectListValues">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.Value">
            <summary>
            Select list values as string.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.TypedValue">
            <summary>
            Select list values.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SingleColumnSelectListValues.GetSingleColumnSelectListValuesFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OrganizationUser">
            <remarks/>
            <summary>
            Defines a user in specific organization
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OrganizationUser.OrganizationId">
            <summary>
            Organization identity
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OrganizationUser.Info">
            <summary>
            Information related to a user
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OrganizationUser.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.UserInfo">
            <remarks/>
            <summary>
            Information related to a user
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserInfo.User">
            <summary>
            User details and settings
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserInfo.LoginInfo">
            <summary>
            Details about user login
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.UserInfo.ValidateRelationLink">
            <summary>Gets the Uri of the link for the relation “validate”.</summary>
            <remarks>Returns the uri of the link for the relation “validate” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UserInfo.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UserInfo.PostToValidateRelationForString(DocuWare.Platform.ServerClient.UserValidation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “validate”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UserInfo.PostToValidateRelationForStringAsync(DocuWare.Platform.ServerClient.UserValidation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “validate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “validate”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.UserInfo.PostToValidateRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.UserValidation)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “validate” asynchronously.</summary>
            <remarks>This method follows the link for the relation “validate”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.LoginInfo">
            <remarks/>
            <summary>
            Details abut user login
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LoginInfo.PasswordExpireNotification">
            <summary>
            Define the period of time when password will expire.
                     This parameter contains a time interval specification in the form:
                     [ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]
                     Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required.
                     For more details check http://msdn.microsoft.com/en-us/library/se73z7b9.aspx
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LoginInfo.BookedLicense">
            <summary>
            License that is booked for the login
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.LoginInfo.ProductType">
            <summary>
            Product type used for login
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.NewUser">
            <remarks/>
            <summary>
            User details.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NewUser.Name">
            <summary>
            The Name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NewUser.DbName">
            <summary>
            The Database Name of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NewUser.Email">
            <summary>
            The Email of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NewUser.NetworkId">
            <summary>
            The NetworkId of the user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.NewUser.Password">
            <summary>
            The Password of the user.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TextField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.MultiLineTextField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.NumberField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DateField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RadioGroup">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OrientationType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnWidthType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.CheckGroup">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DropDownList">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Headline">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SignatureField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AttachFileField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AttachFileInfo">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileSource">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FixedText">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ImageField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AutoNumberField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SpacerField">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormControls">
            <remarks/>
            <summary>
            List of web form fields
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Behaviors">
            <remarks/>
            <summary>
            List of behaviors
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormOptions">
            <remarks/>
            <summary>
            List of options for a check box or radio group
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormOptionsRows">
            <remarks/>
            <summary>
            List of options for a check box or radio group
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WebFormListOptions">
            <remarks/>
            <summary>
            List of options for a drop down
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FormTemplates">
            <remarks/>
            <summary>
            Array of form templates
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Zones">
            <remarks/>
            <summary>
            Array of template Zones
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ToggleBehaviorAction">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubstitutionList">
            <remarks/>
            <summary>
            Defines a substitution list for an organization.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionList.Name">
            <summary>
            Gets the name of the list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionList.Active">
            <summary>
            Gets a value indicating whether the list is active.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionList.Guid">
            <summary>
            Gets the Guid of the list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionList.SubstitutionRulesRelationLink">
            <summary>Gets the Uri of the link for the relation “substitutionRules”.</summary>
            <remarks>Returns the uri of the link for the relation “substitutionRules” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SubstitutionList.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SubstitutionList.GetSubstitutionRulesFromSubstitutionRulesRelation">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionRules”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SubstitutionList.GetSubstitutionRulesFromSubstitutionRulesRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionRules” asynchronously.</summary>
            <remarks>This method follows the link for the relation “substitutionRules”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SubstitutionList.GetSubstitutionRulesFromSubstitutionRulesRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “substitutionRules” asynchronously.</summary>
            <remarks>This method follows the link for the relation “substitutionRules”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubstitutionRule">
            <remarks/>
            <summary>
            Defines a substitution list for an organization.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionRule.Name">
            <summary>
            Gets the name of the rule.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionRule.Active">
            <summary>
            Gets a value indicating whether the rule is active.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SubstitutionRule.Guid">
            <summary>
            Gets the Guid of the rule.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubstitutionLists">
            <remarks/>
            <summary>
            Defines a list from substitution list objects for an organization.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.SubstitutionLists.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SubstitutionRules">
            <remarks/>
            <summary>
            Defines a list from substitution role objects.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DocumentAuditQuery">
            <remarks/>
            <summary>
            Defines a query for requesting document auditing information
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DocumentAuditQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditQuery.Start">
            <summary>
            Gets or sets the starting position of the search.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DocumentAuditQuery.Count">
            <summary>
            Gets or sets the number of the returned items.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Workflows">
            <remarks/>
            <summary>
            List of workflows.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Workflows.Workflow">
            <summary>
            List of workflows.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Workflows.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowTasksCount">
            <remarks/>
            <summary>
            Total tasks count in a workflow or requests
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasksCount.Count">
            <summary>
            Тhe total number of items.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasksCount.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnValues">
            <remarks/>
            <summary>
            Values in columns for a task.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ColumnValue">
            <remarks/>
            <summary>
            A value in a column for a task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnValue.Value">
            <summary>
            Value of the column.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ColumnValue.Id">
            <summary>
            Id of the column.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskFieldValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskFieldValueBase">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ItemChoiceType1">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowTasks">
            <remarks/>
            <summary>
            List of workflow tasks.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.Task">
            <summary>
            List of tasks.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.Count">
            <summary>
            Total tasks count in the workflow.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTasks.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTasks.GetWorkflowTasksFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowTask">
            <remarks/>
            <summary>
            A specific task from the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.TaskOperations">
            <summary>
            Operations which can be executed on the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.ColumnValues">
            <summary>
            Values in columns.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.Decisions">
            <summary>
            Decisions which can be taken for this task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.DefaultDecisionId">
            <summary>
            Id indicating which decision id is the default one.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.Id">
            <summary>
            Task identity
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.InstanceId">
            <summary>
            Instance identity
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.IsRead">
            <summary>
            Indicates whether the task is read
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.AllowDecisionStamp">
            <summary>
            Indicates whether stamps are allowed for taking of the decisions.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.ActivityDescription">
            <summary>
            Description of the current activity.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.DocId">
            <summary>
            Document id connected with the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowTask.ActivityType">
            <summary>
            Current activity type.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowTask.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TaskOperations">
            <remarks/>
            <summary>
            Operations on a workflow task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskOperations.BaseTaskOperations">
            <summary>
            Task operations available for all users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskOperations.ExtendedControllerOperations">
            <summary>
            Operations available for controllers of the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TaskOperations.ExtendedUserOperations">
            <summary>
            Operations available for common users of the task.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TaskOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BaseTaskOperations">
            <remarks/>
            <summary>
            Operations available for all users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseTaskOperations.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseTaskOperations.ReassignedTaskRelationLink">
            <summary>Gets the Uri of the link for the relation “reassignedTask”.</summary>
            <remarks>Returns the uri of the link for the relation “reassignedTask” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseTaskOperations.HistoryRelationLink">
            <summary>Gets the Uri of the link for the relation “history”.</summary>
            <remarks>Returns the uri of the link for the relation “history” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BaseTaskOperations.StampSettingsRelationLink">
            <summary>Gets the Uri of the link for the relation “stampSettings”.</summary>
            <remarks>Returns the uri of the link for the relation “stampSettings” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetWorkflowTaskFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetWorkflowTaskFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetWorkflowTaskFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.PostToReassignedTaskRelationForString(DocuWare.Platform.ServerClient.ReassignmentData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reassignedTask”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.PostToReassignedTaskRelationForStringAsync(DocuWare.Platform.ServerClient.ReassignmentData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reassignedTask” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reassignedTask”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.PostToReassignedTaskRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.ReassignmentData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “reassignedTask” asynchronously.</summary>
            <remarks>This method follows the link for the relation “reassignedTask”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetInstanceHistoryFromHistoryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “history”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetInstanceHistoryFromHistoryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetInstanceHistoryFromHistoryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetDecisionsStampSettingsFromStampSettingsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “stampSettings”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetDecisionsStampSettingsFromStampSettingsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “stampSettings” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stampSettings”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.BaseTaskOperations.GetDecisionsStampSettingsFromStampSettingsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “stampSettings” asynchronously.</summary>
            <remarks>This method follows the link for the relation “stampSettings”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExtendedControllerOperations">
            <remarks/>
            <summary>
            Operations available for controllers of the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExtendedControllerOperations.InstanceRelationLink">
            <summary>Gets the Uri of the link for the relation “instance”.</summary>
            <remarks>Returns the uri of the link for the relation “instance” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.DeleteInstanceRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “instance”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.DeleteInstanceRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “instance” asynchronously.</summary>
            <remarks>This method follows the link for the relation “instance”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.DeleteInstanceRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “instance” asynchronously.</summary>
            <remarks>This method follows the link for the relation “instance”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.GetStreamFromInstanceRelation">
            <summary>Calls the HTTP Get method on the link for the relation “instance”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.GetStreamFromInstanceRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “instance” asynchronously.</summary>
            <remarks>This method follows the link for the relation “instance”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedControllerOperations.GetStreamFromInstanceRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “instance” asynchronously.</summary>
            <remarks>This method follows the link for the relation “instance”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExtendedUserOperations">
            <remarks/>
            <summary>
            Operations available for common users of the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExtendedUserOperations.ReadStatusRelationLink">
            <summary>Gets the Uri of the link for the relation “readStatus”.</summary>
            <remarks>Returns the uri of the link for the relation “readStatus” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedUserOperations.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedUserOperations.PutToReadStatusRelationForString(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedUserOperations.PutToReadStatusRelationForStringAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “readStatus”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExtendedUserOperations.PutToReadStatusRelationForStringAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “readStatus”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ActivityTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ActivityTypeEnum.GeneralTask">
            <summary>
            General task activity
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ActivityTypeEnum.ParallelTask">
            <summary>
            Parallel task activity
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ActivityTypeEnum.UserCredentials">
            <summary>
            User credentials activity
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.ActivityTypeEnum.GeneralError">
            <summary>
            General error activity
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.TasksQuery">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TasksQuery.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TasksQuery.Instances">
            <summary>
            List of instances ids.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TasksQuery.SortOrder">
            <summary>
            Sort order for the task list.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TasksQuery.Start">
            <summary>
            Start position of the search.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TasksQuery.Count">
            <summary>
            Count of the returned items.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.TasksQuery.RemoveLinks">
            <summary>
            Indicates whether the task links should be loaded.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ReadStatus">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecisionsStampSettings">
            <remarks/>
            <summary>
            Workflow decision stamps
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.StampsSettings">
            <summary>
            Workflow stamps settings
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.DecisionStamps">
            <summary>
            Decisions which are present as stamps.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.WorkflowId">
            <summary>
            Workflow identifier
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.InstanceId">
            <summary>
            Instance identifier
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.TaskId">
            <summary>
            Task identifier
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.DecisionsStampSettings.ActivityName">
            <summary>
            Current activity name
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.DecisionsStampSettings.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowStampsSettings">
            <remarks/>
            <summary>
            Stamp settings for a task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.InfoFontFamily">
            <summary>
            Specify the font of the header of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.StampFont">
            <summary>
            Specify the font of the text.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseFrame">
            <summary>
            Indicates whether the stamp has visible frame.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseDate">
            <summary>
            Indicates whether the stamp shows date when stamp is placed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseTime">
            <summary>
            Indicates whether the stamp shows the time when stamp is placed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.IsSignature">
            <summary>
            Indicates whether the signature will be used for the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseUserName">
            <summary>
            Indicates whether stamp shows the user who placed the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseDecisionName">
            <summary>
            Indicates whether the stamp contains the decision name.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowStampsSettings.UseActivityName">
            <summary>
            Indicates whether the stamp contains the activity name.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowDocumentHistory">
            <remarks/>
            <summary>
            A workflow history for a document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowDocumentHistory.InstanceHistory">
            <summary>
            List of history for all instances.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowDocumentHistory.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Instance">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ReassignmentData">
            <remarks/>
            <summary>
            Data to reassign a task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignmentData.ReassignmentList">
            <summary>
            List of next assigned users, roles or substitution rules.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignmentData.Subject">
            <summary>
            Subject of the email which will be send to the new assigned users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignmentData.Body">
            <summary>
            Body of the email which will be send to the new assigned users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ReassignmentData.SendEmail">
            <summary>
            Determines whether an email will be send to the new assigned users.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignedItem">
            <remarks/>
            <summary>
            An assigned item.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AssignedItem.Id">
            <summary>
            User/role/substitution rule identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.AssignedItem.ItemType">
            <summary>
            Type of id.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.AssignedItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.AssignedItemTypeEnum.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.AssignedItemTypeEnum.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.AssignedItemTypeEnum.SubstitutionRule">
            <summary>
            Substitution rule
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Decisions">
            <remarks/>
            <summary>
            Decisions which can be taken for a task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Decisions.Decision">
            <summary>
            List of decisions
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Decisions.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.StampConfirmedData">
            <remarks/>
            <summary>
            Data which is sent when a user confirm a task using a stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampConfirmedData.Position">
            <summary>
            Start point of the stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampConfirmedData.Section">
            <summary>
            Number of the section to set stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampConfirmedData.Page">
            <summary>
            Number of the page to set stamp.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.StampConfirmedData.Layer">
            <summary>
            Layer where the stamp have to be placed.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HistorySteps">
            <remarks/>
            <summary>
            List of history steps for an instance.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.WorkflowRequests">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowRequests.MyTasksRelationLink">
            <summary>Gets the Uri of the link for the relation “myTasks”.</summary>
            <remarks>Returns the uri of the link for the relation “myTasks” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowRequests.MyTasksCountRelationLink">
            <summary>Gets the Uri of the link for the relation “myTasksCount”.</summary>
            <remarks>Returns the uri of the link for the relation “myTasksCount” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowRequests.CreatedWorkflowsRelationLink">
            <summary>Gets the Uri of the link for the relation “createdWorkflows”.</summary>
            <remarks>Returns the uri of the link for the relation “createdWorkflows” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.WorkflowRequests.CreatedWorkflowsCountRelationLink">
            <summary>Gets the Uri of the link for the relation “createdWorkflowsCount”.</summary>
            <remarks>Returns the uri of the link for the relation “createdWorkflowsCount” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetRequestTasksFromMyTasksRelation">
            <summary>Calls the HTTP Get method on the link for the relation “myTasks”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetRequestTasksFromMyTasksRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “myTasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasks”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetRequestTasksFromMyTasksRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “myTasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasks”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToMyTasksRelationForRequestTasks(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “myTasks”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToMyTasksRelationForRequestTasksAsync(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “myTasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasks”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToMyTasksRelationForRequestTasksAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “myTasks” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasks”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromMyTasksCountRelation">
            <summary>Calls the HTTP Get method on the link for the relation “myTasksCount”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromMyTasksCountRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “myTasksCount” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasksCount”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromMyTasksCountRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “myTasksCount” asynchronously.</summary>
            <remarks>This method follows the link for the relation “myTasksCount”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetOwnWorkflowsFromCreatedWorkflowsRelation">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflows”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetOwnWorkflowsFromCreatedWorkflowsRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetOwnWorkflowsFromCreatedWorkflowsRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToCreatedWorkflowsRelationForOwnWorkflows(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createdWorkflows”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToCreatedWorkflowsRelationForOwnWorkflowsAsync(DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createdWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.PostToCreatedWorkflowsRelationForOwnWorkflowsAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.TasksQuery)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “createdWorkflows” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflows”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromCreatedWorkflowsCountRelation">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflowsCount”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromCreatedWorkflowsCountRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflowsCount” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflowsCount”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.WorkflowRequests.GetWorkflowTasksCountFromCreatedWorkflowsCountRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “createdWorkflowsCount” asynchronously.</summary>
            <remarks>This method follows the link for the relation “createdWorkflowsCount”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestTasks">
            <remarks/>
            <summary>
            A list of request tasks for a common user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.Task">
            <summary>
            List of request tasks.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.Count">
            <summary>
            Total number of items.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTasks.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTasks.GetRequestTasksFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestTask">
            <remarks/>
            <summary>
            A request task for a common user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.Decisions">
            <summary>
            List of request decisions.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.Id">
            <summary>
            Task identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.WorkflowId">
            <summary>
            Request identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.DocId">
            <summary>
            Document id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.FcGuid">
            <summary>
            File cabinet id of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.CreateDate">
            <summary>
            Creation date of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.Owner">
            <summary>
            Name of the initiator of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.WorkflowName">
            <summary>
            Name of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.DocumentName">
            <summary>
            Name of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.IsRead">
            <summary>
            Indicates whether the task is read.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.Description">
            <summary>
            Description of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.ReadStatusRelationLink">
            <summary>Gets the Uri of the link for the relation “readStatus”.</summary>
            <remarks>Returns the uri of the link for the relation “readStatus” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestTask.HistoryRelationLink">
            <summary>Gets the Uri of the link for the relation “history”.</summary>
            <remarks>Returns the uri of the link for the relation “history” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetRequestTaskFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetRequestTaskFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetRequestTaskFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.PutToReadStatusRelationForString(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.PutToReadStatusRelationForStringAsync(System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “readStatus”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.PutToReadStatusRelationForStringAsync(System.Threading.CancellationToken,System.IO.Stream)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Put method on the link for the relation “readStatus” asynchronously.</summary>
            <remarks>This method follows the link for the relation “readStatus”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetInstanceHistoryFromHistoryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “history”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetInstanceHistoryFromHistoryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestTask.GetInstanceHistoryFromHistoryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestDecision">
            <remarks/>
            <summary>
            A request decision for a common user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecision.Id">
            <summary>
            Sequential order number of the decision in the request. Decision identifier.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecision.Label">
            <summary>
            Label of the decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecision.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecision.ConfirmRelationLink">
            <summary>Gets the Uri of the link for the relation “confirm”.</summary>
            <remarks>Returns the uri of the link for the relation “confirm” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.GetRequestDecisionFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.GetRequestDecisionFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.GetRequestDecisionFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.PostToConfirmRelationForString(DocuWare.Platform.ServerClient.RequestConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.PostToConfirmRelationForStringAsync(DocuWare.Platform.ServerClient.RequestConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm” asynchronously.</summary>
            <remarks>This method follows the link for the relation “confirm”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecision.PostToConfirmRelationForStringAsync(System.Threading.CancellationToken,DocuWare.Platform.ServerClient.RequestConfirmedData)">
            <param name="dataToSend">The data to send. This data is written into the request body.</param>
            <summary>Calls the HTTP Post method on the link for the relation “confirm” asynchronously.</summary>
            <remarks>This method follows the link for the relation “confirm”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestConfirmedData">
            <remarks/>
            <summary>
            A confirmation data for a request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestConfirmedData.DecisionId">
            <summary>
            Decision id.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestConfirmedData.Comment">
            <summary>
            Value of a field comment in the decision.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OwnWorkflows">
            <remarks/>
            <summary>
            List of requests for the initiator.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.Workflow">
            <summary>
            List of requests created by current user.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.Count">
            <summary>
            Total number of items.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.TimeStamp">
            <summary>
            TimeStamp of the result.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.NextRelationLink">
            <summary>Gets the Uri of the link for the relation “next”.</summary>
            <remarks>Returns the uri of the link for the relation “next” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.PrevRelationLink">
            <summary>Gets the Uri of the link for the relation “prev”.</summary>
            <remarks>Returns the uri of the link for the relation “prev” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflows.FirstRelationLink">
            <summary>Gets the Uri of the link for the relation “first”.</summary>
            <remarks>Returns the uri of the link for the relation “first” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromNextRelation">
            <summary>Calls the HTTP Get method on the link for the relation “next”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromNextRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromNextRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “next” asynchronously.</summary>
            <remarks>This method follows the link for the relation “next”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromPrevRelation">
            <summary>Calls the HTTP Get method on the link for the relation “prev”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromPrevRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromPrevRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “prev” asynchronously.</summary>
            <remarks>This method follows the link for the relation “prev”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromFirstRelation">
            <summary>Calls the HTTP Get method on the link for the relation “first”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromFirstRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflows.GetOwnWorkflowsFromFirstRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “first” asynchronously.</summary>
            <remarks>This method follows the link for the relation “first”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.OwnWorkflow">
            <remarks/>
            <summary>
            A workflow\instance for the initiator of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.TakenDecision">
            <summary>
            List of confirmed requests.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.Id">
            <summary>
            Identifier of the request (instance id) .
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.DocId">
            <summary>
            Document id which is used for start of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.FcGuid">
            <summary>
            File cabinet id of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.CreateDate">
            <summary>
            Creation date of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.WorkflowName">
            <summary>
            Name of the request.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.DocumentName">
            <summary>
            Name of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.SelfRelationLink">
            <summary>Gets the Uri of the link for the relation “self”.</summary>
            <remarks>Returns the uri of the link for the relation “self” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.OwnWorkflow.HistoryRelationLink">
            <summary>Gets the Uri of the link for the relation “history”.</summary>
            <remarks>Returns the uri of the link for the relation “history” if it exists, or <value>null</value> if this link does not exist. The returned link can be absolute or relative. If it is a relative link you must set it in the right context yourself.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetOwnWorkflowFromSelfRelation">
            <summary>Calls the HTTP Get method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetOwnWorkflowFromSelfRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetOwnWorkflowFromSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.DeleteSelfRelation">
            <summary>Calls the HTTP Delete method on the link for the relation “self”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.DeleteSelfRelationAsync">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.DeleteSelfRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Delete method on the link for the relation “self” asynchronously.</summary>
            <remarks>This method follows the link for the relation “self”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetInstanceHistoryFromHistoryRelation">
            <summary>Calls the HTTP Get method on the link for the relation “history”.</summary>
            <returns>The content of the response.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetInstanceHistoryFromHistoryRelationAsync">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.OwnWorkflow.GetInstanceHistoryFromHistoryRelationAsync(System.Threading.CancellationToken)">
            <summary>Calls the HTTP Get method on the link for the relation “history” asynchronously.</summary>
            <remarks>This method follows the link for the relation “history”.</remarks>
            <returns>A task which runs the request.</returns>
            <param name="cancellationToken">The cancellation token to cancel the request.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestDataDecision">
            <remarks/>
            <summary>
            Taken decision visible in the initiator view.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDataDecision.UserName">
            <summary>
            Name of the user who confirmed the task.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDataDecision.DecisionName">
            <summary>
            Contains decision name which has been confirmed.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDataDecision.Comment">
            <summary>
            Value of comment field.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestSettings">
            <remarks/>
            <summary>
            Data to trigger new request.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestSettings.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.Decisions">
            <summary>
            List of decision settings.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.AssignedItem">
            <summary>
            List of assigned users, roles or substitution rules.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.Name">
            <summary>
            Name of the request
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.Description">
            <summary>
            Description of the request
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.IsSequence">
            <summary>
            Determines whether request should be confirmed in sequence.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.IsAny">
            <summary>
            Determines whether request should be confirmed by all users.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.DocId">
            <summary>
            Document id
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.FcGuid">
            <summary>
            Contains file cabinet id of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.DocumentName">
            <summary>
            Name of the document.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestSettings.StampDocument">
            <summary>
            Determines whether an automatic stamp should be placed when a user confirms the request.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.RequestDecisionSettings">
            <remarks/>
            <summary>
            Decision in the request when we create it.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.RequestDecisionSettings.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionSettings.Id">
            <summary>
            Sequential order number of the decision in the request
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionSettings.Label">
            <summary>
            Label of the decision.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.RequestDecisionSettings.IsActive">
            <summary>
            Determines whether the decision is active.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DWSystemVariableName">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecisionStampPlacement">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.DecisionFormFieldValue">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.FileCabinetFields">
            <remarks/>
            <summary>
            List of file cabinet fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.FileCabinetFields.Field">
            <summary>
            List of file cabinet fields.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateDialogExpressionSource">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateDialogExpressionSource.Expression">
            <summary>
            A dialog expression which is used to get the documents to be updated.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.BatchUpdateDocumentsSource">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.BatchUpdateDocumentsSource.Id">
            <summary>
            The ids of the documents to be updated.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ExportQuery">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportQuery.Settings">
            <summary>
            The id of the dialog to be used to update fields which are hidden inside the store dialog.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ExportQuery.Source">
            <summary>
            The documents query that is executed.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ExportQuery.SetProxy(DocuWare.Services.Http.Client.HttpClientProxy)">
            <summary>Sets the HTTP communication proxy which is used in further HTTP communication.</summary>
            <remarks>The HTTP proxy is used to handle the HTTP requests which are created by this instance. The proxy is used in case a request is sent to a URL which is resolved from a link.</remarks>
            <param name="proxy">The <see cref="T:System.Net.Http.HttpClient"/> instance which is used in further HTTP communication.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.SortedFieldsList">
            <remarks/>
            <summary>
            Defines a list of sorted fields.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.SortedFieldsList.OrderBy">
            <summary>
            A list of sorted fields
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.QueryParamaterType">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.QueryParamater">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.QueryParamater.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.QueryParamatersList">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.HttpMethodList">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.HttpMethodList.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.HttpMethodList.IsComplete">
            <summary>
            If this is true than there are no other methods are expected than the specified.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.DocumentContent">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.KeyValuePair">
            <remarks/>
            <summary>
            Contains a key-value pair.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.KeyValuePair.Name">
            <summary>
            The name of the environment variable.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.KeyValuePair.Value">
            <summary>
            The value of the environment variable.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.PageContent">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Content.PageContent.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.PageContent.SizeX">
            <summary>
            The page width in pixel.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.PageContent.SizeY">
            <summary>
            The page height in pixel.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.PageContent.SkewAngle">
            <summary>
            The skew angle in degree denoting the amount by which the document image has to be rotated clockwise in order to match the text shot.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.PageContent.Rotation">
            <summary>
            The rotation angle of the page.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.PageContent.FileTag">
            <summary>
            A tag identifiying the file the page was created from.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.PictureZone">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.RectangleBase">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.TableZone">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.gridTable">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.gridTable.gridCol">
            <summary>
            The widths of columns in twips. Each value is a distance between two grid.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.gridTable.gridRow">
            <summary>
            The widths of rows in twips. Each value is a distance between two grid.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.CellZone">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.TextZone">
            <remarks/>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.TextZone.Ln">
            <summary>
            Contains a single text line.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Line">
            <remarks/>
            <summary>
            A line is a sequence of words.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Space">
            <remarks/>
            <summary>
            Denotes a space.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Content.Space.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.Space.W">
            <summary>
            The width of the space.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Word">
            <remarks/>
            <summary>
            Contains a word with its bounding box.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.SimpleWord">
            <remarks/>
            <summary>
            Contains a word with its bounding box.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Rulerline">
            <remarks/>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.Content.Rulerline.#ctor">
            <summary>
            Creates a new instance of this class
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.LineStyle">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.none">
            <summary>
            The line isn't visible
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.single">
            <summary>
            The line is a single continous line
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.dotted">
            <summary>
            The line consist of many dot
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.thick">
            <summary>
            A thick continous line
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.dash">
            <summary>
            The line consist of many dash
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LineStyle.double">
            <summary>
            Two single continous line
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.BarCodeZone">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.CandidateInfo">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Candidate">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.LanguageDetection">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LanguageDetection.Auto">
            <summary>
            The OCR could automatically detect the language.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LanguageDetection.FallbackSystemCulture">
            <summary>
            The OCR could not automatically detect the language and used the culture of system the OCR was run.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LanguageDetection.FallbackExplicite">
            <summary>
            The OCR could not automatically detect the language and used the languages which are explicitely specified by a user.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LanguageDetection.Explicite">
            <summary>
            The OCR did not try to automatically detect any language. Only the languages which are explicitely specified by a user are used.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.LanguageDetection.DocuWareLanguageIdentifier">
            <summary>
            The language was detected by the majority voting algorithm used inside DocuWare.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Rotation">
            <remarks/>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.Rotation.Rotate0Degree">
            <summary>
            The original page is not rotated.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.Rotation.Rotate90Degree">
            <summary>
            The original page has to be rotated by 90 degree clock wise in order to match the text shot.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.Rotation.Rotate180Degree">
            <summary>
            The original page has to be rotated by 180 degree order to match the text shot.
            </summary>
        </member>
        <member name="F:DocuWare.Platform.ServerClient.Content.Rotation.Rotate270Degree">
            <summary>
            The original page has to be rotated by 270 degree clock wise (that is, 90 degree clock-wise) in order to match the text shot.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.Words">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.SimplePageContent">
            <remarks/>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Content.KeyValuePairs">
            <remarks/>
            <summary>
            Contains a sequence of key-value pairs.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Content.KeyValuePairs.Entry">
            <summary>
            A key-value pair entry.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnection">
            <summary>
            Encapsulates a connection to the platform.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnection.HttpClient">
            <summary>
            Gets the HTTP client.
            </summary>
            <value>
            The HTTP client.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnection.Proxy">
            <summary>
            Gets the proxy.
            </summary>
            <value>
            The proxy.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.#ctor(DocuWare.Platform.ServerClient.ServiceDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuWare.Platform.ServerClient.ServiceConnection"/> class.
            </summary>
            <param name="serviceDescription">The service description.</param>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnection.ServiceDescription">
            <summary>
            Gets the service description.
            </summary>
            <value>
            The service description.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.ReplaceHttpClient(DocuWare.Platform.ServerClient.ServiceConnection)">
            <summary>
            Replaces the HTTP client.
            </summary>
            <param name="otherServiceConnection">The <see cref="T:DocuWare.Platform.ServerClient.ServiceConnection"/> instance whose <see cref="P:DocuWare.Platform.ServerClient.ServiceConnection.HttpClient"/> instance is used for further communucation.</param>
            <remarks>After the function returns, all requests from all objects created by this <see cref="T:DocuWare.Platform.ServerClient.ServiceConnection"/> instance 
            are sent through the new <see cref="P:DocuWare.Platform.ServerClient.ServiceConnection.HttpClient"/> instance. Then both <paramref name="otherServiceConnection"/> and this <see cref="T:DocuWare.Platform.ServerClient.ServiceConnection"/> instance 
            share the same <see cref="P:DocuWare.Platform.ServerClient.ServiceConnection.HttpClient"/> instance.
            </remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.ReplaceHttpClient(System.Net.Http.HttpClient)">
            <summary>
            Replaces the HTTP client.
            </summary>
            <param name="httpClient">The HTTP client.</param>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.DisconnectAsync">
            <summary>
            Disconnects this instance.
            </summary>
            <returns>A task which disconnects the client.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.GetOrganizationsAsync">
            <summary>
            Gets the organizations asynchronous.
            </summary>
            <returns>The list of available organizations.</returns>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnection.Organizations">
            <summary>
            Gets the organizations.
            </summary>
            <value>
            The organizations.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnection.OrganizationsAsync">
            <summary>
            Gets the organizations asynchronously.
            </summary>
            <value>
            The organizations.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.GetXml``1(System.String)">
            <summary>
            Gets the XML from the specified uri.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uri">The URI.</param>
            <returns>The parsed data.</returns>
            <exception cref="T:DocuWare.Services.Http.Client.HttpClientRequestException">Thrown, if the request failed. In this case, you can inspect <see cref="P:DocuWare.Services.Http.Client.HttpClientRequestException.Error"/>.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.GetXmlAsync``1(System.String)">
            <summary>
            Gets the XML from the specified uri asynchronously.
            </summary>
            <typeparam name="T">The type of the response.</typeparam>
            <param name="uri">The URI.</param>
            <returns>The parsed data.</returns>
            <exception cref="T:DocuWare.Services.Http.Client.HttpClientRequestException">Thrown, if the request failed. In this case, you can inspect <see cref="P:DocuWare.Services.Http.Client.HttpClientRequestException.Error"/>.</exception>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,System.String,System.String,DocuWare.Platform.ServerClient.ServiceConnectionLoginData)">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="serviceConnectionData">The service connection data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateTrustedAsync(System.Uri,System.String,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="impersonatedUser">Name of the DW user.</param>
            <param name="trustedUser">Name of a trusted user.</param>
            <param name="password">The password.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateTrustedAsync(System.Uri,System.String,System.String,System.String,DocuWare.Platform.ServerClient.ServiceConnectionLoginData)">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="impersonatedUser">Name of the DW user.</param>
            <param name="trustedUser">Name of a trusted user.</param>
            <param name="password">The password.</param>
            <param name="serviceConnectionData">The service connection data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="token">The login token.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application.
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,System.String,DocuWare.Platform.ServerClient.ServiceConnectionTokenLoginData)">
            <summary>
            Creates a connection for the specified service URI asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="token">The login token.</param>
            <param name="serviceConnectionTokenLoginData">The service connection token login data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI without a log in. The connection is created asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application.
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateAsync(System.Uri,DocuWare.Platform.ServerClient.ServiceConnectionTransportData)">
            <summary>
            Creates a connection for the specified service URI without a log in. The connection is created asynchronously.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="serviceConnectionTransportData">The service connection transport data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthenticationAsync(System.Uri,System.Net.ICredentials,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpClientHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI using NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="credentials">The credentials. This should be some credentials which can be used in the NTLM authentication protocol.</param>
            <param name="httpClientHandler">The HTTP client handler.</param>
            <param name="licenseType">Type of the license to lock.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A task which is creating a proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthenticationAsync(System.Uri,System.Net.ICredentials,DocuWare.Platform.ServerClient.ServiceConnectionLoginData)">
            <summary>
            Creates a connection for the specified service URI using NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="credentials">The credentials. This should be some credentials which can be used in the NTLM authentication protocol.</param>
            <param name="serviceConnectionLoginData">The service connection login data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthenticationAsync(System.Uri,System.String,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpClientHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI using NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domain">The domain.</param>
            <param name="licenseType">Type of the license to lock.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <param name="httpClientHandler">The HTTP client handler.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthenticationAsync(System.Uri,System.String,System.String,System.String,DocuWare.Platform.ServerClient.ServiceConnectionLoginData)">
            <summary>
            Creates a connection for the specified service URI using NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domain">The domain.</param>
            <param name="serviceConnectionLoginData">The service connection login data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthenticationAsync(System.Uri,System.String,System.String,DocuWare.Platform.ServerClient.ServiceConnectionLoginData)">
            <summary>
            Creates a connection for the specified service URI using NTLM authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="serviceConnectionLoginData">The service connection login data.</param>
            <returns>
            A task which is creating a proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.Create(System.Uri,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateTrusted(System.Uri,System.String,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="impersonatedUser">Name of the impersonated(DW) user.</param>
            <param name="trustedUser">Name of a trusted user.</param>
            <param name="password">The password.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.Create(System.Uri,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="token">The login token.</param>
            <param name="licenseType">Type of the license.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.Create(System.Uri,System.Net.Http.HttpMessageHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI without a log in.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="httpClientHandler">The HTTP message handler.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthentication(System.Uri,System.Net.ICredentials,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpClientHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI using windows authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="credentials">The credentials.</param>
            <param name="httpClientHandler">The HTTP client handler.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="licenseType">Type of the license to lock.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <returns>A proxy which handles further requests.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.CreateWithWindowsAuthentication(System.Uri,System.String,System.String,System.String,System.String,System.Nullable{DocuWare.Platform.ServerClient.DWProductTypes},System.Net.Http.HttpClientHandler,System.Net.Http.Headers.ProductInfoHeaderValue[])">
            <summary>
            Creates a connection for the specified service URI using windows authentication.
            </summary>
            <param name="serviceUri">The service URI.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domain">The domain.</param>
            <param name="licenseType">Type of the license to lock.</param>
            <param name="organization">The organization to connect. You do no need to specify this parameter in case there is only a single organization in the system you want to connect to.</param>
            <param name="userAgent">The parts of the user agent header. You should specify these values in order to identify you application. 
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</param>
            <param name="httpClientHandler">The HTTP client handler.</param>
            <returns>
            A proxy which handles further requests.
            </returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnection.SetHostId(System.String)">
            <summary>
            Sets the identifier of the machine the .NET API client is running.
            </summary>
            <param name="hostId">The host identifier.</param>
            <remarks>The host identifier is used by the license management to faster reuse licenses for users working on the same machine.
            In a .NET or Mono environment the host identifier is automatically set. If you are in a different environment, you should explicitely set the
            host identifier by calling this function during the initialization phase of your application.</remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnectionTransportData">
            <summary>
            Definitions of the HTTP message handling and message processing.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionTransportData.UserAgent">
            <summary>
            Gets or sets additional user agents.
            </summary>
            <value>
            The user agent.
            </value>
            <remarks>You should specify these values in order to identify you application.
            If this parameter is set to <c>null</c> then the process name and version of you application is used as user agent string. If you do not want to submit any user agent, you must set this parameter to an empty array.</remarks>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionTransportData.HttpClientHandler">
            <summary>
            Gets or sets the HTTP client handler.
            </summary>
            <value>
            The HTTP client handler.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionTransportData.AcceptLanguage">
            <summary>
            Gets or sets the accept language header.
            </summary>
            <value>
            The accept language header.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionTransportData.CancellationToken">
            <summary>
            Gets or sets the cancellation token.
            </summary>
            <value>
            The cancellation token.
            </value>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData">
            <summary>
            License related connection creation data.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData.Transport">
            <summary>
            Gets or sets the transport data.
            </summary>
            <value>
            The transport data.
            </value>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData.LicenseType">
            <summary>
            Gets or sets the type of the license used for the login.
            </summary>
            <value>
            The type of the license.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData.AddLoginFormData(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds the login form data.
            </summary>
            <param name="formData">The form data.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnectionTokenLoginData">
            <summary>
            Provides additional date to log in with a token.
            </summary>
            <seealso cref="T:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData" />
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnectionLoginData">
            <summary>
            Provides additional date to log in with user credentials.
            </summary>
            <seealso cref="T:DocuWare.Platform.ServerClient.ServiceConnectionLicenseBoundData" />
        </member>
        <member name="P:DocuWare.Platform.ServerClient.ServiceConnectionLoginData.Organization">
            <summary>
            Gets or sets the organization which the client wants to log in.
            </summary>
            <remarks>In case there is only a single organization in the system or in case the client wants to connect with a system account, the value can be set to null.
            </remarks>
            <value>
            The organization.
            </value>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionLoginData.AddLoginFormData(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds the login form data.
            </summary>
            <param name="formData">The form data.</param>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.GetFileCabinet(DocuWare.Platform.ServerClient.ServiceConnection,System.String)">
            <summary>
            Gets a <see cref="T:DocuWare.Platform.ServerClient.FileCabinet"/> instance directly.
            </summary>
            <param name="serviceConnection"></param>
            <param name="fileCabinetId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.GetAllFileCabinets(System.Collections.Generic.IEnumerable{DocuWare.Platform.ServerClient.Organization})">
            <summary>
            Gets all file cabinets.
            </summary>
            <param name="organizations">The organizations.</param>
            <returns>The list of all file cabinets.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.CreateTemplateUri(DocuWare.Platform.ServerClient.ServiceConnection,System.String,System.Object)">
            <summary>
            Creates the template URI.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="templateName">Name of the template.</param>
            <param name="paramaters">The paramaters.</param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.CreateTemplateUri(DocuWare.Platform.ServerClient.ServiceConnection,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Creates the template URI.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="templateName">Name of the template.</param>
            <param name="paramaters">The paramaters.</param>
            <returns></returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.CreatePermanentUrlAsync(DocuWare.Platform.ServerClient.ServiceConnection,System.String)">
            <summary>
            Creates a permanent URL asynchronously.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="url">The URL.</param>
            <returns>A task which creates a URL with an authenticated user information inside.</returns>
            <remarks>Use this function to take an URL and append some information about the currently authenticated user. The created URL can then be taken to access the ressource without needed to login.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.ServiceConnectionExtensions.GetPermanentUrl(DocuWare.Platform.ServerClient.ServiceConnection,System.String)">
            <summary>
            Creates a permanent URL.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="url">The URL.</param>
            <returns>An URL with an authenticated user information inside.</returns>
            <remarks>Use this function to take a URL and append some information about the currently authenticated user. The created URL can then be taken to access the ressource without needed to login.</remarks>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.ServiceConnector">
            <summary>
            Connects to the Platform service.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.Localization.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Localization.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Localization.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Localization.Strings.UnspecifiedErrorReson">
            <summary>
              Looks up a localized string similar to The reason for this problem is not specified by the service..
            </summary>
        </member>
        <member name="P:DocuWare.Platform.ServerClient.Localization.Strings.UnspecifiedErrorResonStatus">
            <summary>
              Looks up a localized string similar to Not known.
            </summary>
        </member>
        <member name="T:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase">
            <summary>
            Some extensions for handling responses which can be stored as files.
            </summary>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.CreateEasyCheckoutFileName(DocuWare.Services.Http.DeserializedHttpResponse{System.IO.Stream},System.String,System.Int32)">
            <summary>
            Creates the name of the easy-checkout file.
            </summary>
            <param name="checkoutResponse">The checkout operation response.</param>
            <param name="fileCabinetId">The file cabinet identifier.</param>
            <param name="docId">The document identifier.</param>
            <returns>The file name which contains all information encoded in order to check in the file again.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.EasyCheckOutToFileSystemAsync(DocuWare.Platform.ServerClient.ServiceConnection,System.String,System.Int32)">
            <summary>
            Checks out the specified file and saves it to the file system asynchronously.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="fileCabinetId">The file cabinet identifier.</param>
            <param name="docId">The document identifier.</param>
            <returns>A task producung an instance of <see cref="T:DocuWare.Platform.ServerClient.EasyCheckoutResult"/>.</returns>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.EasyCheckInFromFileSystemAsync(DocuWare.Platform.ServerClient.ServiceConnection,DocuWare.Services.Http.Client.IFileUploadInfo)">
            <summary>
            Checks the specified file in.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="fileToCheckin">The file to checkin.</param>
            <returns>A task producing the checked-in response of the check-in operation.</returns>
            <remarks>The name of <paramref name="fileToCheckin"/> must be taken from <see cref="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.EasyCheckOutToFileSystemAsync(DocuWare.Platform.ServerClient.ServiceConnection,System.String,System.Int32)"/>.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.EasyCheckInFromFileSystemAsync(DocuWare.Platform.ServerClient.ServiceConnection,DocuWare.Services.Http.Client.IFileUploadInfo,DocuWare.Platform.ServerClient.CheckInActionParameters)">
            <summary>
            Checks the specified file in.
            </summary>
            <param name="serviceConnection">The service connection.</param>
            <param name="fileToCheckin">The file to checkin.</param>
            <param name="checkInParams">The check in parameters.</param>
            <returns>A task producing the checked-in response of the check-in operation.</returns>
            <remarks>The name of <paramref name="fileToCheckin"/> must be taken from <see cref="M:DocuWare.Platform.ServerClient.EasyCheckoutCheckinExtensionsBase.EasyCheckOutToFileSystemAsync(DocuWare.Platform.ServerClient.ServiceConnection,System.String,System.Int32)"/>.</remarks>
        </member>
        <member name="M:DocuWare.Platform.ServerClient.TarStream.EndTarFile(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:DocuWare.Services.Http.Client.ErrorProcessing">
            <summary>
            A helper class to handle errors.
            </summary>
        </member>
        <member name="M:DocuWare.Services.Http.Client.ErrorProcessing.ExtractErrorMessage(DocuWare.Services.Http.Client.HttpClientRequestException)">
            <summary>
            Extracts the error message from the exception.
            </summary>
            <param name="httpProcessingException">The HTTP processing exception.</param>
            <returns>The error message of the exception.</returns>
        </member>
    </members>
</doc>
